Directory structure:
└── vuyani-magibisela-vuyanim01/
    ├── README.md
    ├── cline_docs/
    │   ├── codebaseSummary.md
    │   ├── currentTask.md
    │   ├── projectRoadmap.md
    │   ├── ProjectStructure.txt
    │   ├── styleAesthetic.md
    │   ├── techStack.md
    │   └── userInstructions/
    │       └── project_page_Implementation.md
    └── portfolio-website/
        ├── composer.json
        ├── .gitignore
        ├── .htaccess
        ├── app/
        │   ├── config/
        │   │   ├── config.php
        │   │   └── database.php
        │   ├── controllers/
        │   │   ├── AdminController.php
        │   │   ├── AuthController.php
        │   │   ├── BaseController.php
        │   │   ├── BlogController.php
        │   │   ├── ClientsController.php
        │   │   ├── ContactController.php
        │   │   ├── HomeController.php
        │   │   └── ProjectsController.php
        │   ├── core/
        │   │   ├── App.php
        │   │   ├── Database.php
        │   │   ├── Helpers.php
        │   │   └── Router.php
        │   ├── data/
        │   │   └── blog_dummy_data.php
        │   ├── models/
        │   │   ├── BaseModel.php
        │   │   ├── BlogPost.php
        │   │   ├── Client.php
        │   │   ├── Contact.php
        │   │   ├── Project.php
        │   │   ├── Resource.php
        │   │   └── User.php
        │   └── views/
        │       ├── admin/
        │       │   ├── blog.php
        │       │   ├── dashboard.php
        │       │   ├── projects.php
        │       │   └── resources.php
        │       ├── auth/
        │       │   ├── login.php
        │       │   └── register.php
        │       ├── blog/
        │       │   ├── article.php
        │       │   ├── index.php
        │       │   └── resources.php
        │       ├── clients/
        │       │   ├── freelance.php
        │       │   ├── index.php
        │       │   └── main_employment.php
        │       ├── contact/
        │       │   └── index.php
        │       ├── home/
        │       │   └── index.php
        │       ├── layouts/
        │       │   ├── admin.php
        │       │   └── main.php
        │       ├── partials/
        │       │   ├── footer.php
        │       │   └── header.php
        │       └── projects/
        │           ├── app_dev.php
        │           ├── digital_design.php
        │           ├── game_dev.php
        │           ├── index.php
        │           ├── maker_projects.php
        │           ├── project_detail.php
        │           └── web_dev.php
        ├── public/
        │   ├── index.php
        │   ├── test-db.php
        │   ├── .htaccess
        │   ├── css/
        │   │   ├── main.css
        │   │   ├── responsive.css
        │   │   └── themes/
        │   │       ├── dark.css
        │   │       └── light.css
        │   ├── images/
        │   │   └── favicon/
        │   │       ├── about.txt
        │   │       └── site.webmanifest
        │   └── js/
        │       ├── app.js
        │       ├── blog.js
        │       ├── contact.js
        │       ├── mobile-nav.js
        │       ├── project-detail.js
        │       ├── projects.js
        │       ├── theme.js
        │       └── components/
        │           ├── animations.js
        │           └── navigation.js
        └── vendor/
            ├── autoload.php
            └── composer/
                ├── autoload_classmap.php
                ├── autoload_namespaces.php
                ├── autoload_psr4.php
                ├── autoload_real.php
                ├── autoload_static.php
                ├── ClassLoader.php
                └── LICENSE

================================================
FILE: README.md
================================================
# Vuyani Magibisela Portfolio Website

A modern, responsive portfolio website showcasing the professional work, skills, and expertise of Vuyani Magibisela as an ICT Trainer, Web/App Developer, Maker, and 3D Artist.

## Project Overview

This portfolio website is built using a custom PHP MVC framework with a focus on clean design, responsive layouts, and optimal user experience across all devices. The site features a light/dark mode theme switcher and a mobile-friendly navigation system.

### Key Features

- **Custom MVC Architecture**: Hand-crafted PHP framework for optimal control and performance
- **Responsive Design**: Mobile-first approach ensuring optimal viewing on all devices
- **Dark/Light Mode**: User preference-based theme switching with cookie persistence
- **Modern UI/UX**: Clean, minimalist design with subtle animations and transitions
- **Content Sections**: Home, Clients, Projects, Blog, and Contact pages

## Technology Stack

### Backend
- PHP 7.4+ (Custom MVC Framework)
- MySQL (PDO)

### Frontend
- HTML5 & CSS3
- Vanilla JavaScript (ES6+)
- GSAP for animations
- Font Awesome for icons

### Infrastructure
- Apache Server (XAMPP)
- Git version control

## Installation

### Prerequisites
- PHP 7.4 or higher
- MySQL 5.7 or higher
- Apache with mod_rewrite enabled
- Composer (optional, for future dependencies)

### Setup Instructions

1. **Clone the repository**
   ```bash
   git clone https://github.com/yourusername/vuyani-portfolio.git
   cd vuyani-portfolio
   ```

2. **Set up the database**
   - Create a MySQL database named `vuyanim`
   - Import the SQL file from `database/init.sql` (if available)
   - Update database credentials in `app/config/database.php`

3. **Configure the webserver**
   - Point your webserver to the `public` directory
   - Ensure mod_rewrite is enabled
   - Make sure `.htaccess` files are allowed

4. **Update base URL**
   - Edit `app/config/config.php` and update the `$baseUrl` to match your environment

5. **File permissions**
   - Ensure the `public/resources` directory is writable if you plan to upload files

6. **Test the installation**
   - Navigate to the site in your web browser
   - You should see the homepage without any errors

## Project Structure

```
portfolio-website/
├── app/                     # Application code
│   ├── config/              # Configuration files
│   ├── controllers/         # Controller classes
│   ├── core/                # Framework core classes
│   ├── models/              # Data models
│   └── views/               # View templates
├── cline_docs/              # Project documentation
├── database/                # Database migrations and seeds
├── public/                  # Publicly accessible files
│   ├── css/                 # Stylesheets
│   ├── js/                  # JavaScript files
│   ├── images/              # Image assets
│   ├── fonts/               # Custom fonts
│   ├── resources/           # Downloadable resources
│   ├── .htaccess            # Apache config
│   └── index.php            # Application entry point
└── README.md                # This file
```

## Development Guidelines

### Coding Standards
- Follow PSR-4 for autoloading
- Use camelCase for methods and variables
- Use PascalCase for classes
- Use snake_case for view files

### CSS Organization
- Base styles: General typography and resets
- Layout components: Structural elements
- Modules: Reusable components
- Pages: Page-specific styles
- Themes: Light/dark mode variations
- Media queries: Responsive adjustments

### Git Workflow
- Use feature branches for new functionality
- Create pull requests for code review
- Maintain a clean commit history with descriptive messages

## Features in Development

Current development is focused on:
- Projects page implementation
- Blog functionality
- Contact form with email integration
- Authentication system for admin access
- Admin panel for content management

## Credits

- Design & Development: Vuyani Magibisela
- Icons: Font Awesome
- Animations: GSAP (GreenSock Animation Platform)

## License

[MIT License](https://opensource.org/licenses/MIT)

Copyright (c) 2025 Vuyani Magibisela

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


================================================
FILE: cline_docs/codebaseSummary.md
================================================
## Codebase Summary

### Key Components and Their Interactions
The application follows a custom MVC pattern. `public/index.php` initializes the core components, including the `Router`, which handles URL routing through `.htaccess`. Controllers in `app/controllers/` interact with Models in `app/models/`, utilizing the `Database` class (`app/core/Database.php`) for MySQL operations. Views are rendered through `app/views/`, with partials like `header.php` and `footer.php` included in the main layout (`main.php`). `BaseController` and `BaseModel` provide reusable functionality across the application.

### Data Flow
-   Request -> `index.php` -> `App` -> `Router` -> Controller -> Model -> Database -> Model -> Controller -> View -> Response.

### External Dependencies
-   The application is primarily self-contained, relying on PHP core functions and PDO.

### Recent Significant Changes
-   Initial project structure setup and documentation creation.
-   Implemented the Home page view (`app/views/home/index.php`).
-   Refactored header and footer into partials (`app/views/partials/header.php`, `app/views/partials/footer.php`) included in the main layout (`app/views/layouts/main.php`).
-   Fixed a path resolution error in `main.php` and `header.php` by replacing `__DIR__ . '/../../config/config.php'` with `dirname(__DIR__, 2) . '/config/config.php'`. This ensures cross-platform compatibility and resolves "Permission denied" errors.
-   Added a safety check in `footer.php` to ensure `$baseUrl` is available.
-   Ensured consistent path handling by using `dirname(__DIR__)` for relative paths to partials and other view files.

### Blog Section Implementation
-   **Controllers Created:**
    -   `BlogController.php` - Main controller handling all blog functionality
        -   `index()` - Main blog listing page with featured posts
        -   `article($slug)` - Individual article display with view tracking
        -   `resources()` - Downloadable resources page
        -   `downloadResource($resourceId)` - Handle file downloads with authentication
        -   `category($slug)` - Category-filtered blog posts
-   **Models Developed:**
    -   `BlogPost.php` - Handles blog post data operations
        -   `getRecentPosts()` - Fetch latest published posts
        -   `getPostBySlug()` - Get single post with tags and author info
        -   `getRelatedPosts()` - Find related posts by category
        -   `incrementViews()` - Track post view counts
        -   `getFeaturedPosts()` - Get featured posts for homepage
        -   `getPostsByCategory()` - Filter posts by category
    -   `Resource.php` - Manages downloadable resources
        -   `getAllPublished()` - Get all published resources
        -   `getById()` - Fetch specific resource details
        -   `incrementDownloads()` - Track download statistics
-   **Views (Templates) Created:**
    -   `blog/index.php` - Main blog listing page
        -   Featured posts grid
        -   Recent posts with pagination
        -   Sidebar with categories, newsletter signup, and resources
        -   Responsive grid layout
    -   `blog/article.php` - Single article page
        -   Full article content with rich formatting
        -   Author bio section with social links
        -   Social sharing buttons (Twitter, Facebook, LinkedIn)
        -   Tags display and related posts
        -   Breadcrumb navigation
    -   `blog/resources.php` - Downloads/resources page
        -   Filterable resource grid
        -   File type indicators and download counts
        -   Login-protected resources
        -   Resource metadata (file size, type, downloads)
-   **Database Configuration Enhanced:**
    -   Updated `Database.php` - Improved connection handling
        -   Singleton pattern for database connections
        -   Robust error handling and logging
        -   Configuration loading from separate file
        -   Connection persistence and cleanup
    -   Enhanced `database.php` config - Added charset and PDO options
        -   UTF-8 support for international content
        -   Proper PDO error modes and fetch settings
-   **Styling & Design (CSS):**
    -   Comprehensive blog styles added to `main.css`
        -   Blog header and navigation - Clean, centered layout
        -   Featured posts grid - Card-based design with hover effects
        -   Blog content layout - Two-column design (content + sidebar)
        -   Article pages - Typography-focused single-column layout
        -   Sidebar widgets - Newsletter, categories, and resources
        -   Resources page - Filterable grid with file type indicators
        -   Dark/light mode support - Full theme compatibility
        -   Responsive design - Mobile-first approach with breakpoints
        -   Animations and transitions - Smooth hover effects and loading animations
-   **JavaScript Functionality:**
    -   `blog.js` - Interactive blog features
        -   GSAP animations - Staggered loading animations for posts and widgets
        -   Newsletter subscription - Form handling with success feedback
        -   Resource filtering - Dynamic filtering by resource type
        -   Image lightbox - Click-to-expand images in articles
        -   Smooth scrolling - Enhanced navigation within articles
        -   Social sharing - Functional share buttons
-   **Dummy Data System:**
    -   `blog_dummy_data.php` - Comprehensive test data
        -   5 detailed blog posts with full content (3D modeling, CSS Grid, Arduino, Typography, PWA)
        -   5 downloadable resources with metadata
        -   Featured posts selection
        -   Categories and tags structure
        -   Author information and publication dates

### User Feedback Integration and Its Impact on Development
-   Not applicable yet.



================================================
FILE: cline_docs/currentTask.md
================================================
## Summary of Recent Fixes

### Problem
The error was caused by an incorrect path resolution in `main.php`. The original path `__DIR__ . '/../../config/config.php'` was creating an invalid path with mixed directory separators, causing a "Permission denied" error.

### Solution
Replaced the problematic path resolution with `dirname(__DIR__, 2) . '/config/config.php'`. This is more reliable, cross-platform compatible, and has cleaner syntax.

### Key Changes
- `main.php`: Changed `require_once __DIR__ . '/../../config/config.php';` to `require_once dirname(__DIR__, 2) . '/config/config.php';`
- `header.php`: Same path fix applied for consistency
- `footer.php`: Added a safety check to ensure `$baseUrl` is available
- Consistent path handling: Used `dirname(__DIR__)` for relative paths to partials and other view files

## Current Objectives

- Implement the "Blog" page functionality and view.

## Context

- The Home page is complete and functional with proper responsive design.
- The Clients page has been successfully implemented with both desktop and mobile views.
- Mobile navigation with burger menu has been implemented across the site.
- Dark/light mode switching now functions correctly on all existing pages.
- The projects section has been successfully implemented with both desktop and mobile views.

## Current Problems

- Fatal error: Declaration of App\Models\Resource::getById($id) must be compatible with App\Models\BaseModel::getById($table, $id) in D:\xampp\htdocs\vuyaniM01\portfolio-website\app\models\Resource.php on line 44

## Next Steps

1.  **Blog Post Creation:**
    -   Implement the ability to create new blog posts.
    -   Include fields for title, content, author, and date.
2.  **Blog Post Display:**
    -   Display blog posts on the main blog page.
    -   Implement pagination for a large number of posts.
3.  **Individual Blog Post View:**
    -   Create a separate view for individual blog posts.
    -   Display the full content of the post, author, and date.
4.  **Styling and Design:**
    -   Ensure the blog page and individual post views are visually appealing.
    -   Maintain consistent styling with the rest of the site.
5.  **Dark/Light Mode Support:**
    -   Ensure the blog page and all its components support dark/light mode switching.
    -   Test the theme toggle functionality on the blog page.
6.  **Testing:**
    -   Test all navigation links and routes to ensure they load the correct pages.
    -   Verify that the blog page and individual posts display correctly on different screen sizes.
    -   Test the dark/light mode toggle on the blog page.



================================================
FILE: cline_docs/projectRoadmap.md
================================================
## Project Roadmap

### High-Level Goals
- [x] Define project scope and objectives
- [x] Design the user interface and user experience
- [x] Implement core features (Home) - Completed
- [x] Restructure frontend for better navigation and user experience
- [x] Implement core features (Clients)
- [ ] Implement core features (Projects, Blog, Contact, Admin, Auth)
- [ ] Integrate with external APIs (if applicable)
- [ ] Deploy the application

### Key Features
- [x] Feature 1 - Home - Completed on April 28, 2025
- [x] Feature 2 - Clients - Completed on April 28, 2025
- [ ] Feature 3 - Projects (On Hold)
- [x] Feature 4 - Blog (In Progress)
- [ ] Feature 5 - Contact
- [ ] Feature 6 - Auth
- [ ] Feature 7 - Admin

### Completion Criteria
- [ ] All core features are implemented
- [ ] User interface is functional and user-friendly
- [ ] Application is deployed and accessible
- [ ] Mobile and desktop responsive design implemented for all pages

### Completed Tasks
- [x] Setup documentation structure
- [x] Implement core features (Home)
- [x] Implement Clients page with responsive design
- [x] Implement mobile burger menu navigation
- [x] Configure proper dark/light mode switching
- [x] Fixed path resolution error in main.php and header.php

### Progress Tracker
- [x] Task 1 (Home Page): [ ] In Progress / [x] Completed
- [x] Task 2 (Clients Page): [ ] In Progress / [x] Completed
- [ ] Task 3 (Projects Page): [ ] In Progress / [ ] On Hold
- [x] Task 4 (Blog Page): [x] In Progress / [ ] Completed
- [ ] Task 5 (Contact Page): [ ] In Progress / [ ] Completed
- [ ] Task 6 (Authentication): [ ] In Progress / [ ] Completed
- [ ] Task 7 (Admin Panel): [ ] In Progress / [ ] Completed

### Future Considerations
- Consider implementing a content management system (CMS) for blog posts and portfolio projects
- Evaluate integration with social media platforms for wider reach
- Plan for search engine optimization (SEO) implementation
- Consider adding a download section for resources like tutorials, templates, etc.



================================================
FILE: cline_docs/ProjectStructure.txt
================================================
vuyaniM01/
├── cline_docs/
│   ├── userInstructions/
│   └── project_page_Implementation.md # Projects Page Implementation Instructions
├── codebaseSummary.md
├── currentTask.md
├── projectRoadmap.md
├── styleAesthetic.md
└── techStack.md
├── portfolio-website/
│   ├── app/
│   │   ├── config/
│   │	 │ 		├── config.php
│   │   │		└── database.php #Database Configuration
│   │   ├── controllers/
│   │   │		├── AdminController.php
│   │   │		├── AuthController.php
│   │   │		├── BaseController.php
│   │   │		├── BlogController.php
│   │   │		├── ClientsController.php # Corrected namespace
│   │   │		├── ContactController.php
│   │   │		├── HomeController.php
│   │   │		└── ProjectsController.php
│   │   ├── core/
│   │   │		├── App.php
│   │   │		├── Database.php
│   │   │		├── Helpers.php
│   │   │		└── Router.php
│   │   ├── data/
│   │   │		└── blog_dummy_data.php # Dummy data for blog posts
│   │   ├── models/
│   │   │		├── BaseModel.php
│   │   │		├── BlogPost.php
│   │   │		├── Client.php
│   │   │		├── Contact.php
│   │   │		├── Project.php
│   │   │		├── Resource.php
│   │   │		└── User.php
│   │   └── views/
│   │       ├── admin/
│   │       │		├── blog.php
│   │       │		├── dashboard.php
│   │       │		├── projects.php
│   │       │		└── resources.php
│   │       ├── auth/
│   │       │		├── login.php
│   │       │		└── register.php
│   │       ├── blog/
│   │       │		├── article.php
│   │       │		├── index.php
│   │       │		└── resources.php
│   │       ├── clients/
│   │       │		├── freelance.php
│   │       │		├── index.php
│   │       │		└── main_employment.php
│   │       ├── contact/
│   │       │		└── index.php
│   │       ├── home/
│   │       │		└── index.php
│   │       ├── layouts/
│   │       │		├── admin.php
│   │       │		└── main.php
│   │       ├── partials/
│   │       │		├── footer.php # Make sure $baseUrl is available
│   │       │		└── header.php # Function to check if current page matches the given path
│   │       │		└── projects/
│   │       ├── app_dev.php
│   │       		├── digital_design.php
│   │       		├── game_dev.php
│   │       		├── index.php
│   │       		├── maker_projects.php
│   │       		├── project_detail.php
│   │       		└── web_dev.php
│   ├── database/
│   │   ├── migrations/
│   │   └── seeds/
│   ├── public/
│   │   ├── css/
│   │   │   ├── themes/
│   │   │   ├── dark.css
│   │   │   └── light.css
│   │   ├── main.css # Reset and base styles
│   │   └── responsive.css # Mobile Navigation Styles
│   │   ├── fonts/
│   │   ├── images/
│   │   │   ├── blog/
│   │   │   ├── clients/
│   │   │   ├── favicon/
│   │   │   │		├── about.txt # fonts.gstatic.com/s/ojuju/v4/7r3bqXF7v9ApbrMih3jYQBVm9-n_rZ4552FRLYeruQ.ttf
│   │   │   │		├── android-chrome-192x192.png
│   │   │   │		├── android-chrome-512x512.png
│   │   │   │		├── apple-touch-icon.png
│   │   │   │		├── favicon-16x16.png
│   │   │   │		├── favicon-32x32.png
│   │   │   │		├── favicon.ico
│   │   │   │		└── site.webmanifest
│   │   │   ├── logo/
│   │   │   └── projects/
│   │   ├── digitaldesignIcon.jpeg
│   │   ├── gameDev.jpeg
│   │   ├── headerImg.jpg
│   │   ├── icons8-email-100.png
│   │   ├── icons8-email-50.png
│   │   ├── icons8-instagram-100.svg
│   │   ├── icons8-instagram-50.svg
│   │   ├── icons8-tiktok-100.svg
│   │   ├── icons8-tiktok-50.svg
│   │   ├── icons8-whatsapp-100.svg
│   │   ├── icons8-whatsapp-50.svg
│   │   ├── maker.jpeg
│   │   ├── pikaso_texttoimage_adorable-cartoon-style-A-modern-vector-illustratio.jpeg
│   │   ├── skillsImg01.png
│   │   ├── skillsImg02.jpeg
│   │   ├── skillsImg03.jpeg
│   │   ├── skillsImg04.jpeg
│   │   └── webDev.jpeg
│   │   ├── js/
│   │   │   ├── components/
│   │   │   │		├── animations.js
│   │   │   │		└── navigation.js
│   │   │	 ├── app.js # Animation for the hero section
│   │   │	 ├── blog.js # Animation for blog elements
│   │   │	 ├── mobile-nav.js # Mobile navigation toggling
│   │   │	 ├── project-detail.js # First, check if GSAP is defined before trying to use it
│   │   │	 ├── projects.js # Project filtering functionality
│   │   │	 └── theme.js # Light/Dark mode toggle - select by class since that's what's in the header.php
│   │   ├── resources/
│   └── index.php # File: public/index.php
│   ├── vendor/
│   │   ├── composer/
│   │   	├── ClassLoader.php
│   │   	├── LICENSE
│   │   	├── autoload_classmap.php # autoload_classmap.php @generated by Composer
│   │   	├── autoload_namespaces.php # autoload_namespaces.php @generated by Composer
│   │   	├── autoload_psr4.php # autoload_psr4.php @generated by Composer
│   │   	├── autoload_real.php # autoload_real.php @generated by Composer
│   │   	└── autoload_static.php # autoload_static.php @generated by Composer
│   └── autoload.php # autoload.php @generated by Composer
└── composer.json
└── README.md



================================================
FILE: cline_docs/styleAesthetic.md
================================================
## Style & Aesthetic Guide

### Color Palette

#### Primary Colors
- **Yellow Accent** - `#f5b642` - Used for highlights, CTAs, and interactive elements
- **Yellow Background** - `#f5ce42` - Used for section backgrounds (e.g., main employment)
- **Green Accent** - `#27ae60` - Used for status indicators and tags

#### UI Colors
- **Light Theme**
  - Background: `#f9f9f9`
  - Text: `#333333`
  - Secondary Text: `#666666`
  - Borders: `#dddddd`
  - Card Background: `#ffffff`
  - Input Background: `#f1f1f1`

- **Dark Theme**
  - Background: `#333333`
  - Text: `#f9f9f9`
  - Secondary Text: `#cccccc`
  - Borders: `#555555`
  - Card Background: `#3a3a3a` / `#444444`
  - Input Background: `#444444`

### Typography

#### Font Families
- **Primary Font**: 'Courier New', monospace - Used for all text elements
- **Fallback**: Default system monospace font

#### Font Sizes
- Hero Title: 2.5rem (desktop), 2rem (mobile)
- Section Headings: 1.8rem (desktop), 1.5rem (mobile)
- Card Headings: 1.3rem (desktop), 1.1rem (mobile)
- Body Text: 0.95rem
- Small Text: 0.8rem

#### Font Weights
- Bold: 700 - Used for headings and emphasis
- Regular: 400 - Used for body text

### UI Components

#### Buttons
- **Primary Button** (CTA):
  - Background: `#f5b642`
  - Text: White
  - Padding: 10px 30px
  - Border-radius: 30px
  - Hover: Scale up slightly, darken background

#### Cards
- **Standard Cards**:
  - Border-radius: 10px
  - Shadow: 0 5px 15px rgba(0, 0, 0, 0.05)
  - Hover: Transform translateY(-5px), increase shadow
  - Transitions: 0.3s for all properties

- **Expertise Cards**:
  - Left Accent: 5px solid #f5b642 (visible on hover)
  - Circle Icon Container: 60px diameter
  - Border-radius: 12px

#### Navigation
- **Desktop**:
  - Horizontal layout
  - Text links with hover effect
  - Active page: Yellow background pill with white text
  
- **Mobile**:
  - Burger menu icon
  - Slide-in panel from right
  - Button-style navigation items

#### Form Elements
- Input fields: Light gray background, rounded corners
- Subtle focus effect
- Consistent padding and spacing

### Layout Principles

#### Spacing
- **Section Spacing**: 40px margin between sections
- **Component Spacing**: 20-25px gap between cards/elements
- **Internal Padding**: 15-25px padding within cards and containers

#### Grid System
- Card-based layouts using CSS Grid
- Desktop: 4 columns for services, 2 columns for larger content
- Tablet: 2 columns
- Mobile: 1 column

#### Responsive Breakpoints
- Mobile: Up to 576px
- Tablet: 577px to 768px
- Small Desktop: 769px to 992px
- Large Desktop: 993px and above

### Animation Guidelines

#### Transitions
- Duration: 0.3s for most UI transitions
- Timing function: ease-out or ease-in-out
- Properties: transform, opacity, color, background-color

#### Hover Effects
- Cards: Slight rise effect with increased shadow
- Buttons: Scale effect (1.02-1.05)
- Links: Color change
- Special elements: Background color shift

#### Page Load Animations
- Hero elements: Fade in and slide up
- Content sections: Staggered reveal on scroll

### Imagery

#### Style Guidelines
- Clean, minimal design
- Consistent subject matter per category
- Uniform aspect ratios when possible
- Consistent color treatment

#### Iconography
- Circle containers for category icons
- Yellow highlight on hover
- Consistent sizing

### Design Principles

1. **Consistency** - Maintain uniform styles, spacing, and interactions
2. **Simplicity** - Clean, uncluttered layouts with clear hierarchy
3. **Contrast** - Ensure readability with proper text/background contrast
4. **Feedback** - Provide visual feedback for interactive elements
5. **Hierarchy** - Clear distinction between different levels of content
6. **Accessibility** - Ensure proper contrast ratios and readable text sizes


================================================
FILE: cline_docs/techStack.md
================================================
## Technology Stack

### Backend
- **PHP 7.4+** - Custom MVC Framework
  - Custom routing system for clean URLs
  - Controller-based architecture
  - Object-oriented programming approach
- **MySQL (PDO)**
  - Database connectivity via PHP Data Objects
  - Prepared statements for security

### Frontend
- **HTML5**
  - Semantic markup structure
  - Accessibility considerations implemented
- **CSS3**
  - Custom responsive design (no frameworks)
  - Mobile-first approach
  - Flexbox and Grid layouts
  - Media queries for responsive breakpoints
  - CSS variables for theming
- **JavaScript (ES6+)**
  - Vanilla JavaScript for DOM manipulation
  - Event-driven interactions
  - Theme switching functionality
  - GSAP library for animations
    - ScrollTrigger for scroll-based animations
    - Tween animations for UI elements
  - Mobile navigation functionality

### Infrastructure
- **Apache (via XAMPP)**
  - URL rewriting with mod_rewrite
  - .htaccess configuration
- **Git** - Version control

### Architecture Decisions
- **Custom MVC Framework** - Chosen for learning purposes and complete control over the architecture, rather than using an established framework like Laravel or CodeIgniter.
- **PDO for Database** - Selected for security benefits (prepared statements) and abstraction layer that allows potential database switching.
- **Vanilla CSS/JS** - Used instead of frameworks to minimize dependencies and optimize performance while maintaining control over styling.
- **Dark/Light Theme** - Implemented with CSS variables and JavaScript for state management with cookie persistence.
- **Mobile-First Responsive Design** - Ensures optimal viewing experience across devices with progressive enhancement.
- **Custom Component Architecture** - Created reusable view partials (header, footer) for consistency across pages.

### Third-Party Libraries
- **Font Awesome** - Used for icons throughout the application
- **GSAP (GreenSock Animation Platform)** - Implemented for smooth animations and transitions
  - ScrollTrigger plugin for scroll-based animations


================================================
FILE: cline_docs/userInstructions/project_page_Implementation.md
================================================
# Projects Page Implementation Instructions

## Overview
This document provides step-by-step instructions for implementing the Projects page section of the portfolio website. The Projects page will showcase various projects categorized by skill area (Digital Design, Web Development, App Development, Game Development, and Maker Projects).

## Setup Steps

### 1. Create the ProjectsController

1. Navigate to `app/controllers/` directory
2. Create a new file named `ProjectsController.php` with the following content:

```php
<?php

namespace App\Controllers;

use App\Controllers\BaseController;

class ProjectsController extends BaseController {

    public function index() {
        // Load the view for the main projects page
        $this->view('projects/index');
    }
    
    public function digitalDesign() {
        // Load the digital design projects view
        $this->view('projects/digital_design');
    }
    
    public function webDev() {
        // Load the web development projects view
        $this->view('projects/web_dev');
    }
    
    public function appDev() {
        // Load the app development projects view
        $this->view('projects/app_dev');
    }
    
    public function gameDev() {
        // Load the game development projects view
        $this->view('projects/game_dev');
    }
    
    public function makerProjects() {
        // Load the maker projects view
        $this->view('projects/maker_projects');
    }
}
```

### 2. Create the Project Views

1. Navigate to `app/views/` directory
2. Create a new directory named `projects` if it doesn't exist
3. Create the following view files:

#### Main Projects Page (index.php)
Create `app/views/projects/index.php` with a layout that shows all project categories with links to their respective pages.

#### Category Pages
Create the following files:
- `app/views/projects/digital_design.php`
- `app/views/projects/web_dev.php`
- `app/views/projects/app_dev.php`
- `app/views/projects/game_dev.php`
- `app/views/projects/maker_projects.php`

### 3. Add CSS Styles

1. Open `public/css/main.css`
2. Add styles for the Projects page at the appropriate location in the file
3. Include styles for both desktop and mobile views
4. Ensure dark mode support for all new elements

### 4. Test the Routes

1. Start your local development server
2. Test the following URLs:
   - `http://localhost/[your-base-path]/projects`
   - `http://localhost/[your-base-path]/projects/digital-design`
   - `http://localhost/[your-base-path]/projects/web-dev`
   - `http://localhost/[your-base-path]/projects/app-dev`
   - `http://localhost/[your-base-path]/projects/game-dev`
   - `http://localhost/[your-base-path]/projects/maker-projects`

### 5. Update Router (if needed)

If the routes don't work correctly, you may need to update the Router class in `app/core/Router.php` to properly handle URL segments.

## Project Model (Optional)

If you want to store project data in a database:

1. Create a `Project` model in `app/models/Project.php`
2. Create a database table `projects` with appropriate fields
3. Update the controller to fetch data from the model

## Design Guidelines

- Follow the established style guide (refer to `cline_docs/styleAesthetic.md`)
- Maintain consistent styling with existing pages
- Ensure responsive design works on all screen sizes
- Test dark/light mode switching

## Testing Checklist

- [ ] All project category links work correctly
- [ ] Navigation shows the active page
- [ ] Responsive design works on mobile devices
- [ ] Dark/light mode switching functions properly
- [ ] All content is properly styled and aligned
- [ ] Images load correctly (if applicable)

## Troubleshooting

- If routes aren't working, check URL format and controller method names
- If styles aren't applying, check for CSS selector conflicts
- If the page layout breaks on mobile, check responsive media queries


================================================
FILE: portfolio-website/composer.json
================================================
{
    "autoload": {
        "psr-4": {
            "App\\": "app/"
        }
    }
}


================================================
FILE: portfolio-website/.gitignore
================================================
# Node modules (if using Node.js tools)
node_modules/

# Composer dependencies (if using PHP Composer)
vendor/

# OS generated files
.DS_Store
Thumbs.db

# IDE and editor folders/files
.vscode/
.idea/
*.sublime-workspace
*.sublime-project

# Log files
*.log

# Environment and config files
.env
.env.*

# Cache and temp files
*.cache
*.tmp

# XAMPP specific
xampp/

# PHPStorm
*.iml

# Backup files
*~
*.bak

# Uploaded files (if any)
public/uploads/

# backup directories
vuyanimOriginalBackup/


================================================
FILE: portfolio-website/.htaccess
================================================
# Redirect all requests to public folder
RewriteEngine On

# Handle requests to the public folder
RewriteCond %{REQUEST_URI} !^/public/
RewriteRule ^(.*)$ /public/$1 [L,QSA]

# Handle the main index
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ /public/index.php?url=$1 [L,QSA]


================================================
FILE: portfolio-website/app/config/config.php
================================================
<?php
// Detect environment and set base URL accordingly
if ($_SERVER['HTTP_HOST'] === 'localhost' || 
    strpos($_SERVER['HTTP_HOST'], '127.0.0.1') !== false || 
    strpos($_SERVER['HTTP_HOST'], 'localhost') !== false) {
    // Local development
    $baseUrl = '/vuyaniM01/portfolio-website/public';
} else {
    // Live server - since we're using the redirect method
    $baseUrl = '/public';
}
?>


================================================
FILE: portfolio-website/app/config/database.php
================================================
<?php
// Detect environment and return appropriate database configuration
if ($_SERVER['HTTP_HOST'] === 'localhost' || 
    strpos($_SERVER['HTTP_HOST'], '127.0.0.1') !== false || 
    strpos($_SERVER['HTTP_HOST'], 'localhost') !== false) {
    
    // Local development configuration
    return [
        'host' => 'localhost',
        'dbname' => 'vuyanim',
        'user' => 'root',
        'password' => '',
        'charset' => 'utf8mb4',
        'options' => [
            PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
            PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_OBJ,
            PDO::ATTR_EMULATE_PREPARES => false,
        ]
    ];
    
} else {
    
    // Live server configuration - UPDATE THESE VALUES
    return [
        'host' => 'localhost', // Usually 'localhost' for shared hosting
        'dbname' => 'vuyanjcb_portfolio', //for production : 'vuyanjcb_vuyanim' - remove this comment
        'user' => 'vuyanjcb_user',  //for production : 'vuyanjcb_vuyaniM' - remove this comment
        'password' => 'your_database_password', //for production : '=bQw^WUglto@IhRJ' - remove this comment
        'charset' => 'utf8mb4',
        'options' => [
            PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
            PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_OBJ,
            PDO::ATTR_EMULATE_PREPARES => false,
        ]
    ];
}


================================================
FILE: portfolio-website/app/controllers/AdminController.php
================================================



================================================
FILE: portfolio-website/app/controllers/AuthController.php
================================================



================================================
FILE: portfolio-website/app/controllers/BaseController.php
================================================
<?php

namespace App\Controllers;

/**
 * Base Controller
 * Loads the models and views
 */
abstract class BaseController {

    /**
     * Load model
     * @param string $model Model name
     * @return object Model object
     */
    protected function model(string $model) {
        $modelClass = 'App\\Models\\' . $model;
        
        // Check if model class exists, if not try to load it
        if (!class_exists($modelClass)) {
            $basePath = dirname(dirname(dirname(__FILE__)));
            
            // Load BaseModel first if not loaded
            $baseModelFile = $basePath . '/app/models/BaseModel.php';
            if (file_exists($baseModelFile) && !class_exists('App\\Models\\BaseModel')) {
                require_once $baseModelFile;
            }
            
            // Load the specific model
            $modelFile = $basePath . '/app/models/' . $model . '.php';
            if (file_exists($modelFile)) {
                require_once $modelFile;
            }
        }
        
        // Check if model class exists now
        if (class_exists($modelClass)) {
            return new $modelClass();
        } else {
            // Model does not exist
            die('Model does not exist: ' . $model . ' (Class: ' . $modelClass . ')');
        }
    }

    /**
     * Load view
     * @param string $view View name
     * @param array $data Data to pass to the view
     * @return void
     */
    protected function view(string $view, array $data = []) {
        // Get the application base path - works for both local and live server
        $basePath = dirname(dirname(dirname(__FILE__)));
        
        // Construct the full path to the view file
        $viewPath = $basePath . '/app/views/' . $view . '.php';

        // Check if view file exists
        if (file_exists($viewPath)) {
            // Extract data array to variables
            extract($data);

            // Require view file
            require_once $viewPath;
        } else {
            // View does not exist
            // For debugging - show the path that was attempted
            die('View does not exist: ' . $viewPath . '<br>Base path: ' . $basePath);
        }
    }
}


================================================
FILE: portfolio-website/app/controllers/BlogController.php
================================================
<?php

namespace App\Controllers;

use App\Controllers\BaseController;

class BlogController extends BaseController {

    public function index() {
        // Load blog posts for the main blog page
        $blogModel = $this->model('BlogPost');
        $posts = $blogModel->getRecentPosts(10); // Get 10 most recent posts
        $featuredPosts = $blogModel->getFeaturedPosts(3); // Get 3 featured posts
        
        $data = [
            'posts' => $posts,
            'featuredPosts' => $featuredPosts
        ];
        
        $this->view('blog/index', $data);
    }
    
    public function article($slug = '') {
        if (empty($slug)) {
            // Redirect to blog index if no slug provided
            header('Location: ' . '/blog');
            exit;
        }
        
        // Load the specific article
        $blogModel = $this->model('BlogPost');
        $post = $blogModel->getPostBySlug($slug);
        
        if (!$post) {
            // Article not found, could redirect to 404 page
            header('Location: ' . '/blog');
            exit;
        }
        
        // Increment view count
        $blogModel->incrementViews($post['id']);
        
        // Get related posts
        $relatedPosts = $blogModel->getRelatedPosts($post['id'], $post['category_id'], 3);
        
        $data = [
            'post' => $post,
            'relatedPosts' => $relatedPosts
        ];
        
        $this->view('blog/article', $data);
    }
    
    public function resources() {
        // Load resources/downloadable content
        $resourceModel = $this->model('Resource');
        $resources = $resourceModel->getAllPublished();
        
        $data = [
            'resources' => $resources
        ];
        
        $this->view('blog/resources', $data);
    }
    
    public function downloadResource($resourceId) {
        // Check if user is logged in for protected resources
        $isLoggedIn = isset($_SESSION['user_id']);
        
        $resourceModel = $this->model('Resource');
        $resource = $resourceModel->getById($resourceId);
        
        if (!$resource) {
            // Resource not found
            header('Location: ' . '/blog/resources');
            exit;
        }
        
        // Check if resource requires login
        if ($resource['requires_login'] && !$isLoggedIn) {
            // Redirect to login page
            $_SESSION['redirect_after_login'] = "/blog/download-resource/{$resourceId}";
            header('Location: ' . '/auth/login');
            exit;
        }
        
        // Increment download count
        $resourceModel->incrementDownloads($resourceId);
        
        // Set appropriate headers and send the file
        $filePath = $resource['file_path'];
        if (file_exists($filePath)) {
            header('Content-Description: File Transfer');
            header('Content-Type: application/octet-stream');
            header('Content-Disposition: attachment; filename="' . basename($filePath) . '"');
            header('Expires: 0');
            header('Cache-Control: must-revalidate');
            header('Pragma: public');
            header('Content-Length: ' . filesize($filePath));
            readfile($filePath);
            exit;
        } else {
            // For dummy data - just redirect back with a success message
            header('Location: ' . '/blog/resources?download=success');
            exit;
        }
    }
    
    public function category($slug = '') {
        if (empty($slug)) {
            // Redirect to blog index if no slug provided
            header('Location: ' . '/blog');
            exit;
        }
        
        $blogModel = $this->model('BlogPost');
        $posts = $blogModel->getPostsByCategory($slug, 10);
        
        $data = [
            'posts' => $posts,
            'category' => $slug
        ];
        
        $this->view('blog/index', $data);
    }
}


================================================
FILE: portfolio-website/app/controllers/ClientsController.php
================================================
<?php

namespace App\Controllers;

use App\Controllers\BaseController; // Corrected namespace

class ClientsController extends BaseController {

    public function index() {
        // Load the view for the clients page
        $this->view('clients/index');
    }

    // Add other methods for client-related actions if needed
    // e.g., freelance(), main_employment() if those sub-pages are required

}



================================================
FILE: portfolio-website/app/controllers/ContactController.php
================================================
<?php

namespace App\Controllers;

use App\Controllers\BaseController;
use App\Models\Contact;

class ContactController extends BaseController {

    public function index() {
        // Load the view for the contact page
        $this->view('contact/index');
    }
    
    public function submit() {
        // Handle form submission
        if ($_SERVER['REQUEST_METHOD'] === 'POST') {
            $contactModel = new Contact();
            
            // Sanitize input data
            $data = [
                'name' => trim($_POST['name'] ?? ''),
                'email' => trim($_POST['email'] ?? ''),
                'subject' => trim($_POST['subject'] ?? ''),
                'message' => trim($_POST['message'] ?? ''),
                'ip_address' => $_SERVER['REMOTE_ADDR'] ?? ''
            ];
            
            // Basic validation
            $errors = [];
            
            if (empty($data['name'])) {
                $errors[] = 'Name is required';
            }
            
            if (empty($data['email']) || !filter_var($data['email'], FILTER_VALIDATE_EMAIL)) {
                $errors[] = 'Valid email is required';
            }
            
            if (empty($data['message'])) {
                $errors[] = 'Message is required';
            }
            
            if (strlen($data['message']) > 1000) {
                $errors[] = 'Message must be less than 1000 characters';
            }
            
            // If no errors, save to database
            if (empty($errors)) {
                $result = $contactModel->saveSubmission($data);
                
                if ($result) {
                    // Return JSON response for AJAX
                    if (isset($_POST['ajax'])) {
                        header('Content-Type: application/json');
                        echo json_encode(['success' => true, 'message' => 'Thank you for your message! I\'ll get back to you soon.']);
                        exit;
                    }
                    
                    // Redirect with success message
                    header('Location: ' . $this->getBaseUrl() . '/contact?success=1');
                    exit;
                } else {
                    $errors[] = 'Failed to send message. Please try again.';
                }
            }
            
            // Return errors for AJAX
            if (isset($_POST['ajax'])) {
                header('Content-Type: application/json');
                echo json_encode(['success' => false, 'errors' => $errors]);
                exit;
            }
            
            // Load view with errors
            $this->view('contact/index', ['errors' => $errors, 'formData' => $data]);
        } else {
            // Redirect to contact page if not POST
            header('Location: ' . $this->getBaseUrl() . '/contact');
            exit;
        }
    }
    
    private function getBaseUrl() {
        // Get base URL from config
        require_once dirname(__DIR__, 2) . '/config/config.php';
        return $baseUrl;
    }
}


================================================
FILE: portfolio-website/app/controllers/HomeController.php
================================================
<?php
namespace App\controllers;
class HomeController {
    public function index() {
        require_once '../app/views/layouts/main.php';
    }
}



================================================
FILE: portfolio-website/app/controllers/ProjectsController.php
================================================
<?php

namespace App\Controllers;

use App\Controllers\BaseController;

class ProjectsController extends BaseController {

    public function index() {
        // Load the view for the main projects page
        $this->view('projects/index');
    }
    
    public function digitalDesign() {
        // Load the digital design projects view
        $this->view('projects/digital_design');
    }
    
    public function webDev() {
        // Load the web development projects view
        $this->view('projects/web_dev');
    }
    
    public function appDev() {
        // Load the app development projects view
        $this->view('projects/app_dev');
    }
    
    public function gameDev() {
        // Load the game development projects view
        $this->view('projects/game_dev');
    }
    
    public function makerProjects() {
        // Load the maker projects view
        $this->view('projects/maker_projects');
    }
    
    /**
     * Show a single project
     * @param string $category Project category
     * @param int $id Project ID
     */
    public function show($category, $id) {
        // In a real-world scenario, you would fetch this data from a database
        // For now, we'll use static data for demonstration
        
        // Sample project data (would come from a model in a real application)
        $project = $this->getSampleProject($category, $id);
        
        // Get previous and next projects (for navigation)
        $prevProject = $this->getSamplePrevProject($category, $id);
        $nextProject = $this->getSampleNextProject($category, $id);
        
        // Get related projects
        $relatedProjects = $this->getSampleRelatedProjects($category, $id);
        
        // Pass data to the view
        $data = [
            'project' => $project,
            'prevProject' => $prevProject,
            'nextProject' => $nextProject,
            'relatedProjects' => $relatedProjects
        ];
        
        // Load the project detail view with data
        $this->view('projects/project_detail', $data);
    }
    
    /**
     * Get sample project data (this would normally come from a database)
     * @param string $category Project category
     * @param int $id Project ID
     * @return array Project data
     */
    private function getSampleProject($category, $id) {
        // This is just example data - in a real application, you would fetch this from a database
        return [
            'id' => $id,
            'title' => 'Sample Project ' . $id,
            'category' => $category,
            'date' => 'January 2025',
            'tags' => ['PHP', 'JavaScript', 'CSS'],
            'main_image' => 'project' . $id . '.jpg',
            'gallery' => ['project' . $id . '_1.jpg', 'project' . $id . '_2.jpg', 'project' . $id . '_3.jpg'],
            'description' => '<p>This is a sample project description. In a real application, this would be fetched from a database. This text describes the project, its goals, and the process of creating it.</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam auctor, nisl eget ultricies aliquam, nisl nisl aliquet nisl, eget aliquam nisl nisl eget nisl. Nullam auctor, nisl eget ultricies aliquam, nisl nisl aliquet nisl, eget aliquam nisl nisl eget nisl.</p>',
            'challenges' => '<p>During the development of this project, several challenges were encountered. This section describes those challenges and how they were overcome.</p>',
            'technologies' => ['PHP', 'MySQL', 'JavaScript', 'CSS', 'HTML'],
            'link' => 'https://example.com',
            'github' => 'https://github.com/example/project'
        ];
    }
    
    /**
     * Get sample previous project data for navigation
     * @param string $category Project category
     * @param int $id Project ID
     * @return array|null Previous project data or null if none
     */
    private function getSamplePrevProject($category, $id) {
        // In a real application, you would query the database for the previous project
        if ($id > 1) {
            return [
                'id' => $id - 1,
                'title' => 'Sample Project ' . ($id - 1),
                'category' => $category
            ];
        }
        return null;
    }
    
    /**
     * Get sample next project data for navigation
     * @param string $category Project category
     * @param int $id Project ID
     * @return array|null Next project data or null if none
     */
    private function getSampleNextProject($category, $id) {
        // In a real application, you would query the database for the next project
        // For demo purposes, let's assume there are 5 projects per category
        if ($id < 5) {
            return [
                'id' => $id + 1,
                'title' => 'Sample Project ' . ($id + 1),
                'category' => $category
            ];
        }
        return null;
    }
    
    /**
     * Get sample related projects
     * @param string $category Project category
     * @param int $id Project ID
     * @return array Related projects data
     */
    private function getSampleRelatedProjects($category, $id) {
        // In a real application, you would query the database for related projects
        $relatedProjects = [];
        
        // Add 3 related projects (excluding the current one)
        for ($i = 1; $i <= 3; $i++) {
            $relatedId = ($id + $i) % 5 + 1;
            if ($relatedId != $id) {
                $relatedProjects[] = [
                    'id' => $relatedId,
                    'title' => 'Related Project ' . $relatedId,
                    'category' => $category,
                    'thumbnail' => 'project' . $relatedId . '.jpg'
                ];
            }
        }
        
        return $relatedProjects;
    }
}


================================================
FILE: portfolio-website/app/core/App.php
================================================
<?php
namespace App\core;

class App {
    public static function loadController($controllerName, $methodName = 'index', $params = []) {
        // Get the base path of the application
        $basePath = dirname(dirname(dirname(__FILE__)));
        
        // Load BaseController first if it hasn't been loaded
        $baseControllerFile = $basePath . "/app/controllers/BaseController.php";
        if (file_exists($baseControllerFile) && !class_exists('App\\Controllers\\BaseController')) {
            require_once $baseControllerFile;
        }
        
        // Load the specific controller
        $controllerFile = $basePath . "/app/controllers/" . $controllerName . ".php";
        
        if (file_exists($controllerFile)) {
            require_once $controllerFile;
            $controllerClass = 'App\\controllers\\' . $controllerName;
            
            if (class_exists($controllerClass)) {
                $controller = new $controllerClass();
                if (method_exists($controller, $methodName)) {
                    call_user_func_array([$controller, $methodName], $params);
                } else {
                    echo "Method '$methodName' not found in controller '$controllerName'.";
                }
            } else {
                echo "Controller class '$controllerClass' not found.";
            }
        } else {
            echo "Controller file not found: $controllerFile";
        }
    }
}


================================================
FILE: portfolio-website/app/core/Database.php
================================================
<?php
namespace App\Core;

use PDO;
use PDOException;

/**
 * Database Connection Class
 * Creates a PDO connection to the database
 */
class Database {
    /**
     * PDO instance
     * @var PDO
     */
    private static $instance = null;
    
    /**
     * Configuration
     * @var array
     */
    private static $config = null;
    
    /**
     * Connection status
     * @var bool
     */
    private static $connectionFailed = false;

    /**
     * Get a database connection, creating one if it doesn't exist
     * @return PDO|null Database connection or null if connection fails
     */
    public static function connect() {
        // If connection previously failed, return null immediately
        if (self::$connectionFailed) {
            return null;
        }
        
        if (self::$instance === null) {
            self::loadConfig();
            
            try {
                $dsn = "mysql:host=" . self::$config['host'];
                
                // Add database name to DSN if provided
                if (!empty(self::$config['dbname'])) {
                    $dsn .= ";dbname=" . self::$config['dbname'];
                }
                
                // Add charset if provided
                if (!empty(self::$config['charset'])) {
                    $dsn .= ";charset=" . self::$config['charset'];
                }
                
                // Create PDO instance
                self::$instance = new PDO(
                    $dsn,
                    self::$config['user'],
                    self::$config['password'],
                    [
                        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
                        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,
                        PDO::ATTR_EMULATE_PREPARES => false
                    ]
                );
                
                // Test the connection with a simple query
                self::$instance->query('SELECT 1');
                
            } catch (PDOException $e) {
                // Log error message
                error_log("Database Connection Error: " . $e->getMessage());
                
                // Mark connection as failed
                self::$connectionFailed = true;
                self::$instance = null;
                
                // Return null instead of throwing exception (for dummy data fallback)
                return null;
            }
        }

        return self::$instance;
    }
    
    /**
     * Check if database connection is available
     * @return bool
     */
    public static function isConnected() {
        try {
            $connection = self::connect();
            return $connection !== null && !self::$connectionFailed;
        } catch (\Exception $e) {
            return false;
        }
    }
    
    /**
     * Load database configuration
     */
    private static function loadConfig() {
        // Only load config once
        if (self::$config === null) {
            $configFile = dirname(__DIR__) . '/config/database.php';
            
            if (file_exists($configFile)) {
                self::$config = require $configFile;
            } else {
                // If config file doesn't exist, use default values
                self::$config = [
                    'host' => 'localhost',
                    'dbname' => 'vuyanim',
                    'user' => 'root',
                    'password' => '',
                    'charset' => 'utf8mb4'
                ];
                
                // Log warning
                error_log("Database configuration file not found. Using default values.");
            }
        }
    }
    
    /**
     * Close the database connection
     */
    public static function close() {
        self::$instance = null;
        self::$connectionFailed = false;
    }
    
    /**
     * Private constructor to prevent instantiation
     */
    private function __construct() {
        // Prevent instantiation
    }
    
    /**
     * Private clone method to prevent cloning
     */
    private function __clone() {
        // Prevent cloning
    }
}


================================================
FILE: portfolio-website/app/core/Helpers.php
================================================



================================================
FILE: portfolio-website/app/core/Router.php
================================================
<?php

namespace App\core;


class Router {
    public function dispatch() {
        $url = $_GET['url'] ?? 'home/index';
        $url = explode('/', filter_var(rtrim($url, '/'), FILTER_SANITIZE_URL));

        $controller = ucfirst($url[0]) . 'Controller';
        $method = $url[1] ?? 'index';
        $params = array_slice($url, 2);

        App::loadController($controller, $method, $params);

    }
}



================================================
FILE: portfolio-website/app/data/blog_dummy_data.php
================================================
<?php
// Dummy data for blog posts
return [
    'posts' => [
        [
            'id' => 1,
            'title' => 'Getting Started with 3D Modeling for Beginners',
            'slug' => 'getting-started-with-3d-modeling',
            'excerpt' => 'Learn the basics of 3D modeling with this comprehensive guide for absolute beginners.',
            'content' => '<p>3D modeling is an exciting field that combines creativity with technical skills. Whether you\'re interested in creating game assets, product designs, architectural visualizations, or animated characters, the fundamentals remain the same.</p>

<h2>What is 3D Modeling?</h2>
<p>3D modeling is the process of creating a mathematical representation of any three-dimensional surface of an object. The product is called a 3D model. Someone who works with 3D models may be referred to as a 3D artist or a 3D modeler.</p>

<h2>Essential Software for Beginners</h2>
<p>There are several excellent software options for beginners:</p>
<ul>
    <li><strong>Blender</strong> - Free, open-source, and incredibly powerful</li>
    <li><strong>SketchUp</strong> - Intuitive and easy to learn, great for architectural modeling</li>
    <li><strong>TinkerCAD</strong> - Browser-based and perfect for absolute beginners</li>
    <li><strong>ZBrush Core</strong> - Simplified version of the industry-standard sculpting software</li>
</ul>

<h2>Basic Modeling Techniques</h2>
<p>When starting out, focus on mastering these fundamental techniques:</p>
<ol>
    <li><strong>Box Modeling</strong> - Starting with a primitive shape (like a cube) and refining it</li>
    <li><strong>Polygon Modeling</strong> - Building models one polygon at a time</li>
    <li><strong>Sculpting</strong> - Using digital clay to create organic shapes</li>
    <li><strong>Parametric Modeling</strong> - Using parameters to define the model</li>
</ol>

<h2>Understanding Topology</h2>
<p>Good topology refers to how the polygons flow over your 3D model. Clean topology is essential for animation, texturing, and overall model quality.</p>

<h2>Resources to Continue Learning</h2>
<p>Check out these resources to continue your 3D modeling journey:</p>
<ul>
    <li>Blender Guru\'s Donut Tutorial on YouTube</li>
    <li>CG Cookie courses</li>
    <li>Udemy\'s Complete Blender Creator course</li>
</ul>

<p>Remember, 3D modeling is a skill that takes time to master. Be patient with yourself and practice regularly. I\'ll be sharing more detailed tutorials on specific techniques in future articles, so stay tuned!</p>',
            'featured_image' => 'blog1.jpg',
            'category_id' => 1,
            'category_name' => 'Articles',
            'category_slug' => 'articles',
            'author_id' => 1,
            'author_name' => 'vuyani',
            'status' => 'published',
            'is_featured' => 1,
            'views' => 253,
            'published_at' => '2025-04-15 10:30:00',
            'created_at' => '2025-04-14 15:20:00',
            'updated_at' => '2025-04-15 11:45:00',
            'tags' => [
                ['name' => '3D Modeling', 'slug' => '3d-modeling'],
                ['name' => 'Beginners', 'slug' => 'beginners'],
                ['name' => 'Blender', 'slug' => 'blender']
            ]
        ],
        [
            'id' => 2,
            'title' => 'Creating Responsive Websites with Modern CSS Grid',
            'slug' => 'responsive-websites-with-css-grid',
            'excerpt' => 'Discover how to build flexible and responsive layouts using CSS Grid without relying on frameworks.',
            'content' => '<p>CSS Grid has revolutionized the way we create web layouts. Gone are the days of using complex float-based systems or relying entirely on frameworks like Bootstrap for grid layouts.</p>

<h2>What is CSS Grid?</h2>
<p>CSS Grid Layout is a two-dimensional grid system designed specifically for user interface design. It allows you to create complex and flexible layouts in both rows and columns simultaneously.</p>

<h2>Basic Grid Setup</h2>
<p>Here\'s a simple example of setting up a grid:</p>

<pre><code>.container {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 20px;
}
</code></pre>

<p>This creates a three-column layout with equal widths and 20px gaps between grid items.</p>

<h2>Creating Responsive Layouts</h2>
<p>One of the most powerful features of CSS Grid is how easily it enables responsive design. Using media queries in combination with grid properties, you can completely redefine your layout at different screen sizes.</p>

<pre><code>@media (max-width: 768px) {
  .container {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 576px) {
  .container {
    grid-template-columns: 1fr;
  }
}
</code></pre>

<h2>Advanced Grid Techniques</h2>
<p>Once you\'re comfortable with the basics, you can explore these more advanced techniques:</p>
<ul>
    <li><strong>Grid Areas</strong> - Name sections of your grid for easier placement</li>
    <li><strong>Auto-placement</strong> - Let the browser decide where items should go</li>
    <li><strong>Minmax function</strong> - Set flexible minimum and maximum sizes</li>
    <li><strong>Auto-fill and auto-fit</strong> - Create dynamic numbers of columns</li>
</ul>

<h2>Browser Support</h2>
<p>CSS Grid is supported in all modern browsers. For older browsers, you can use a feature detection and provide a fallback layout.</p>

<h2>Conclusion</h2>
<p>CSS Grid is a powerful tool that gives developers unprecedented control over layout design. By mastering grid, you can create complex, responsive layouts without the bloat of CSS frameworks.</p>',
            'featured_image' => 'blog2.jpg',
            'category_id' => 1,
            'category_name' => 'Articles',
            'category_slug' => 'articles',
            'author_id' => 1,
            'author_name' => 'vuyani',
            'status' => 'published',
            'is_featured' => 1,
            'views' => 187,
            'published_at' => '2025-04-10 14:15:00',
            'created_at' => '2025-04-09 20:30:00',
            'updated_at' => '2025-04-10 15:10:00',
            'tags' => [
                ['name' => 'CSS', 'slug' => 'css'],
                ['name' => 'Web Development', 'slug' => 'web-development'],
                ['name' => 'Responsive Design', 'slug' => 'responsive-design']
            ]
        ],
        [
            'id' => 3,
            'title' => 'Introduction to Arduino for Maker Projects',
            'slug' => 'introduction-to-arduino-for-makers',
            'excerpt' => 'Learn how to get started with Arduino for your DIY electronic projects.',
            'content' => '<p>Arduino has become the go-to platform for makers, hobbyists, artists, and students to create interactive electronic projects. Its combination of easy-to-use hardware and software makes it accessible even to those with no prior electronics experience.</p>

<h2>What is Arduino?</h2>
<p>Arduino is an open-source electronics platform based on easy-to-use hardware and software. It consists of a programmable circuit board (microcontroller) and software called the Arduino IDE (Integrated Development Environment) that you use to write and upload code to the physical board.</p>

<h2>Getting Started with Arduino</h2>
<p>To begin your Arduino journey, you\'ll need:</p>
<ul>
    <li>An Arduino board (Arduino Uno is recommended for beginners)</li>
    <li>USB A to B cable (to connect Arduino to your computer)</li>
    <li>Arduino IDE software (downloadable from arduino.cc)</li>
    <li>Basic electronic components (LEDs, resistors, breadboard, jumper wires)</li>
</ul>

<h2>Your First Arduino Project: Blinking LED</h2>
<p>The classic first Arduino project is making an LED blink. Here\'s the code:</p>

<pre><code>void setup() {
  // Initialize digital pin LED_BUILTIN as an output
  pinMode(LED_BUILTIN, OUTPUT);
}

void loop() {
  digitalWrite(LED_BUILTIN, HIGH);   // Turn the LED on
  delay(1000);                       // Wait for a second
  digitalWrite(LED_BUILTIN, LOW);    // Turn the LED off
  delay(1000);                       // Wait for a second
}
</code></pre>

<h2>Understanding Arduino Programming</h2>
<p>Arduino programming is based on C/C++, but you don\'t need to know these languages in depth to get started. The Arduino language simplifies many aspects of C++ to make it more accessible.</p>

<p>Every Arduino program (also called a "sketch") has two main functions:</p>
<ul>
    <li><strong>setup()</strong> - Runs once when the Arduino powers on or resets</li>
    <li><strong>loop()</strong> - Runs continuously after setup completes</li>
</ul>

<h2>Sensors and Input/Output</h2>
<p>Arduino can interact with a wide range of sensors and devices:</p>
<ul>
    <li>Temperature and humidity sensors</li>
    <li>Motion detectors</li>
    <li>Light sensors</li>
    <li>Buttons and switches</li>
    <li>Servos and motors</li>
    <li>LCD displays</li>
</ul>

<h2>Project Ideas for Beginners</h2>
<p>Once you\'ve mastered the basics, try these beginner-friendly projects:</p>
<ol>
    <li>Digital thermometer with temperature display</li>
    <li>Motion-activated light</li>
    <li>Simple robot that avoids obstacles</li>
    <li>Musical instrument with buttons and a speaker</li>
    <li>Plant watering reminder system</li>
</ol>

<h2>Resources for Learning More</h2>
<p>To deepen your Arduino knowledge, check out:</p>
<ul>
    <li>Arduino\'s official documentation and tutorials</li>
    <li>Adafruit and SparkFun learning resources</li>
    <li>Arduino Project Hub for inspiration</li>
    <li>Local makerspaces and community workshops</li>
</ul>

<p>Arduino opens up a world of possibilities for creating interactive projects. In future articles, I\'ll cover more advanced topics and share step-by-step guides for specific maker projects.</p>',
            'featured_image' => 'blog3.jpg',
            'category_id' => 2,
            'category_name' => 'Tutorials',
            'category_slug' => 'tutorials',
            'author_id' => 1,
            'author_name' => 'vuyani',
            'status' => 'published',
            'is_featured' => 0,
            'views' => 145,
            'published_at' => '2025-04-05 09:20:00',
            'created_at' => '2025-04-04 16:45:00',
            'updated_at' => '2025-04-05 10:30:00',
            'tags' => [
                ['name' => 'Arduino', 'slug' => 'arduino'],
                ['name' => 'Electronics', 'slug' => 'electronics'],
                ['name' => 'Maker', 'slug' => 'maker'],
                ['name' => 'DIY', 'slug' => 'diy']
            ]
        ],
        [
            'id' => 4,
            'title' => 'Essential Typography Tips for Graphic Designers',
            'slug' => 'typography-tips-for-designers',
            'excerpt' => 'Master the art of typography with these practical tips that will elevate your design work.',
            'content' => '<p>Typography is often called the art and technique of arranging type. Good typography enhances readability, establishes hierarchy, and helps communicate your message effectively.</p>

<h2>Why Typography Matters</h2>
<p>Typography accounts for about 95% of web design. It\'s not just about choosing pretty fonts – it\'s about creating an optimal experience for your readers and users. Good typography can make content easy to digest, establish brand identity, and evoke specific emotions.</p>

<h2>Font Selection Principles</h2>
<p>When selecting fonts for your projects, consider:</p>
<ul>
    <li><strong>Readability</strong> - Is the font easily readable at various sizes?</li>
    <li><strong>Personality</strong> - Does the font convey the right mood and tone?</li>
    <li><strong>Versatility</strong> - Does the font family offer enough weight variations?</li>
    <li><strong>Contrast</strong> - If using multiple fonts, do they complement each other?</li>
</ul>

<h2>Font Pairing Guidelines</h2>
<p>For effective font pairing:</p>
<ol>
    <li>Combine a serif with a sans-serif for good contrast</li>
    <li>Use fonts from the same family for subtle hierarchy</li>
    <li>Limit yourself to 2-3 font families per design</li>
    <li>Ensure the fonts share some common qualities (x-height, width, etc.)</li>
</ol>

<h2>Typography Hierarchy Techniques</h2>
<p>Create clear hierarchy in your designs using:</p>
<ul>
    <li><strong>Size contrast</strong> - Varying font sizes to indicate importance</li>
    <li><strong>Weight contrast</strong> - Using bold for emphasis</li>
    <li><strong>Color contrast</strong> - Using different colors to guide attention</li>
    <li><strong>Spacing</strong> - Using whitespace to group or separate elements</li>
    <li><strong>Style contrast</strong> - Mixing italic with regular styles</li>
</ul>

<h2>Practical Typography Tips</h2>
<p>Improve your typography with these practical tips:</p>
<ol>
    <li><strong>Line Length</strong> - Aim for 45-75 characters per line for optimal readability</li>
    <li><strong>Line Height</strong> - Set line height (leading) to about 1.5× the font size</li>
    <li><strong>Letter Spacing</strong> - Adjust tracking for headlines and all-caps text</li>
    <li><strong>Alignment</strong> - Use left alignment for longer text (avoid justified text on the web)</li>
    <li><strong>Contrast</strong> - Ensure sufficient contrast between text and background</li>
</ol>

<h2>Common Typography Mistakes to Avoid</h2>
<ul>
    <li>Using too many fonts in one design</li>
    <li>Poor contrast making text difficult to read</li>
    <li>Improper scaling of headings and body text</li>
    <li>Ignoring line height and letter spacing</li>
    <li>Not maintaining consistency throughout the design</li>
</ul>

<h2>Typography Resources</h2>
<p>To continue developing your typography skills, check out:</p>
<ul>
    <li>Typewolf for font inspiration and pairing ideas</li>
    <li>Google Fonts for free, web-friendly fonts</li>
    <li>"Thinking with Type" by Ellen Lupton (essential reading)</li>
    <li>Type scales calculators for harmonious sizing</li>
</ul>

<p>Remember, great typography often goes unnoticed because it creates a seamless reading experience. When done well, it quietly guides the reader through your content while reinforcing your message and brand identity.</p>',
            'featured_image' => 'blog4.jpg',
            'category_id' => 1,
            'category_name' => 'Articles',
            'category_slug' => 'articles',
            'author_id' => 1,
            'author_name' => 'vuyani',
            'status' => 'published',
            'is_featured' => 0,
            'views' => 122,
            'published_at' => '2025-03-28 11:15:00',
            'created_at' => '2025-03-27 14:30:00',
            'updated_at' => '2025-03-28 12:20:00',
            'tags' => [
                ['name' => 'Typography', 'slug' => 'typography'],
                ['name' => 'Graphic Design', 'slug' => 'graphic-design'],
                ['name' => 'Design Tips', 'slug' => 'design-tips']
            ]
        ],
        [
            'id' => 5,
            'title' => 'Building Your First Progressive Web App (PWA)',
            'slug' => 'building-your-first-pwa',
            'excerpt' => 'Learn how to create a Progressive Web App that works offline and feels like a native app.',
            'content' => '<p>Progressive Web Apps (PWAs) combine the best of web and mobile apps. They\'re fast, installable, reliable, and engaging. In this tutorial, we\'ll walk through creating your first PWA from scratch.</p>

<h2>What is a Progressive Web App?</h2>
<p>A Progressive Web App is a website built using modern web technologies that provides an app-like experience to users. Key features include:</p>
<ul>
    <li>Works offline or with poor network conditions</li>
    <li>Can be installed on the home screen</li>
    <li>Loads quickly, even on slow networks</li>
    <li>Feels like a native app with full-screen mode</li>
    <li>Supports push notifications</li>
</ul>

<h2>Core Components of a PWA</h2>
<p>To create a PWA, you\'ll need three main components:</p>
<ol>
    <li><strong>HTTPS</strong> - Your app must be served over a secure connection</li>
    <li><strong>Web App Manifest</strong> - A JSON file with metadata about your app</li>
    <li><strong>Service Worker</strong> - A JavaScript file that controls the caching and offline functionality</li>
</ol>

<h2>Setting Up Your Project</h2>
<p>First, create your project structure:</p>
<pre><code>my-first-pwa/
├── index.html
├── styles.css
├── app.js
├── manifest.json
└── sw.js (service worker)</code></pre>

<h2>Creating the Web App Manifest</h2>
<p>Your manifest.json file should look something like this:</p>

<pre><code>{
  "name": "My First PWA",
  "short_name": "FirstPWA",
  "start_url": "/index.html",
  "display": "standalone",
  "background_color": "#ffffff",
  "theme_color": "#f5b642",
  "icons": [
    {
      "src": "images/icon-192.png",
      "sizes": "192x192",
      "type": "image/png"
    },
    {
      "src": "images/icon-512.png",
      "sizes": "512x512",
      "type": "image/png"
    }
  ]
}</code></pre>

<h2>Link the Manifest in Your HTML</h2>
<p>Add this line to the head of your index.html:</p>
<pre><code>&lt;link rel="manifest" href="manifest.json"&gt;</code></pre>

<h2>Creating a Basic Service Worker</h2>
<p>The service worker (sw.js) handles caching and offline functionality:</p>

<pre><code>const CACHE_NAME = \'my-pwa-cache-v1\';
const urlsToCache = [
  \'./\',
  \'./index.html\',
  \'./styles.css\',
  \'./app.js\'
];

// Install the service worker and cache assets
self.addEventListener(\'install\', event => {
  event.waitUntil(
    caches.open(CACHE_NAME)
      .then(cache => {
        return cache.addAll(urlsToCache);
      })
  );
});

// Fetch from cache first, then network
self.addEventListener(\'fetch\', event => {
  event.respondWith(
    caches.match(event.request)
      .then(response => {
        // Cache hit - return response
        if (response) {
          return response;
        }
        return fetch(event.request);
      }
    )
  );
});</code></pre>

<h2>Register the Service Worker</h2>
<p>Add this script to your app.js file:</p>

<pre><code>if (\'serviceWorker\' in navigator) {
  window.addEventListener(\'load\', () => {
    navigator.serviceWorker.register(\'./sw.js\')
      .then(registration => {
        console.log(\'ServiceWorker registration successful\');
      })
      .catch(err => {
        console.log(\'ServiceWorker registration failed: \', err);
      });
  });
}</code></pre>

<h2>Making the App Installable</h2>
<p>To allow users to install your PWA, you need to implement an "add to home screen" button:</p>

<pre><code>let deferredPrompt;

window.addEventListener(\'beforeinstallprompt\', (e) => {
  // Prevent Chrome from automatically showing the prompt
  e.preventDefault();
  // Stash the event so it can be triggered later
  deferredPrompt = e;
  // Show the install button
  document.getElementById(\'install-button\').style.display = \'block\';
});

document.getElementById(\'install-button\').addEventListener(\'click\', (e) => {
  // Hide the install button
  document.getElementById(\'install-button\').style.display = \'none\';
  // Show the install prompt
  deferredPrompt.prompt();
  // Wait for the user to respond to the prompt
  deferredPrompt.userChoice.then((choiceResult) => {
    if (choiceResult.outcome === \'accepted\') {
      console.log(\'User accepted the install prompt\');
    } else {
      console.log(\'User dismissed the install prompt\');
    }
    // Clear the deferredPrompt variable
    deferredPrompt = null;
  });
});</code></pre>

<h2>Testing Your PWA</h2>
<p>To test your PWA:</p>
<ol>
    <li>Serve your app over HTTPS (you can use GitHub Pages for testing)</li>
    <li>Open Chrome DevTools and go to the Application tab</li>
    <li>Check the Manifest and Service Worker sections for any issues</li>
    <li>Use the Lighthouse audit to evaluate your PWA implementation</li>
</ol>

<h2>Next Steps</h2>
<p>Once you\'ve created your basic PWA, consider adding:</p>
<ul>
    <li>Push notifications</li>
    <li>Background sync</li>
    <li>Advanced caching strategies</li>
    <li>Responsive design optimized for various devices</li>
</ul>

<p>Building PWAs is a powerful way to create cross-platform applications using web technologies. With the basics covered in this tutorial, you\'re well on your way to creating fast, reliable, and engaging web applications that work for all your users.</p>',
            'featured_image' => 'blog5.jpg',
            'category_id' => 2,
            'category_name' => 'Tutorials',
            'category_slug' => 'tutorials',
            'author_id' => 1,
            'author_name' => 'vuyani',
            'status' => 'published',
            'is_featured' => 0,
            'views' => 98,
            'published_at' => '2025-03-20 13:45:00',
            'created_at' => '2025-03-19 11:20:00',
            'updated_at' => '2025-03-20 14:30:00',
            'tags' => [
                ['name' => 'PWA', 'slug' => 'pwa'],
                ['name' => 'JavaScript', 'slug' => 'javascript'],
                ['name' => 'Web Development', 'slug' => 'web-development'],
                ['name' => 'App Development', 'slug' => 'app-development']
            ]
        ]
    ],
    'resources' => [
        [
            'id' => 1,
            'title' => 'Responsive CSS Grid Cheat Sheet',
            'slug' => 'responsive-css-grid-cheat-sheet',
            'description' => 'A comprehensive reference guide for CSS Grid properties and techniques, with examples for responsive layouts.',
            'file_path' => 'resources/responsive-css-grid-cheat-sheet.pdf',
            'file_size' => 1258291, // approximately 1.2 MB
            'file_type' => 'application/pdf',
            'thumbnail' => 'resources/thumbnails/css-grid-thumb.jpg',
            'download_count' => 143,
            'requires_login' => false,
            'author_id' => 1,
            'author_name' => 'vuyani',
            'status' => 'published',
            'created_at' => '2025-03-15 10:30:00',
            'updated_at' => '2025-03-15 10:30:00'
        ],
        [
            'id' => 2,
            'title' => 'Blender Keyboard Shortcuts Poster',
            'slug' => 'blender-keyboard-shortcuts',
            'description' => 'Printable poster with all essential Blender keyboard shortcuts, organized by function.',
            'file_path' => 'resources/blender-shortcuts-poster.pdf',
            'file_size' => 2153984, // approximately 2.1 MB
            'file_type' => 'application/pdf',
            'thumbnail' => 'resources/thumbnails/blender-shortcuts-thumb.jpg',
            'download_count' => 98,
            'requires_login' => false,
            'author_id' => 1,
            'author_name' => 'vuyani',
            'status' => 'published',
            'created_at' => '2025-03-10 15:45:00',
            'updated_at' => '2025-03-10 15:45:00'
        ],
        [
            'id' => 3,
            'title' => 'Arduino Starter Kit Project Files',
            'slug' => 'arduino-starter-kit-files',
            'description' => 'Complete code samples and circuit diagrams for 10 beginner Arduino projects.',
            'file_path' => 'resources/arduino-starter-kit.zip',
            'file_size' => 4521984, // approximately 4.3 MB
            'file_type' => 'application/zip',
            'thumbnail' => 'resources/thumbnails/arduino-kit-thumb.jpg',
            'download_count' => 76,
            'requires_login' => true,
            'author_id' => 1,
            'author_name' => 'vuyani',
            'status' => 'published',
            'created_at' => '2025-03-05 09:20:00',
            'updated_at' => '2025-03-05 09:20:00'
        ],
        [
            'id' => 4,
            'title' => 'Typography Fundamentals eBook',
            'slug' => 'typography-fundamentals-ebook',
            'description' => 'A 50-page eBook covering typography basics, principles, and practical applications for designers.',
            'file_path' => 'resources/typography-fundamentals.pdf',
            'file_size' => 8126464, // approximately 7.8 MB
            'file_type' => 'application/pdf',
            'thumbnail' => 'resources/thumbnails/typography-ebook-thumb.jpg',
            'download_count' => 112,
            'requires_login' => true,
            'author_id' => 1,
            'author_name' => 'vuyani',
            'status' => 'published',
            'created_at' => '2025-02-25 13:10:00',
            'updated_at' => '2025-02-25 13:10:00'
        ],
        [
            'id' => 5,
            'title' => 'Web Design Color Palette Templates',
            'slug' => 'web-design-color-palettes',
            'description' => 'Collection of 15 carefully crafted color palettes in Adobe Swatch Exchange format, suitable for various types of websites.',
            'file_path' => 'resources/web-color-palettes.zip',
            'file_size' => 1572864, // approximately 1.5 MB
            'file_type' => 'application/zip',
            'thumbnail' => 'resources/thumbnails/color-palettes-thumb.jpg',
            'download_count' => 189,
            'requires_login' => false,
            'author_id' => 1,
            'author_name' => 'vuyani',
            'status' => 'published',
            'created_at' => '2025-02-18 16:40:00',
            'updated_at' => '2025-02-18 16:40:00'
        ]
    ],
'featuredPosts' => [
        [
            'id' => 1,
            'title' => 'Getting Started with 3D Modeling for Beginners',
            'slug' => 'getting-started-with-3d-modeling',
            'excerpt' => 'Learn the basics of 3D modeling with this comprehensive guide for absolute beginners.',
            'featured_image' => 'blog1.jpg',
            'category_id' => 1,
            'category_name' => 'Articles',
            'category_slug' => 'articles',
            'published_at' => '2025-04-15 10:30:00'
        ],
        [
            'id' => 2,
            'title' => 'Creating Responsive Websites with Modern CSS Grid',
            'slug' => 'responsive-websites-with-css-grid',
            'excerpt' => 'Discover how to build flexible and responsive layouts using CSS Grid without relying on frameworks.',
            'featured_image' => 'blog2.jpg',
            'category_id' => 1,
            'category_name' => 'Articles',
            'category_slug' => 'articles',
            'published_at' => '2025-04-10 14:15:00'
        ],
        [
            'id' => 3,
            'title' => 'Introduction to Arduino for Maker Projects',
            'slug' => 'introduction-to-arduino-for-makers',
            'excerpt' => 'Learn how to get started with Arduino for your DIY electronic projects.',
            'featured_image' => 'blog3.jpg',
            'category_id' => 2,
            'category_name' => 'Tutorials',
            'category_slug' => 'tutorials',
            'published_at' => '2025-04-05 09:20:00'
        ]
    ],
    'categories' => [
        [
            'id' => 1,
            'name' => 'Articles',
            'slug' => 'articles',
            'description' => 'General articles about design and development'
        ],
        [
            'id' => 2,
            'name' => 'Tutorials',
            'slug' => 'tutorials',
            'description' => 'Step-by-step tutorials and guides'
        ],
        [
            'id' => 3,
            'name' => 'Resources',
            'slug' => 'resources',
            'description' => 'Downloadable resources and tools'
        ]
    ]
];


================================================
FILE: portfolio-website/app/models/BaseModel.php
================================================
<?php

namespace App\Models;

use PDO;
use PDOException;

/**
 * Base Model
 * Contains common database operations for all models
 */
abstract class BaseModel {
    /**
     * Database connection instance
     * @var PDO
     */
    protected $db;
    
    /**
     * Flag indicating if database is connected
     * @var bool
     */
    protected $dbConnected = false;

    /**
     * Constructor
     * Initializes the database connection
     */
    public function __construct() {
        try {
            $this->db = \App\Core\Database::connect();
            $this->dbConnected = true;
        } catch (PDOException $e) {
            // Handle database connection error
            $this->dbConnected = false;
            error_log('Database connection error: ' . $e->getMessage());
            
            // We don't rethrow the exception here to allow the application to continue
            // Models should check $this->dbConnected before performing database operations
        }
    }
    
    /**
     * Check if database is connected
     * @return bool True if connected, false otherwise
     */
    protected function isConnected() {
        return $this->dbConnected;
    }

    /**
     * Get all records from a table
     * @param string $table Table name
     * @param string $orderBy Column to order by
     * @param string $order Order direction (ASC or DESC)
     * @return array Array of records
     */
    protected function getAll($table, $orderBy = 'id', $order = 'ASC') {
        if (!$this->dbConnected) {
            return [];
        }
        
        $query = "SELECT * FROM {$table} ORDER BY {$orderBy} {$order}";
        $stmt = $this->db->prepare($query);
        $stmt->execute();
        
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    }

    /**
     * Get a single record by ID
     * @param string $table Table name
     * @param int $id Record ID
     * @return array|bool Record array or false if not found
     */
    protected function getById($table, $id) {
        if (!$this->dbConnected) {
            return false;
        }
        
        $query = "SELECT * FROM {$table} WHERE id = :id";
        $stmt = $this->db->prepare($query);
        $stmt->bindValue(':id', $id, PDO::PARAM_INT);
        $stmt->execute();
        
        return $stmt->fetch(PDO::FETCH_ASSOC);
    }

    /**
     * Get records by a specific field value
     * @param string $table Table name
     * @param string $field Field name
     * @param mixed $value Field value
     * @param string $orderBy Column to order by
     * @param string $order Order direction (ASC or DESC)
     * @return array Array of records
     */
    protected function getByField($table, $field, $value, $orderBy = 'id', $order = 'ASC') {
        if (!$this->dbConnected) {
            return [];
        }
        
        $query = "SELECT * FROM {$table} WHERE {$field} = :value ORDER BY {$orderBy} {$order}";
        $stmt = $this->db->prepare($query);
        $stmt->bindValue(':value', $value);
        $stmt->execute();
        
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    }

    /**
     * Get a single record by a specific field value
     * @param string $table Table name
     * @param string $field Field name
     * @param mixed $value Field value
     * @return array|bool Record array or false if not found
     */
    protected function getSingleByField($table, $field, $value) {
        if (!$this->dbConnected) {
            return false;
        }
        
        $query = "SELECT * FROM {$table} WHERE {$field} = :value LIMIT 1";
        $stmt = $this->db->prepare($query);
        $stmt->bindValue(':value', $value);
        $stmt->execute();
        
        return $stmt->fetch(PDO::FETCH_ASSOC);
    }

    /**
     * Create a new record
     * @param string $table Table name
     * @param array $data Associative array of field => value
     * @return int|bool Last insert ID or false on failure
     */
    protected function create($table, $data) {
        if (!$this->dbConnected) {
            return false;
        }
        
        // Get field names and placeholders
        $fields = array_keys($data);
        $placeholders = array_map(function($field) {
            return ":{$field}";
        }, $fields);
        
        // Build the query
        $fieldString = implode(', ', $fields);
        $placeholderString = implode(', ', $placeholders);
        $query = "INSERT INTO {$table} ({$fieldString}) VALUES ({$placeholderString})";
        
        // Prepare and execute the query
        $stmt = $this->db->prepare($query);
        foreach ($data as $field => $value) {
            $stmt->bindValue(":{$field}", $value);
        }
        
        if ($stmt->execute()) {
            return $this->db->lastInsertId();
        }
        
        return false;
    }

    /**
     * Update an existing record
     * @param string $table Table name
     * @param int $id Record ID
     * @param array $data Associative array of field => value
     * @return bool True on success, false on failure
     */
    protected function update($table, $id, $data) {
        if (!$this->dbConnected) {
            return false;
        }
        
        // Get field names and placeholders
        $setStatements = array_map(function($field) {
            return "{$field} = :{$field}";
        }, array_keys($data));
        
        // Build the query
        $setString = implode(', ', $setStatements);
        $query = "UPDATE {$table} SET {$setString} WHERE id = :id";
        
        // Prepare and execute the query
        $stmt = $this->db->prepare($query);
        $stmt->bindValue(':id', $id, PDO::PARAM_INT);
        foreach ($data as $field => $value) {
            $stmt->bindValue(":{$field}", $value);
        }
        
        return $stmt->execute();
    }

    /**
     * Delete a record
     * @param string $table Table name
     * @param int $id Record ID
     * @return bool True on success, false on failure
     */
    protected function delete($table, $id) {
        if (!$this->dbConnected) {
            return false;
        }
        
        $query = "DELETE FROM {$table} WHERE id = :id";
        $stmt = $this->db->prepare($query);
        $stmt->bindValue(':id', $id, PDO::PARAM_INT);
        
        return $stmt->execute();
    }

    /**
     * Count the number of records in a table
     * @param string $table Table name
     * @param string $whereClause Optional WHERE clause
     * @param array $params Optional parameters for WHERE clause
     * @return int Number of records
     */
    protected function count($table, $whereClause = '', $params = []) {
        if (!$this->dbConnected) {
            return 0;
        }
        
        $query = "SELECT COUNT(*) as count FROM {$table}";
        
        if (!empty($whereClause)) {
            $query .= " WHERE {$whereClause}";
        }
        
        $stmt = $this->db->prepare($query);
        
        foreach ($params as $param => $value) {
            $stmt->bindValue(":{$param}", $value);
        }
        
        $stmt->execute();
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        
        return $result['count'];
    }

    /**
     * Execute a custom query
     * @param string $query SQL query
     * @param array $params Parameters for the query
     * @param bool $fetchAll Whether to fetch all results or just one
     * @return mixed Query results
     */
    protected function query($query, $params = [], $fetchAll = true) {
        if (!$this->dbConnected) {
            return $fetchAll ? [] : false;
        }
        
        $stmt = $this->db->prepare($query);
        
        foreach ($params as $param => $value) {
            $stmt->bindValue(":{$param}", $value);
        }
        
        $stmt->execute();
        
        if ($fetchAll) {
            return $stmt->fetchAll(PDO::FETCH_ASSOC);
        } else {
            return $stmt->fetch(PDO::FETCH_ASSOC);
        }
    }

    /**
     * Begin a transaction
     * @return bool True on success, false on failure
     */
    protected function beginTransaction() {
        if (!$this->dbConnected) {
            return false;
        }
        
        return $this->db->beginTransaction();
    }

    /**
     * Commit a transaction
     * @return bool True on success, false on failure
     */
    protected function commit() {
        if (!$this->dbConnected) {
            return false;
        }
        
        return $this->db->commit();
    }

    /**
     * Roll back a transaction
     * @return bool True on success, false on failure
     */
    protected function rollBack() {
        if (!$this->dbConnected) {
            return false;
        }
        
        return $this->db->rollBack();
    }

    /**
     * Get the last inserted ID
     * @return string The last inserted ID
     */
    protected function lastInsertId() {
        if (!$this->dbConnected) {
            return null;
        }
        
        return $this->db->lastInsertId();
    }

    /**
     * Get database error info
     * @return array Database error info
     */
    protected function errorInfo() {
        if (!$this->dbConnected) {
            return ['Database not connected'];
        }
        
        return $this->db->errorInfo();
    }
}


================================================
FILE: portfolio-website/app/models/BlogPost.php
================================================
<?php

namespace App\Models;

use PDO;

class BlogPost extends BaseModel {
    private $table = 'blog_posts';
    private $dummyData;
    
    public function __construct() {
        parent::__construct();
        
        // If database connection failed, load dummy data
        if (!$this->isConnected()) {
            $dummyDataPath = dirname(__DIR__) . '/data/blog_dummy_data.php';
            if (file_exists($dummyDataPath)) {
                $this->dummyData = require $dummyDataPath;
            } else {
                $this->dummyData = [
                    'posts' => [],
                    'featuredPosts' => [],
                    'categories' => []
                ];
                error_log('Blog dummy data file not found: ' . $dummyDataPath);
            }
        }
    }
    
    public function getRecentPosts($limit = 10) {
        // Check if we're using dummy data
        if (isset($this->dummyData)) {
            $posts = array_slice($this->dummyData['posts'], 0, $limit);
            return $posts;
        }
        
        // Use database if available
        $query = "SELECT p.*, c.name as category_name, c.slug as category_slug, u.username as author_name 
                  FROM {$this->table} p
                  LEFT JOIN blog_categories c ON p.category_id = c.id
                  LEFT JOIN users u ON p.author_id = u.id
                  WHERE p.status = 'published' AND p.published_at <= NOW()
                  ORDER BY p.published_at DESC
                  LIMIT :limit";
                  
        return $this->query($query, ['limit' => $limit]);
    }
    
    public function getPostBySlug($slug) {
        // Check if we're using dummy data
        if (isset($this->dummyData)) {
            foreach ($this->dummyData['posts'] as $post) {
                if ($post['slug'] === $slug) {
                    return $post;
                }
            }
            return null;
        }
        
        // Use database if available
        $query = "SELECT p.*, c.name as category_name, c.slug as category_slug, u.username as author_name, u.first_name, u.last_name
                  FROM {$this->table} p
                  LEFT JOIN blog_categories c ON p.category_id = c.id
                  LEFT JOIN users u ON p.author_id = u.id
                  WHERE p.slug = :slug AND p.status = 'published' AND p.published_at <= NOW()";
                  
        $post = $this->query($query, ['slug' => $slug], false);
        
        if ($post) {
            // Get tags for this post
            $tagsQuery = "SELECT t.name, t.slug 
                          FROM tags t
                          JOIN blog_post_tags pt ON t.id = pt.tag_id
                          WHERE pt.post_id = :post_id";
                          
            // Execute the query and assign the result to post->tags
            $tags = $this->query($tagsQuery, ['post_id' => $post->id]);
            $post->tags = $tags;
        }
        
        return $post;
    }
    
    public function getRelatedPosts($postId, $categoryId, $limit = 3) {
        // Check if we're using dummy data
        if (isset($this->dummyData)) {
            $relatedPosts = [];
            $count = 0;
            
            foreach ($this->dummyData['posts'] as $post) {
                if ($post['id'] != $postId && $post['category_id'] == $categoryId && $count < $limit) {
                    $relatedPosts[] = [
                        'id' => $post['id'],
                        'title' => $post['title'],
                        'slug' => $post['slug'],
                        'excerpt' => $post['excerpt'],
                        'featured_image' => $post['featured_image'],
                        'published_at' => $post['published_at']
                    ];
                    $count++;
                }
            }
            
            return $relatedPosts;
        }
        
        // Use database if available
        $query = "SELECT p.id, p.title, p.slug, p.excerpt, p.featured_image, p.published_at
                  FROM {$this->table} p
                  WHERE p.id != :post_id AND p.category_id = :category_id 
                        AND p.status = 'published' AND p.published_at <= NOW()
                  ORDER BY p.published_at DESC
                  LIMIT :limit";
                  
        return $this->query($query, [
            'post_id' => $postId,
            'category_id' => $categoryId,
            'limit' => $limit
        ]);
    }
    
    public function incrementViews($postId) {
        // Check if we're using dummy data
        if (isset($this->dummyData)) {
            foreach ($this->dummyData['posts'] as &$post) {
                if ($post['id'] == $postId) {
                    $post['views']++;
                    break;
                }
            }
            return true;
        }
        
        // Use database if available
        $query = "UPDATE {$this->table} SET views = views + 1 WHERE id = :id";
        return $this->query($query, ['id' => $postId], false);
    }
    
    public function getFeaturedPosts($limit = 3) {
        // Check if we're using dummy data
        if (isset($this->dummyData)) {
            return isset($this->dummyData['featuredPosts']) ? 
                   array_slice($this->dummyData['featuredPosts'], 0, $limit) : [];
        }
        
        // Use database if available
        $query = "SELECT p.*, c.name as category_name, c.slug as category_slug
                  FROM {$this->table} p
                  LEFT JOIN blog_categories c ON p.category_id = c.id
                  WHERE p.is_featured = 1 AND p.status = 'published' AND p.published_at <= NOW()
                  ORDER BY p.published_at DESC
                  LIMIT :limit";
                  
        return $this->query($query, ['limit' => $limit]);
    }
    
    public function getPostsByCategory($categorySlug, $limit = 10, $offset = 0) {
        // Check if we're using dummy data
        if (isset($this->dummyData)) {
            $posts = [];
            $count = 0;
            
            foreach ($this->dummyData['posts'] as $post) {
                if ($post['category_slug'] == $categorySlug && $count < $limit) {
                    $posts[] = $post;
                    $count++;
                }
            }
            
            return $posts;
        }
        
        // Use database if available
        $query = "SELECT p.*, c.name as category_name, c.slug as category_slug, u.username as author_name
                  FROM {$this->table} p
                  LEFT JOIN blog_categories c ON p.category_id = c.id
                  LEFT JOIN users u ON p.author_id = u.id
                  WHERE c.slug = :category_slug AND p.status = 'published' AND p.published_at <= NOW()
                  ORDER BY p.published_at DESC
                  LIMIT :limit OFFSET :offset";
                  
        return $this->query($query, [
            'category_slug' => $categorySlug,
            'limit' => $limit,
            'offset' => $offset
        ]);
    }
}


================================================
FILE: portfolio-website/app/models/Client.php
================================================



================================================
FILE: portfolio-website/app/models/Contact.php
================================================
<?php

namespace App\Models;

use PDO;
use Exception;

class Contact extends BaseModel {
    private $table = 'contact_submissions';
    
    public function saveSubmission($data) {
        // Check if we're using dummy data (no database connection)
        if (!$this->isConnected()) {
            // In a real scenario, you might log this to a file
            error_log('Contact form submission (no DB): ' . json_encode($data));
            return true; // Simulate success
        }
        
        try {
            $query = "INSERT INTO {$this->table} (name, email, subject, message, ip_address, created_at) 
                      VALUES (:name, :email, :subject, :message, :ip_address, NOW())";
            
            $stmt = $this->db->prepare($query);
            $result = $stmt->execute([
                'name' => $data['name'],
                'email' => $data['email'],
                'subject' => $data['subject'],
                'message' => $data['message'],
                'ip_address' => $data['ip_address']
            ]);
            
            return $result;
        } catch (Exception $e) {
            error_log('Contact form submission error: ' . $e->getMessage());
            return false;
        }
    }
    
    public function getAllSubmissions($limit = 50, $offset = 0) {
        // Check if we're using dummy data
        if (!$this->isConnected()) {
            return []; // Return empty array if no database
        }
        
        $query = "SELECT * FROM {$this->table} 
                  ORDER BY created_at DESC 
                  LIMIT :limit OFFSET :offset";
        
        return $this->query($query, ['limit' => $limit, 'offset' => $offset]);
    }
    
    public function getSubmissionById($id) {
        // Check if we're using dummy data
        if (!$this->isConnected()) {
            return null;
        }
        
        $query = "SELECT * FROM {$this->table} WHERE id = :id";
        return $this->query($query, ['id' => $id], false);
    }
    
    public function markAsRead($id) {
        // Check if we're using dummy data
        if (!$this->isConnected()) {
            return true;
        }
        
        $query = "UPDATE {$this->table} SET is_read = 1 WHERE id = :id";
        return $this->query($query, ['id' => $id], false);
    }
    
    public function getUnreadCount() {
        // Check if we're using dummy data
        if (!$this->isConnected()) {
            return 0;
        }
        
        $query = "SELECT COUNT(*) as count FROM {$this->table} WHERE is_read = 0";
        $result = $this->query($query, [], false);
        return $result ? $result->count : 0;
    }
    
    public function deleteSubmission($id) {
        // Check if we're using dummy data
        if (!$this->isConnected()) {
            return true;
        }
        
        $query = "DELETE FROM {$this->table} WHERE id = :id";
        return $this->query($query, ['id' => $id], false);
    }
}


================================================
FILE: portfolio-website/app/models/Project.php
================================================



================================================
FILE: portfolio-website/app/models/Resource.php
================================================
<?php

namespace App\Models;

use PDO;

class Resource extends BaseModel {
    private $table = 'resources';
    private $dummyData;
    
    public function __construct() {
        parent::__construct();
        
        // If database connection failed, load dummy data
        if (!$this->isConnected()) {
            $dummyDataPath = dirname(__DIR__) . '/data/blog_dummy_data.php';
            if (file_exists($dummyDataPath)) {
                $this->dummyData = require $dummyDataPath;
            } else {
                $this->dummyData = [
                    'resources' => []
                ];
                error_log('Resource dummy data file not found: ' . $dummyDataPath);
            }
        }
    }
    
    public function getAllPublished() {
        // Check if we're using dummy data
        if (isset($this->dummyData)) {
            return isset($this->dummyData['resources']) ? $this->dummyData['resources'] : [];
        }
        
        // Use database if available
        $query = "SELECT r.*, u.username as author_name
                  FROM {$this->table} r
                  LEFT JOIN users u ON r.author_id = u.id
                  WHERE r.status = 'published'
                  ORDER BY r.created_at DESC";
                  
        return $this->query($query);
    }
    
    public function getById($id) {
        // Check if we're using dummy data
        if (isset($this->dummyData)) {
            foreach ($this->dummyData['resources'] as $resource) {
                if ($resource['id'] == $id) {
                    return $resource;
                }
            }
            return null;
        }
        
        // Use database if available
        return $this->getById($this->table, $id);
    }
    
    public function incrementDownloads($id) {
        // Check if we're using dummy data
        if (isset($this->dummyData)) {
            foreach ($this->dummyData['resources'] as &$resource) {
                if ($resource['id'] == $id) {
                    $resource['download_count']++;
                    break;
                }
            }
            return true;
        }
        
        // Use database if available
        $query = "UPDATE {$this->table} SET download_count = download_count + 1 WHERE id = :id";
        return $this->query($query, ['id' => $id], false);
    }
}


================================================
FILE: portfolio-website/app/models/User.php
================================================



================================================
FILE: portfolio-website/app/views/admin/blog.php
================================================



================================================
FILE: portfolio-website/app/views/admin/dashboard.php
================================================



================================================
FILE: portfolio-website/app/views/admin/projects.php
================================================



================================================
FILE: portfolio-website/app/views/admin/resources.php
================================================



================================================
FILE: portfolio-website/app/views/auth/login.php
================================================



================================================
FILE: portfolio-website/app/views/auth/register.php
================================================



================================================
FILE: portfolio-website/app/views/blog/article.php
================================================
<?php require_once '../app/views/partials/header.php'; ?>

<div class="container">
    <article class="blog-article">
        <div class="article-header">
            <span class="article-category">
                <a href="<?php echo $baseUrl; ?>/blog/category/<?php echo $post['category_slug']; ?>">
                    <?php echo $post['category_name']; ?>
                </a>
            </span>
            <h1 class="article-title"><?php echo $post['title']; ?></h1>
            
            <div class="article-meta">
                <span class="article-date"><?php echo date('F d, Y', strtotime($post['published_at'])); ?></span>
                <span class="article-author">
                    By <?php echo !empty($post['first_name']) ? $post['first_name'] . ' ' . $post['last_name'] : $post['author_name']; ?>
                </span>
                <span class="article-views"><?php echo $post['views']; ?> views</span>
            </div>
            
            <?php if(!empty($post['featured_image'])): ?>
                <div class="article-featured-image">
                    <img src="<?php echo $baseUrl; ?>/images/blog/<?php echo $post['featured_image']; ?>" alt="<?php echo $post['title']; ?>">
                </div>
            <?php endif; ?>
        </div>
        
        <div class="article-content">
            <?php echo $post['content']; ?>
        </div>
        
        <?php if(!empty($post['tags'])): ?>
            <div class="article-tags">
                <?php foreach($post['tags'] as $tag): ?>
                    <a href="<?php echo $baseUrl; ?>/blog/tag/<?php echo $tag['slug']; ?>" class="tag"><?php echo $tag['name']; ?></a>
                <?php endforeach; ?>
            </div>
        <?php endif; ?>
        
        <div class="article-share">
            <span class="share-label">Share this article:</span>
            <div class="share-buttons">
                <a href="https://twitter.com/intent/tweet?url=<?php echo urlencode($baseUrl . '/blog/article/' . $post['slug']); ?>&text=<?php echo urlencode($post['title']); ?>" target="_blank" class="share-button twitter-share">
                    <i class="fab fa-twitter"></i>
                </a>
                <a href="https://www.facebook.com/sharer/sharer.php?u=<?php echo urlencode($baseUrl . '/blog/article/' . $post['slug']); ?>" target="_blank" class="share-button facebook-share">
                    <i class="fab fa-facebook-f"></i>
                </a>
                <a href="https://www.linkedin.com/shareArticle?mini=true&url=<?php echo urlencode($baseUrl . '/blog/article/' . $post['slug']); ?>&title=<?php echo urlencode($post['title']); ?>" target="_blank" class="share-button linkedin-share">
                    <i class="fab fa-linkedin-in"></i>
                </a>
            </div>
        </div>
        
        <div class="article-author-bio">
            <div class="author-avatar">
                <img src="<?php echo $baseUrl; ?>/images/author-avatar.jpg" alt="Author Avatar">
            </div>
            <div class="author-info">
                <h3 class="author-name">
                    <?php echo !empty($post['first_name']) ? $post['first_name'] . ' ' . $post['last_name'] : $post['author_name']; ?>
                </h3>
                <p class="author-description">Passionate about technology and design, constantly exploring new ways to create and innovate. Follow along on this journey of discovery and learning.</p>
                <div class="author-social">
                    <a href="#" class="social-link"><i class="fab fa-twitter"></i></a>
                    <a href="#" class="social-link"><i class="fab fa-linkedin-in"></i></a>
                    <a href="#" class="social-link"><i class="fab fa-github"></i></a>
                </div>
            </div>
        </div>
    </article>
    
    <?php if(!empty($relatedPosts)): ?>
        <section class="related-posts">
            <h2 class="section-title">Related Articles</h2>
            <div class="related-posts-grid">
                <?php foreach($relatedPosts as $relatedPost): ?>
                    <div class="related-post-card">
                        <div class="post-image">
                            <?php if(!empty($relatedPost['featured_image'])): ?>
                                <img src="<?php echo $baseUrl; ?>/images/blog/<?php echo $relatedPost['featured_image']; ?>" alt="<?php echo $relatedPost['title']; ?>">
                            <?php else: ?>
                                <img src="<?php echo $baseUrl; ?>/images/blog/default-post.jpg" alt="Default post image">
                            <?php endif; ?>
                        </div>
                        <div class="post-content">
                            <h3 class="post-title">
                                <a href="<?php echo $baseUrl; ?>/blog/article/<?php echo $relatedPost['slug']; ?>"><?php echo $relatedPost['title']; ?></a>
                            </h3>
                            <span class="post-date"><?php echo date('M d, Y', strtotime($relatedPost['published_at'])); ?></span>
                        </div>
                    </div>
                <?php endforeach; ?>
            </div>
        </section>
    <?php endif; ?>
</div>

<?php require_once '../app/views/partials/footer.php'; ?>


================================================
FILE: portfolio-website/app/views/blog/index.php
================================================
<?php require_once '../app/views/partials/header.php'; ?>

<div class="container">
    <section class="blog-header">
        <h1 class="page-title">Exploring Tech & Creativity</h1>
        <p class="page-subtitle">Insights, tutorials, and resources to inspire your journey</p>
    </section>
    
    <?php if(!empty($featuredPosts)): ?>
    <section class="featured-posts">
        <h2 class="section-title">Featured Articles</h2>
        <div class="featured-posts-grid">
            <?php foreach($featuredPosts as $post): ?>
                <div class="featured-post-card">
                    <div class="post-image">
                        <?php if(!empty($post['featured_image'])): ?>
                            <img src="<?php echo $baseUrl; ?>/images/blog/<?php echo $post['featured_image']; ?>" alt="<?php echo $post['title']; ?>">
                        <?php else: ?>
                            <img src="<?php echo $baseUrl; ?>/images/blog/default-post.jpg" alt="Default post image">
                        <?php endif; ?>
                    </div>
                    <div class="post-content">
                        <span class="post-category"><?php echo $post['category_name']; ?></span>
                        <h3 class="post-title"><?php echo $post['title']; ?></h3>
                        <p class="post-excerpt"><?php echo $post['excerpt']; ?></p>
                        <div class="post-meta">
                            <span class="post-date"><?php echo date('M d, Y', strtotime($post['published_at'])); ?></span>
                            <a href="<?php echo $baseUrl; ?>/blog/article/<?php echo $post['slug']; ?>" class="read-more">Read More</a>
                        </div>
                    </div>
                </div>
            <?php endforeach; ?>
        </div>
    </section>
    <?php endif; ?>
    
    <section class="blog-content">
        <div class="posts-container">
            <h2 class="section-title">Latest Articles</h2>
            
            <?php if(empty($posts)): ?>
                <div class="no-posts-message">
                    <p>No articles available yet. Check back soon!</p>
                </div>
            <?php else: ?>
                <div class="posts-grid">
                    <?php foreach($posts as $post): ?>
                        <div class="post-card">
                            <div class="post-image">
                                <?php if(!empty($post['featured_image'])): ?>
                                    <img src="<?php echo $baseUrl; ?>/images/blog/<?php echo $post['featured_image']; ?>" alt="<?php echo $post['title']; ?>">
                                <?php else: ?>
                                    <img src="<?php echo $baseUrl; ?>/images/blog/default-post.jpg" alt="Default post image">
                                <?php endif; ?>
                                <span class="post-category"><?php echo $post['category_name']; ?></span>
                            </div>
                            <div class="post-content">
                                <h3 class="post-title">
                                    <a href="<?php echo $baseUrl; ?>/blog/article/<?php echo $post['slug']; ?>"><?php echo $post['title']; ?></a>
                                </h3>
                                <p class="post-excerpt"><?php echo $post['excerpt']; ?></p>
                                <div class="post-meta">
                                    <span class="post-date"><?php echo date('M d, Y', strtotime($post['published_at'])); ?></span>
                                    <span class="post-author">by <?php echo $post['author_name']; ?></span>
                                </div>
                            </div>
                        </div>
                    <?php endforeach; ?>
                </div>
            <?php endif; ?>
        </div>
        
        <div class="blog-sidebar">
            <div class="sidebar-widget categories-widget">
                <h3 class="widget-title">Categories</h3>
                <ul class="category-list">
                    <li><a href="<?php echo $baseUrl; ?>/blog">All Articles</a></li>
                    <li><a href="<?php echo $baseUrl; ?>/blog/category/articles">Articles</a></li>
                    <li><a href="<?php echo $baseUrl; ?>/blog/category/tutorials">Tutorials</a></li>
                    <li><a href="<?php echo $baseUrl; ?>/blog/resources">Resources</a></li>
                </ul>
            </div>
            
            <div class="sidebar-widget newsletter-widget">
                <h3 class="widget-title">Subscribe</h3>
                <p>Stay updated with my latest articles and resources</p>
                <form class="newsletter-form">
                    <input type="email" placeholder="Your email address" required>
                    <button type="submit" class="subscribe-btn">Subscribe</button>
                </form>
            </div>
            
            <div class="sidebar-widget resources-widget">
                <h3 class="widget-title">Popular Resources</h3>
                <div class="resource-links">
                    <a href="<?php echo $baseUrl; ?>/blog/resources" class="resource-link">
                        <span class="resource-icon">📚</span>
                        <span class="resource-title">View All Resources</span>
                    </a>
                </div>
            </div>
        </div>
    </section>
</div>

<?php require_once '../app/views/partials/footer.php'; ?>


================================================
FILE: portfolio-website/app/views/blog/resources.php
================================================
<?php require_once '../app/views/partials/header.php'; ?>

<div class="container">
    <section class="resources-header">
        <h1 class="page-title">Resources & Downloads</h1>
        <p class="page-subtitle">Free tools, templates, and guides to help you in your creative journey</p>
    </section>
    
    <section class="resources-content">
        <?php if(empty($resources)): ?>
            <div class="no-resources-message">
                <p>No resources available yet. Check back soon!</p>
            </div>
        <?php else: ?>
            <div class="resources-filter">
                <h3 class="filter-title">Filter by:</h3>
                <div class="filter-buttons">
                    <button class="filter-btn active" data-filter="all">All</button>
                    <button class="filter-btn" data-filter="template">Templates</button>
                    <button class="filter-btn" data-filter="tool">Tools</button>
                    <button class="filter-btn" data-filter="guide">Guides</button>
                </div>
            </div>
            
            <div class="resources-grid">
                <?php foreach($resources as $resource): ?>
                    <?php 
                        // Extract file type from the file_type field or guess from the path
                        $fileType = !empty($resource['file_type']) ? strtolower($resource['file_type']) : '';
                        $resourceClass = '';
                        $resourceIcon = '📄';
                        
                        if (strpos($fileType, 'pdf') !== false) {
                            $resourceClass = 'pdf-resource';
                            $resourceIcon = '📕';
                        } elseif (strpos($fileType, 'zip') !== false) {
                            $resourceClass = 'zip-resource';
                            $resourceIcon = '📦';
                        } elseif (strpos($fileType, 'image') !== false) {
                            $resourceClass = 'image-resource';
                            $resourceIcon = '🖼️';
                        } elseif (strpos($fileType, 'video') !== false) {
                            $resourceClass = 'video-resource';
                            $resourceIcon = '🎬';
                        } elseif (strpos($fileType, 'audio') !== false) {
                            $resourceClass = 'audio-resource';
                            $resourceIcon = '🎵';
                        }
                    ?>
                    <div class="resource-card <?php echo $resourceClass; ?>" data-category="template">
                        <div class="resource-icon">
                            <span><?php echo $resourceIcon; ?></span>
                        </div>
                        <div class="resource-content">
                            <h3 class="resource-title"><?php echo $resource['title']; ?></h3>
                            <p class="resource-description"><?php echo $resource['description']; ?></p>
                            <div class="resource-meta">
                                <?php if(!empty($resource['file_size'])): ?>
                                    <span class="resource-size"><?php echo formatFileSize($resource['file_size']); ?></span>
                                <?php endif; ?>
                                <span class="resource-downloads"><?php echo $resource['download_count']; ?> downloads</span>
                            </div>
                        </div>
                        <div class="resource-action">
                            <?php if($resource['requires_login'] && !isset($_SESSION['user_id'])): ?>
                                <a href="<?php echo $baseUrl; ?>/auth/login?redirect=blog/resources" class="resource-btn login-required">
                                    <i class="fas fa-lock"></i> Login to Download
                                </a>
                            <?php else: ?>
                                <a href="<?php echo $baseUrl; ?>/blog/download-resource/<?php echo $resource['id']; ?>" class="resource-btn">
                                    <i class="fas fa-download"></i> Download
                                </a>
                            <?php endif; ?>
                        </div>
                    </div>
                <?php endforeach; ?>
            </div>
        <?php endif; ?>
    </section>
    
    <section class="resources-cta">
        <div class="cta-content">
            <h2>Looking for something specific?</h2>
            <p>Can't find what you're looking for? Let me know what resources would help you.</p>
            <a href="<?php echo $baseUrl; ?>/contact" class="cta-button">Request a Resource</a>
        </div>
    </section>
</div>

<?php 
// Helper function to format file size
function formatFileSize($bytes) {
    if ($bytes >= 1073741824) {
        return number_format($bytes / 1073741824, 2) . ' GB';
    } elseif ($bytes >= 1048576) {
        return number_format($bytes / 1048576, 2) . ' MB';
    } elseif ($bytes >= 1024) {
        return number_format($bytes / 1024, 2) . ' KB';
    } else {
        return $bytes . ' bytes';
    }
}
?>

<?php require_once '../app/views/partials/footer.php'; ?>


================================================
FILE: portfolio-website/app/views/clients/freelance.php
================================================



================================================
FILE: portfolio-website/app/views/clients/index.php
================================================
<?php require_once '../app/views/partials/header.php'; ?>
<div class="container">
    <section class="clients-section">
        <h1>Trusted by Diverse Organizations</h1>
        
        <div class="current-role">
            <span class="role-tag">Current Role</span>
        </div>
        
        <div class="main-employment">
            <h2>ICT Trainer | Clubhouse Coordinator</h2>
            <p class="role-description">Designing curriculum frameworks, creating engaging content, and teaching cutting-edge technology skills.</p>
            <ul class="role-achievements">
                <li>Developed comprehensive training programs</li>
                <li>Mentored 100+ students in technology skills</li>
                <li>Implemented modern teaching methodologies</li>
            </ul>
        </div>
        
        <!-- Mobile-Friendly Expertise Section -->
        <div class="freelance-expertise">
            <h2 class="expertise-heading">Areas of Expertise</h2>
            
            <div class="expertise-container">
                <!-- First Row -->
                <div class="expertise-card mobile-friendly">
                    <div class="expertise-icon">
                        <div class="icon-circle">
                            <img src="<?php echo $baseUrl; ?>/images/clients/design-icon.svg" alt="Design Icon" onerror="this.src='<?php echo $baseUrl; ?>/images/digitaldesignIcon.jpeg'; this.style.width='100%'; this.style.height='100%'; this.style.borderRadius='50%';">
                        </div>
                    </div>
                    <div class="expertise-content">
                        <h3>Design</h3>
                        <p>Creating visually stunning experiences that communicate effectively and inspire action.</p>
                        <div class="expertise-details">
                            <div class="expertise-tag">UI/UX</div>
                            <div class="expertise-tag">Graphic Design</div>
                            <div class="expertise-tag">3D Design</div>
                        </div>
                    </div>
                </div>
                
                <!-- Second Row -->
                <div class="expertise-card mobile-friendly">
                    <div class="expertise-icon">
                        <div class="icon-circle">
                            <img src="<?php echo $baseUrl; ?>/images/clients/webdev-icon.svg" alt="Web Dev Icon" onerror="this.src='<?php echo $baseUrl; ?>/images/webDev.jpeg'; this.style.width='100%'; this.style.height='100%'; this.style.borderRadius='50%';">
                        </div>
                    </div>
                    <div class="expertise-content">
                        <h3>Web Development</h3>
                        <p>Building responsive, accessible, and performant websites that deliver exceptional user experiences.</p>
                        <div class="expertise-details">
                            <div class="expertise-tag">PHP</div>
                            <div class="expertise-tag">JavaScript</div>
                            <div class="expertise-tag">Responsive</div>
                        </div>
                    </div>
                </div>
                
                <!-- Third Row -->
                <div class="expertise-card mobile-friendly">
                    <div class="expertise-icon">
                        <div class="icon-circle">
                            <img src="<?php echo $baseUrl; ?>/images/clients/gamedev-icon.svg" alt="Game Dev Icon" onerror="this.src='<?php echo $baseUrl; ?>/images/gameDev.jpeg'; this.style.width='100%'; this.style.height='100%'; this.style.borderRadius='50%';">
                        </div>
                    </div>
                    <div class="expertise-content">
                        <h3>Game Development</h3>
                        <p>Crafting engaging gaming experiences that entertain, educate, and inspire players of all ages.</p>
                        <div class="expertise-details">
                            <div class="expertise-tag">Unity</div>
                            <div class="expertise-tag">C#</div>
                            <div class="expertise-tag">Game Design</div>
                        </div>
                    </div>
                </div>
                
                <!-- Fourth Row -->
                <div class="expertise-card mobile-friendly">
                    <div class="expertise-icon">
                        <div class="icon-circle">
                            <img src="<?php echo $baseUrl; ?>/images/clients/maker-icon.svg" alt="Maker Icon" onerror="this.src='<?php echo $baseUrl; ?>/images/maker.jpeg'; this.style.width='100%'; this.style.height='100%'; this.style.borderRadius='50%';">
                        </div>
                    </div>
                    <div class="expertise-content">
                        <h3>Maker</h3>
                        <p>Turning creative ideas into physical reality through hands-on fabrication, electronics, and innovation.</p>
                        <div class="expertise-details">
                            <div class="expertise-tag">Electronics</div>
                            <div class="expertise-tag">3D Printing</div>
                            <div class="expertise-tag">Prototyping</div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="expertise-cta">
                <a href="<?php echo $baseUrl; ?>/contact" class="cta-button">Work With Me</a>
            </div>
        </div>
    </section>
</div>
<?php require_once '../app/views/partials/footer.php'; ?>


================================================
FILE: portfolio-website/app/views/clients/main_employment.php
================================================



================================================
FILE: portfolio-website/app/views/contact/index.php
================================================
<?php require_once '../app/views/partials/header.php'; ?>
<div class="container">
    <section class="contact-section">
        <div class="contact-header">
            <h1 class="page-title">Get In Touch</h1>
            <p class="page-subtitle">Have a project in mind or just want to say hello? I'd love to hear from you. Let's start a conversation and explore how we can work together.</p>
        </div>
        
        <?php if (isset($_GET['success']) && $_GET['success'] == '1'): ?>
            <div class="success-message">
                <div class="message-icon">✓</div>
                <div class="message-content">
                    <h3>Message Sent Successfully!</h3>
                    <p>Thank you for reaching out. I'll get back to you as soon as possible.</p>
                </div>
            </div>
        <?php endif; ?>
        
        <div class="contact-content">
            <!-- Contact Form -->
            <div class="contact-form-container">
                <div class="form-header">
                    <h2>Send Me a Message</h2>
                    <p>Fill out the form below and I'll respond within 24 hours.</p>
                </div>
                
                <?php if (isset($errors) && !empty($errors)): ?>
                    <div class="error-messages">
                        <div class="error-icon">⚠</div>
                        <div class="error-content">
                            <h4>Please correct the following errors:</h4>
                            <ul>
                                <?php foreach ($errors as $error): ?>
                                    <li><?php echo htmlspecialchars($error); ?></li>
                                <?php endforeach; ?>
                            </ul>
                        </div>
                    </div>
                <?php endif; ?>
                
                <form id="contactForm" class="contact-form" action="<?php echo $baseUrl; ?>/contact/submit" method="POST">
                    <div class="form-group">
                        <label for="name" class="form-label">Name *</label>
                        <input 
                            type="text" 
                            id="name" 
                            name="name" 
                            class="form-input" 
                            value="<?php echo isset($formData['name']) ? htmlspecialchars($formData['name']) : ''; ?>"
                            required
                        >
                    </div>
                    
                    <div class="form-group">
                        <label for="email" class="form-label">Email *</label>
                        <input 
                            type="email" 
                            id="email" 
                            name="email" 
                            class="form-input" 
                            value="<?php echo isset($formData['email']) ? htmlspecialchars($formData['email']) : ''; ?>"
                            required
                        >
                    </div>
                    
                    <div class="form-group">
                        <label for="subject" class="form-label">Subject</label>
                        <input 
                            type="text" 
                            id="subject" 
                            name="subject" 
                            class="form-input" 
                            value="<?php echo isset($formData['subject']) ? htmlspecialchars($formData['subject']) : ''; ?>"
                        >
                    </div>
                    
                    <div class="form-group">
                        <label for="message" class="form-label">Message *</label>
                        <textarea 
                            id="message" 
                            name="message" 
                            class="form-textarea" 
                            rows="6" 
                            maxlength="1000"
                            required
                        ><?php echo isset($formData['message']) ? htmlspecialchars($formData['message']) : ''; ?></textarea>
                        <div class="character-count">
                            <span id="charCount">0</span>/1000 characters
                        </div>
                    </div>
                    
                    <button type="submit" class="submit-btn" id="submitBtn">
                        <span class="btn-text">Send Message</span>
                        <span class="btn-loading" style="display: none;">
                            <div class="loading-spinner"></div>
                            Sending...
                        </span>
                    </button>
                </form>
            </div>
            
            <!-- Contact Information -->
            <div class="contact-info">
                <div class="info-card">
                    <div class="info-icon">
                        <i class="fas fa-envelope"></i>
                    </div>
                    <div class="info-content">
                        <h3>Email Me</h3>
                        <p>For general inquiries and project discussions</p>
                        <a href="mailto:vuyani@example.com" class="info-link">vuyani@example.com</a>
                    </div>
                </div>
                
                <div class="info-card">
                    <div class="info-icon">
                        <i class="fas fa-phone"></i>
                    </div>
                    <div class="info-content">
                        <h3>Call Me</h3>
                        <p>Available for urgent matters and consultations</p>
                        <a href="tel:+27123456789" class="info-link">+27 12 345 6789</a>
                    </div>
                </div>
                
                <div class="info-card">
                    <div class="info-icon">
                        <i class="fas fa-map-marker-alt"></i>
                    </div>
                    <div class="info-content">
                        <h3>Location</h3>
                        <p>Based in Midrand, Gauteng</p>
                        <span class="info-text">South Africa</span>
                    </div>
                </div>
                
                <div class="info-card">
                    <div class="info-icon">
                        <i class="fas fa-clock"></i>
                    </div>
                    <div class="info-content">
                        <h3>Response Time</h3>
                        <p>Typically respond within</p>
                        <span class="info-text">24 hours</span>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Additional Contact Methods -->
        <div class="contact-alternatives">
            <h2 class="alternatives-title">Other Ways to Connect</h2>
            <div class="social-contact-links">
                <a href="#" class="social-contact-link whatsapp">
                    <div class="social-icon">
                        <img src="<?php echo $baseUrl; ?>/images/icons8-whatsapp-50.svg" alt="WhatsApp">
                    </div>
                    <div class="social-info">
                        <h4>WhatsApp</h4>
                        <p>Quick chat and media sharing</p>
                    </div>
                </a>
                
                <a href="#" class="social-contact-link linkedin">
                    <div class="social-icon">
                        <i class="fab fa-linkedin"></i>
                    </div>
                    <div class="social-info">
                        <h4>LinkedIn</h4>
                        <p>Professional networking</p>
                    </div>
                </a>
                
                <a href="#" class="social-contact-link instagram">
                    <div class="social-icon">
                        <img src="<?php echo $baseUrl; ?>/images/icons8-instagram-50.svg" alt="Instagram">
                    </div>
                    <div class="social-info">
                        <h4>Instagram</h4>
                        <p>Visual portfolio and updates</p>
                    </div>
                </a>
            </div>
        </div>
    </section>
</div>
<?php require_once '../app/views/partials/footer.php'; ?>


================================================
FILE: portfolio-website/app/views/home/index.php
================================================
<?php require_once '../app/views/partials/header.php'; ?>
<div class="container">

    <section class="hero">
      <div class="hero-image">
        <img src="<?php echo $baseUrl; ?>/images/headerImg.jpg" alt="Vuyani Magibisela at a science event wearing a white hat and shirt with a camera">
      </div>
      <div class="hero-content">
        <h1 class="hero-title">Empowering Technology & Creativity</h1>
        <p class="hero-subtitle">Vuyani Magibisela - ICT Trainer, Web/App Developer, Maker and 3D Artist</p>
        <a href="#" class="cta-button">Learn More</a>
      </div>
    </section>
    
    <section class="services">
      <div class="service-card">
        <div class="service-image">
          <img src="<?php echo $baseUrl; ?>/images/skillsImg01.png" alt="ICT Training">
        </div>
        <div class="service-content">
          <h3 class="service-title">ICT Training</h3>
          <p class="service-description">Empowering youth with tech education.</p>
        </div>
      </div>
      
      <div class="service-card">
        <div class="service-image">
          <img src="<?php echo $baseUrl; ?>/images/skillsImg02.jpeg" alt="Web/App Development">
        </div>
        <div class="service-content">
          <h3 class="service-title">Web/App Development</h3>
          <p class="service-description">Innovative solutions online</p>
        </div>
      </div>
      
      <div class="service-card">
        <div class="service-image">
          <img src="<?php echo $baseUrl; ?>/images/skillsImg03.jpeg" alt="3D Artistry">
        </div>
        <div class="service-content">
          <h3 class="service-title">3D Artistry</h3>
          <p class="service-description">Bringing ideas to life</p>
        </div>
      </div>
      
      <div class="service-card">
        <div class="service-image">
          <img src="<?php echo $baseUrl; ?>/images/skillsImg04.jpeg" alt="Maker">
        </div>
        <div class="service-content">
          <h3 class="service-title">Maker</h3>
          <p class="service-description">Product creation, experiments, explorations and repairs.</p>
        </div>
      </div>
    </section>
    
    <section class="about">
      <h2 class="section-title">About Me</h2>
      <p class="about-text">With a passion for technology and an eye for design, I've dedicated my career to helping others discover the power of digital innovation. Let's explore the possibilities together.</p>
    </section>

</div>
<?php require_once '../app/views/partials/footer.php'; ?>



================================================
FILE: portfolio-website/app/views/layouts/admin.php
================================================



================================================
FILE: portfolio-website/app/views/layouts/main.php
================================================
<?php require_once dirname(__DIR__, 2) . '/config/config.php'; ?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><?php echo ucfirst(isset($_GET['url']) ? explode('/', $_GET['url'])[0] : 'Home'); ?> | Vuyani Magibisela</title>
    <link rel="stylesheet" href="<?php echo $baseUrl; ?>/css/main.css">
    <!-- Add GSAP for animations -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/gsap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/ScrollTrigger.min.js"></script>
</head>
<body class="<?php echo isset($_COOKIE['theme']) && $_COOKIE['theme'] === 'dark' ? 'dark-mode' : ''; ?>">
    <?php require_once dirname(__DIR__) . '/partials/header.php'; ?>
    
    <?php 
    // Get the current URL path
    $url = $_GET['url'] ?? 'home/index';
    $urlParts = explode('/', $url);
    $currentPage = $urlParts[0];
    
    // Include the appropriate view based on the current page
    if ($currentPage === 'home' || $currentPage === '') {
        require_once dirname(__DIR__) . '/home/index.php';
    } else if ($currentPage === 'clients') {
        require_once dirname(__DIR__) . '/clients/index.php';
    } else if (file_exists(dirname(__DIR__) . "/{$currentPage}/index.php")) {
        require_once dirname(__DIR__) . "/{$currentPage}/index.php";
    } else {
        // Default to home if page doesn't exist
        require_once dirname(__DIR__) . '/home/index.php';
    }
    ?>
    
    <?php require_once dirname(__DIR__) . '/partials/footer.php'; ?>
    
    <!-- First load theme.js to set up theme functionality -->
    <script src="<?php echo $baseUrl; ?>/js/theme.js"></script>
    <!-- Then load app.js for page-specific animations -->
    <script src="<?php echo $baseUrl; ?>/js/app.js"></script>
</body>
</html>


================================================
FILE: portfolio-website/app/views/partials/footer.php
================================================
<?php 
// Make sure $baseUrl is available
if (!isset($baseUrl)) {
    require_once dirname(__DIR__, 2) . '/config/config.php';
}
?>
<div class="container">
    <section class="connect">
      <h2 class="section-title">Connect with me</h2>
      <p class="connect-intro">Interested in collaborating or learning from me? Reach out and let's start a conversation</p>
      
      <div class="social-links">
        <a href="#" class="social-link">
          <div class="social-icon"><img src="<?php echo $baseUrl; ?>/images/icons8-whatsapp-50.svg" alt="WhatsApp logo "></div>
          <div class="social-name">WhatsApp</div>
          <div class="social-description">Lets chat</div>
        </a>
        
        <a href="#" class="social-link">
          <div class="social-icon"><img src="<?php echo $baseUrl; ?>/images/icons8-tiktok-50.svg" alt="TikTok logo"></div>
          <div class="social-name">TikTok</div>
          <div class="social-description">Catch latest posts</div>
        </a>
        
        <a href="#" class="social-link">
          <div class="social-icon"><img src="<?php echo $baseUrl; ?>/images/icons8-instagram-50.svg" alt="Instagram Logo"></div>
          <div class="social-name">Instagram</div>
          <div class="social-description">Visual portfolio</div>
        </a>
        
        <a href="#" class="social-link">
          <div class="social-icon"><img src="<?php echo $baseUrl; ?>/images/icons8-email-50.png" alt="Email Logo"></div>
          <div class="social-name">Email</div>
          <div class="social-description">Direct contact</div>
        </a>
      </div>
    </section>
    
    <footer class="main-footer">
      <p class="copyright">© <?php echo date('Y'); ?> Vuyani Magibisela</p>
    </footer>
</div>
  <script src="<?php echo $baseUrl; ?>/js/theme.js"></script>
  <script src="<?php echo $baseUrl; ?>/js/mobile-nav.js"></script>

  <?php 
  // Load page-specific JavaScript files
  $url = $_GET['url'] ?? 'home/index';
  $urlParts = explode('/', $url);
  $currentPage = $urlParts[0];

  // Load blog.js script only if we're on a blog page
  if ($currentPage === 'blog') {
      echo '<script src="' . $baseUrl . '/js/blog.js"></script>';
  }
  
  // Load contact.js script only if we're on a contact page
  if ($currentPage === 'contact') {
      echo '<script src="' . $baseUrl . '/js/contact.js"></script>';
  }
  ?>

</body>
</html>


================================================
FILE: portfolio-website/app/views/partials/header.php
================================================
<?php 
require_once dirname(__DIR__, 2) . '/config/config.php'; 

// Function to check if current page matches the given path
function isActivePage($pageName) {
    // Get the current URL path
    $url = $_GET['url'] ?? 'home/index';
    $urlParts = explode('/', $url);
    $currentPage = $urlParts[0];
    
    // Return true if current page matches the given page name
    return ($currentPage === $pageName) ? true : false;
}
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><?php echo ucfirst(isset($_GET['url']) ? explode('/', $_GET['url'])[0] : 'Home'); ?> | Vuyani Magibisela</title>
    
    <!-- Favicon and App Icons -->
    <link rel="apple-touch-icon" sizes="180x180" href="<?php echo $baseUrl; ?>/images/favicon/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="<?php echo $baseUrl; ?>/images/favicon/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="<?php echo $baseUrl; ?>/images/favicon/favicon-16x16.png">
    <link rel="manifest" href="/site.webmanifest">
    
    <!-- External Stylesheets -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    
    <!-- Custom Stylesheets -->
    <link rel="stylesheet" href="<?php echo $baseUrl; ?>/css/main.css">
    <link rel="stylesheet" href="<?php echo $baseUrl; ?>/css/responsive.css">
    
    <!-- Analytics and Tracking Scripts -->
    <!-- Consent Manager for GDPR Compliance -->
    <script type="text/javascript" data-cmp-ab="1" src="https://cdn.consentmanager.net/delivery/autoblocking/6e62a22472408.js" data-cmp-host="b.delivery.consentmanager.net" data-cmp-cdn="cdn.consentmanager.net" data-cmp-codesrc="16"></script>
    
    <!-- Google Analytics (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-VNN90D4GDE"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'G-VNN90D4GDE');
    </script>
    
    <!-- Google AdSense -->
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-6423925713865339" crossorigin="anonymous"></script>
</head>
<body class="<?php echo isset($_COOKIE['theme']) && $_COOKIE['theme'] === 'dark' ? 'dark-mode' : ''; ?>">
<div class="container">
    <header>
        <div class="logo">Vuyani Magibisela</div>
        
        <!-- Mobile Burger Menu -->
        <div class="mobile-menu-toggle">
            <i class="fas fa-bars"></i>
        </div>
        
        <!-- Desktop Navigation -->
        <nav class="desktop-navigation">
            <a href="<?php echo $baseUrl; ?>/home" class="<?php echo isActivePage('home') ? 'active' : ''; ?>">Home</a>
            <a href="<?php echo $baseUrl; ?>/clients" class="<?php echo isActivePage('clients') ? 'active' : ''; ?>">Clients</a>
            <a href="<?php echo $baseUrl; ?>/projects" class="<?php echo isActivePage('projects') ? 'active' : ''; ?>">Projects</a>
            <a href="<?php echo $baseUrl; ?>/blog" class="<?php echo isActivePage('blog') ? 'active' : ''; ?>">Blog</a>
            <a href="<?php echo $baseUrl; ?>/contact" class="<?php echo isActivePage('contact') ? 'active' : ''; ?>">Contact</a>
            <a href="#" class="light-mode" id="theme-toggle"><?php echo isset($_COOKIE['theme']) && $_COOKIE['theme'] === 'dark' ? '🌙' : '🌞'; ?></a>
        </nav>
    </header>
</div>

<!-- Mobile Navigation Menu Overlay -->
<div class="mobile-nav-overlay">
    <div class="mobile-nav-container">
        <div class="mobile-nav-header">
            <span>Vuyani Magibisela</span>
            <div class="close-mobile-nav">
                <i class="fas fa-times"></i>
            </div>
        </div>
        
        <div class="theme-toggles">
            <a href="#" class="theme-toggle-btn dark-mode-btn">
                <i class="fas fa-moon"></i>
            </a>
            <a href="#" class="theme-toggle-btn light-mode-btn">
                <i class="fas fa-sun"></i>
            </a>
        </div>
        
        <nav class="mobile-navigation">
            <a href="<?php echo $baseUrl; ?>/home" class="<?php echo isActivePage('home') ? 'active' : ''; ?>">Home</a>
            <a href="<?php echo $baseUrl; ?>/clients" class="<?php echo isActivePage('clients') ? 'active' : ''; ?>">Clients</a>
            <a href="<?php echo $baseUrl; ?>/projects" class="<?php echo isActivePage('projects') ? 'active' : ''; ?>">Projects</a>
            <a href="<?php echo $baseUrl; ?>/blog" class="<?php echo isActivePage('blog') ? 'active' : ''; ?>">Blogs</a>
            <a href="<?php echo $baseUrl; ?>/contact" class="<?php echo isActivePage('contact') ? 'active' : ''; ?>">Contacts</a>
        </nav>
    </div>
</div>


================================================
FILE: portfolio-website/app/views/projects/app_dev.php
================================================



================================================
FILE: portfolio-website/app/views/projects/digital_design.php
================================================



================================================
FILE: portfolio-website/app/views/projects/game_dev.php
================================================



================================================
FILE: portfolio-website/app/views/projects/index.php
================================================
<?php require_once '../app/views/partials/header.php'; ?>
<div class="container">
    <section class="projects-section">
        <h1>My Projects</h1>
        <p class="projects-intro">Explore my work across various disciplines, from web development to 3D design and maker projects.</p>
        
        <!-- Project Filter System -->
        <div class="project-filters">
            <button class="filter-btn active" data-filter="all">All Projects</button>
            <button class="filter-btn" data-filter="web-dev">Web Dev</button>
            <button class="filter-btn" data-filter="app-dev">App Dev</button>
            <button class="filter-btn" data-filter="game-dev">Game Dev</button>
            <button class="filter-btn" data-filter="digital-design">Digital Design</button>
            <button class="filter-btn" data-filter="maker">Maker</button>
        </div>
        
        <!-- Projects Grid -->
        <div class="projects-grid">
            <!-- Web Development Projects -->
            <div class="project-card" data-category="web-dev">
                <div class="project-image">
                    <img src="<?php echo $baseUrl; ?>/images/projects/project1.jpg" alt="Portfolio Website" onerror="this.src='<?php echo $baseUrl; ?>/images/skillsImg02.jpeg'; this.style.width='100%'; this.style.height='100%'; this.style.objectFit='cover';">
                </div>
                <div class="project-content">
                    <h3>Portfolio Website</h3>
                    <p>A responsive portfolio website built with PHP, CSS, and JavaScript.</p>
                    <div class="project-tags">
                        <span class="project-tag">PHP</span>
                        <span class="project-tag">CSS</span>
                        <span class="project-tag">JavaScript</span>
                    </div>
                    <a href="<?php echo $baseUrl; ?>/projects/web-dev/1" class="project-link">View Project</a>
                </div>
            </div>
            
            <div class="project-card" data-category="web-dev">
                <div class="project-image">
                    <img src="<?php echo $baseUrl; ?>/images/projects/project2.jpg" alt="E-commerce Platform" onerror="this.src='<?php echo $baseUrl; ?>/images/skillsImg02.jpeg'; this.style.width='100%'; this.style.height='100%'; this.style.objectFit='cover';">
                </div>
                <div class="project-content">
                    <h3>E-commerce Platform</h3>
                    <p>A full-featured online store with product management and secure checkout.</p>
                    <div class="project-tags">
                        <span class="project-tag">PHP</span>
                        <span class="project-tag">MySQL</span>
                        <span class="project-tag">JavaScript</span>
                    </div>
                    <a href="<?php echo $baseUrl; ?>/projects/web-dev/2" class="project-link">View Project</a>
                </div>
            </div>
            
            <!-- App Development Projects -->
            <div class="project-card" data-category="app-dev">
                <div class="project-image">
                    <img src="<?php echo $baseUrl; ?>/images/projects/project3.jpg" alt="Health Tracker App" onerror="this.src='<?php echo $baseUrl; ?>/images/skillsImg01.png'; this.style.width='100%'; this.style.height='100%'; this.style.objectFit='cover';">
                </div>
                <div class="project-content">
                    <h3>Health Tracker App</h3>
                    <p>A mobile application for tracking fitness goals and nutrition intake.</p>
                    <div class="project-tags">
                        <span class="project-tag">React Native</span>
                        <span class="project-tag">Firebase</span>
                        <span class="project-tag">Redux</span>
                    </div>
                    <a href="<?php echo $baseUrl; ?>/projects/app-dev/1" class="project-link">View Project</a>
                </div>
            </div>
            
            <!-- Game Development Projects -->
            <div class="project-card" data-category="game-dev">
                <div class="project-image">
                    <img src="<?php echo $baseUrl; ?>/images/projects/project4.jpg" alt="Educational Puzzle Game" onerror="this.src='<?php echo $baseUrl; ?>/images/skillsImg01.png'; this.style.width='100%'; this.style.height='100%'; this.style.objectFit='cover';">
                </div>
                <div class="project-content">
                    <h3>Educational Puzzle Game</h3>
                    <p>A game that teaches coding concepts through interactive puzzles.</p>
                    <div class="project-tags">
                        <span class="project-tag">Unity</span>
                        <span class="project-tag">C#</span>
                        <span class="project-tag">Game Design</span>
                    </div>
                    <a href="<?php echo $baseUrl; ?>/projects/game-dev/1" class="project-link">View Project</a>
                </div>
            </div>
            
            <!-- Digital Design Projects -->
            <div class="project-card" data-category="digital-design">
                <div class="project-image">
                    <img src="<?php echo $baseUrl; ?>/images/projects/project5.jpg" alt="3D Character Design" onerror="this.src='<?php echo $baseUrl; ?>/images/skillsImg03.jpeg'; this.style.width='100%'; this.style.height='100%'; this.style.objectFit='cover';">
                </div>
                <div class="project-content">
                    <h3>3D Character Design</h3>
                    <p>Character modeling and animation for an animated short film.</p>
                    <div class="project-tags">
                        <span class="project-tag">Blender</span>
                        <span class="project-tag">Animation</span>
                        <span class="project-tag">Texturing</span>
                    </div>
                    <a href="<?php echo $baseUrl; ?>/projects/digital-design/1" class="project-link">View Project</a>
                </div>
            </div>
            
            <div class="project-card" data-category="digital-design">
                <div class="project-image">
                    <img src="<?php echo $baseUrl; ?>/images/projects/project6.jpg" alt="Brand Identity Design" onerror="this.src='<?php echo $baseUrl; ?>/images/skillsImg03.jpeg'; this.style.width='100%'; this.style.height='100%'; this.style.objectFit='cover';">
                </div>
                <div class="project-content">
                    <h3>Brand Identity Design</h3>
                    <p>Complete visual identity system for a tech startup including logo, colors, and marketing materials.</p>
                    <div class="project-tags">
                        <span class="project-tag">Illustrator</span>
                        <span class="project-tag">Photoshop</span>
                        <span class="project-tag">Branding</span>
                    </div>
                    <a href="<?php echo $baseUrl; ?>/projects/digital-design/2" class="project-link">View Project</a>
                </div>
            </div>
            
            <!-- Maker Projects -->
            <div class="project-card" data-category="maker">
                <div class="project-image">
                    <img src="<?php echo $baseUrl; ?>/images/projects/project7.jpg" alt="Smart Home System" onerror="this.src='<?php echo $baseUrl; ?>/images/skillsImg04.jpeg'; this.style.width='100%'; this.style.height='100%'; this.style.objectFit='cover';">
                </div>
                <div class="project-content">
                    <h3>Smart Home System</h3>
                    <p>DIY home automation system using Arduino and Raspberry Pi to control lighting and temperature.</p>
                    <div class="project-tags">
                        <span class="project-tag">Arduino</span>
                        <span class="project-tag">Raspberry Pi</span>
                        <span class="project-tag">IoT</span>
                    </div>
                    <a href="<?php echo $baseUrl; ?>/projects/maker/1" class="project-link">View Project</a>
                </div>
            </div>
            
            <div class="project-card" data-category="maker">
                <div class="project-image">
                    <img src="<?php echo $baseUrl; ?>/images/projects/project8.jpg" alt="3D Printed Drone" onerror="this.src='<?php echo $baseUrl; ?>/images/skillsImg04.jpeg'; this.style.width='100%'; this.style.height='100%'; this.style.objectFit='cover';">
                </div>
                <div class="project-content">
                    <h3>3D Printed Drone</h3>
                    <p>Custom-designed and 3D printed quadcopter drone with camera mount.</p>
                    <div class="project-tags">
                        <span class="project-tag">3D Printing</span>
                        <span class="project-tag">Electronics</span>
                        <span class="project-tag">Design</span>
                    </div>
                    <a href="<?php echo $baseUrl; ?>/projects/maker/2" class="project-link">View Project</a>
                </div>
            </div>
        </div>
        
        <!-- No Results Message -->
        <div class="no-results" style="display: none;">
            <p>No projects found matching your filter criteria.</p>
            <button class="reset-filter-btn">Show All Projects</button>
        </div>
    </section>
</div>

<script src="<?php echo $baseUrl; ?>/js/projects.js"></script>

<?php require_once '../app/views/partials/footer.php'; ?>


================================================
FILE: portfolio-website/app/views/projects/maker_projects.php
================================================



================================================
FILE: portfolio-website/app/views/projects/project_detail.php
================================================
<?php require_once '../app/views/partials/header.php'; ?>
<div class="container">
    <section class="project-detail">
        <!-- Project Header -->
        <div class="project-header">
            <div class="project-breadcrumb">
                <a href="<?php echo $baseUrl; ?>/projects">Projects</a> / 
                <a href="<?php echo $baseUrl; ?>/projects/<?php echo $project['category']; ?>"><?php echo ucfirst($project['category']); ?></a> / 
                <span><?php echo $project['title']; ?></span>
            </div>
            <h1 class="project-title"><?php echo $project['title']; ?></h1>
            <div class="project-metadata">
                <div class="project-date">Completed: <?php echo $project['date']; ?></div>
                <div class="project-tags">
                    <?php foreach($project['tags'] as $tag): ?>
                        <span class="project-tag"><?php echo $tag; ?></span>
                    <?php endforeach; ?>
                </div>
            </div>
        </div>
        
        <!-- Project Gallery -->
        <div class="project-gallery">
            <div class="project-main-image">
                <img src="<?php echo $baseUrl; ?>/images/projects/<?php echo $project['main_image']; ?>" alt="<?php echo $project['title']; ?>">
            </div>
            
            <?php if (!empty($project['gallery'])): ?>
            <div class="project-thumbnails">
                <?php foreach($project['gallery'] as $image): ?>
                <div class="thumbnail" data-image="<?php echo $image; ?>">
                    <img src="<?php echo $baseUrl; ?>/images/projects/thumbnails/<?php echo $image; ?>" alt="Project image thumbnail">
                </div>
                <?php endforeach; ?>
            </div>
            <?php endif; ?>
        </div>
        
        <!-- Project Description -->
        <div class="project-description">
            <h2>Project Overview</h2>
            <div class="description-content">
                <?php echo $project['description']; ?>
            </div>
            
            <?php if (!empty($project['challenges'])): ?>
            <h2>Challenges & Solutions</h2>
            <div class="challenges-content">
                <?php echo $project['challenges']; ?>
            </div>
            <?php endif; ?>
            
            <?php if (!empty($project['technologies'])): ?>
            <h2>Technologies Used</h2>
            <div class="tech-list">
                <ul>
                    <?php foreach($project['technologies'] as $tech): ?>
                    <li><?php echo $tech; ?></li>
                    <?php endforeach; ?>
                </ul>
            </div>
            <?php endif; ?>
            
            <?php if (!empty($project['link'])): ?>
            <div class="project-links">
                <a href="<?php echo $project['link']; ?>" class="cta-button" target="_blank">View Live Project</a>
                
                <?php if (!empty($project['github'])): ?>
                <a href="<?php echo $project['github']; ?>" class="github-link" target="_blank">
                    <i class="fab fa-github"></i> View on GitHub
                </a>
                <?php endif; ?>
            </div>
            <?php endif; ?>
        </div>
        
        <!-- Next/Previous Projects -->
        <div class="project-navigation">
            <?php if (!empty($prevProject)): ?>
            <a href="<?php echo $baseUrl; ?>/projects/<?php echo $prevProject['category']; ?>/<?php echo $prevProject['id']; ?>" class="prev-project">
                <span class="nav-label">Previous Project</span>
                <span class="nav-title"><?php echo $prevProject['title']; ?></span>
            </a>
            <?php else: ?>
            <div class="prev-project empty"></div>
            <?php endif; ?>
            
            <?php if (!empty($nextProject)): ?>
            <a href="<?php echo $baseUrl; ?>/projects/<?php echo $nextProject['category']; ?>/<?php echo $nextProject['id']; ?>" class="next-project">
                <span class="nav-label">Next Project</span>
                <span class="nav-title"><?php echo $nextProject['title']; ?></span>
            </a>
            <?php else: ?>
            <div class="next-project empty"></div>
            <?php endif; ?>
        </div>
        
        <!-- Related Projects -->
        <?php if (!empty($relatedProjects)): ?>
        <div class="related-projects">
            <h2>Related Projects</h2>
            <div class="related-grid">
                <?php foreach($relatedProjects as $related): ?>
                <a href="<?php echo $baseUrl; ?>/projects/<?php echo $related['category']; ?>/<?php echo $related['id']; ?>" class="related-project">
                    <div class="related-image">
                        <img src="<?php echo $baseUrl; ?>/images/projects/thumbnails/<?php echo $related['thumbnail']; ?>" alt="<?php echo $related['title']; ?>">
                    </div>
                    <div class="related-title"><?php echo $related['title']; ?></div>
                </a>
                <?php endforeach; ?>
            </div>
        </div>
        <?php endif; ?>
    </section>
</div>
<?php require_once '../app/views/partials/footer.php'; ?>


================================================
FILE: portfolio-website/app/views/projects/web_dev.php
================================================



================================================
FILE: portfolio-website/public/index.php
================================================
<?php
// File: public/index.php

// Error reporting for debugging (remove in production)
error_reporting(E_ALL);
ini_set('display_errors', 1);

// Determine the correct path based on server structure
$basePath = dirname(__DIR__);

require_once $basePath . '/vendor/autoload.php';
require_once $basePath . '/app/core/App.php';
require_once $basePath . '/app/core/Router.php';
require_once $basePath . '/app/core/Database.php';
require_once $basePath . '/app/core/Helpers.php';

use App\core\Router;

// session_start();

$router = new Router();
$router->dispatch();


================================================
FILE: portfolio-website/public/test-db.php
================================================
<?php
// File: public/test-db.php
// Remove this file after testing!

error_reporting(E_ALL);
ini_set('display_errors', 1);

echo "<h2>Database Connection Test</h2>";

// Test 1: Check if config file exists
$configPath = dirname(__DIR__) . '/app/config/database.php';
echo "<h3>Test 1: Config File</h3>";
if (file_exists($configPath)) {
    echo "✅ Config file exists: " . $configPath . "<br>";
    $config = require $configPath;
    echo "Database: " . $config['dbname'] . "<br>";
    echo "Host: " . $config['host'] . "<br>";
    echo "User: " . $config['user'] . "<br>";
} else {
    echo "❌ Config file not found: " . $configPath . "<br>";
    exit;
}

// Test 2: Try direct PDO connection
echo "<h3>Test 2: Direct Connection</h3>";
try {
    $dsn = "mysql:host={$config['host']};dbname={$config['dbname']};charset=utf8mb4";
    $pdo = new PDO($dsn, $config['user'], $config['password']);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    
    echo "✅ Direct PDO connection successful<br>";
    
    // Test query
    $stmt = $pdo->query("SELECT 1 as test");
    $result = $stmt->fetch();
    echo "✅ Test query successful: " . $result->test . "<br>";
    
} catch (PDOException $e) {
    echo "❌ Direct connection failed: " . $e->getMessage() . "<br>";
}

// Test 3: Using your Database class
echo "<h3>Test 3: Using Database Class</h3>";
require_once dirname(__DIR__) . '/app/core/Database.php';

try {
    $db = App\core\Database::connect();
    if ($db) {
        echo "✅ Database class connection successful<br>";
    } else {
        echo "❌ Database class returned null<br>";
    }
} catch (Exception $e) {
    echo "❌ Database class failed: " . $e->getMessage() . "<br>";
}

echo "<hr>";
echo "<p><strong>Note:</strong> Delete this file after testing!</p>";
?>


================================================
FILE: portfolio-website/public/.htaccess
================================================
RewriteEngine On
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ index.php?url=$1 [QSA,L]

AddType text/css .css



================================================
FILE: portfolio-website/public/css/main.css
================================================
/* Reset and base styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Courier New', monospace;
}

/* Global link style */
a {
  text-decoration: none;
}

body {
  background-color: #f9f9f9;
  color: #333;
  overflow-x: hidden;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
}

/* Header styles */
header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 20px 0;
  margin-bottom: 20px;
}

.logo {
  font-size: 1.5rem;
  font-weight: bold;
}

/* Desktop Navigation styles */
.desktop-navigation {
  display: flex;
  gap: 20px;
}

.desktop-navigation a {
  color: #000000;
  font-weight: bold;
  padding: 5px 10px;
  transition: color 0.3s;
}

.desktop-navigation a:hover {
  color: #f5b642;
}

.desktop-navigation a.active {
  background-color: #f5b642;
  color: #fff;
  border-radius: 20px;
  padding: 5px 15px;
}

/* Hero section */
.hero {
  display: flex;
  align-items: center;
  gap: 40px;
  margin-bottom: 40px;
}

.hero-image {
  flex: 0 0 500px;
  border-radius: 10px;
  overflow: hidden;
  transition: transform 0.3s;
}

.hero-image:hover {
  transform: scale(1.02);
}

.hero-image img {
  width: 100%;
  height: auto;
  display: block;
}

.hero-content {
  flex: 1;
}

.hero-title {
  font-size: 2.5rem;
  font-weight: bold;
  margin-bottom: 15px;
  line-height: 1.2;
}

.hero-subtitle {
  font-size: 1rem;
  margin-bottom: 20px;
  color: #555;
}

.cta-button {
  display: inline-block;
  background-color: #f5b642;
  color: #fff;
  font-weight: bold;
  padding: 10px 30px;
  border-radius: 30px;
  text-decoration: none;
  transition: transform 0.3s, background-color 0.3s;
}

.cta-button:hover {
  transform: translateY(-3px);
  background-color: #e5a632;
}

/* Services section */
.services {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 20px;
  margin-bottom: 40px;
}

.service-card {
  border-radius: 10px;
  overflow: hidden;
  transition: transform 0.3s;
  cursor: pointer;
}

.service-card:hover {
  transform: translateY(-5px);
}

.service-image {
  width: 100%;
  height: 200px;
  overflow: hidden;
}

.service-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.5s;
}

.service-card:hover .service-image img {
  transform: scale(1.05);
}

.service-content {
  padding: 15px 10px;
}

.service-title {
  font-weight: bold;
  margin-bottom: 5px;
}

.service-description {
  font-size: 0.8rem;
  color: #666;
}

/* About section */
.about {
  margin-bottom: 40px;
}

.section-title {
  font-size: 1.5rem;
  font-weight: bold;
  margin-bottom: 15px;
}

.about-text {
  line-height: 1.6;
  margin-bottom: 20px;
}

/* Connect section */
.connect {
  margin-bottom: 40px;
}

.connect-intro {
  line-height: 1.6;
  margin-bottom: 20px;
}

.social-links {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 20px;
}

.social-link {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 15px;
  border: 1px solid #ddd;
  border-radius: 5px;
  text-decoration: none;
  color: #333;
  transition: transform 0.3s, box-shadow 0.3s;
}

.social-link:hover {
  transform: translateY(-3px);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
}

.social-icon {
  font-size: 24px;
  margin-bottom: 10px;
}

.social-name {
  font-weight: bold;
  margin-bottom: 5px;
}

.social-description {
  font-size: 0.8rem;
  color: #666;
  text-align: center;
}

/* Clients section */
.clients-section {
  padding: 40px 0;
  margin-bottom: 40px;
}

.clients-section h1 {
  font-size: 2rem;
  font-weight: bold;
  margin-bottom: 30px;
  text-align: center;
}

.current-role {
  display: flex;
  justify-content: center;
  margin-bottom: 20px;
}

.role-tag {
  background-color: #27ae60;
  color: white;
  padding: 10px 20px;
  border-radius: 5px;
  font-weight: bold;
  display: inline-block;
}

.main-employment {
  background-color: #f5ce42;
  border-radius: 10px;
  padding: 25px;
  margin-bottom: 30px;
  transition: transform 0.3s, box-shadow 0.3s;
}

.main-employment:hover {
  transform: translateY(-5px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
}

.main-employment h2 {
  font-size: 1.5rem;
  font-weight: bold;
  margin-bottom: 15px;
  text-align: center;
}

.role-description {
  margin-bottom: 15px;
  text-align: center;
}

.role-achievements {
  list-style-type: none;
  padding-left: 20px;
}

.role-achievements li {
  position: relative;
  padding-left: 15px;
  margin-bottom: 8px;
}

.role-achievements li:before {
  content: "•";
  position: absolute;
  left: 0;
  color: #333;
}

/* Improved Freelance Expertise Section Styles */
.freelance-expertise {
  margin-top: 50px;
}

.expertise-heading {
  font-size: 1.8rem;
  text-align: center;
  margin-bottom: 30px;
  position: relative;
}

.expertise-heading:after {
  content: "";
  position: absolute;
  bottom: -10px;
  left: 50%;
  transform: translateX(-50%);
  width: 60px;
  height: 3px;
  background-color: #f5b642;
}

/* .expertise-container {
  display: flex;
  flex-direction: column;
  gap: 25px;
  max-width: 1000px;
  margin: 0 auto;
} */

.expertise-container {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 25px;
  max-width: 1200px;
  margin: 0 auto;
}

.expertise-areas {
  /* display: flex; */
  /* gap: 25px;   */
  display: contents;
}

.expertise-card {
  width: 100%;
  display: grid;
  grid-template-columns: 80px 1fr; /* Icon area width | Content area */
  background-color: #3a3a3a;
  border-radius: 12px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
  overflow: hidden;
  transition: transform 0.3s, box-shadow 0.3s;
}

.expertise-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
}

.expertise-card:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 5px;
  height: 100%;
  background-color: #f5b642;
  opacity: 0;
  transition: opacity 0.3s;
}

.expertise-card:hover:before {
  opacity: 1;
}

.expertise-icon {
  height: 100%;
  position: relative;
  padding: 0;
  background: linear-gradient(135deg, rgba(0,0,0,0.3) 0%, rgba(0,0,0,0.1) 100%);
  overflow: hidden;
}

.icon-circle {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.15);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 2;
  padding: 0;
  border: 2px solid rgba(255, 255, 255, 0.3);
}

.icon-circle img {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  object-fit: cover;
}

.expertise-card:hover .icon-circle {
  background-color: #f5b642;
}

.expertise-content {
  padding: 25px 20px;
  background-color: #3a3a3a;
}

.expertise-content h3 {
  font-size: 1.3rem;
  margin-bottom: 10px;
  transition: color 0.3s;
  color: #f9f9f9;
}

.expertise-card:hover .expertise-content h3 {
  color: #f5b642;
}

.expertise-content p {
  font-size: 0.95rem;
  color: #ccc;
  margin-bottom: 15px;
  line-height: 1.5;
}

.expertise-details {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
}

.expertise-tag {
  background-color: #f5f5f5;
  color: #555;
  font-size: 0.8rem;
  padding: 5px 10px;
  border-radius: 20px;
  transition: background-color 0.3s, color 0.3s;
}

.expertise-card:hover .expertise-tag {
  background-color: rgba(245, 182, 66, 0.2);
  color: #f5b642;
}

.expertise-cta {
  margin-top: 30px;
  text-align: center;
}

/* Social Links - Desktop Layout */
.social-links {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 20px;
  margin-bottom: 20px;
}

.social-link {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 80px;
  border: 1px solid #ddd;
  border-radius: 5px;
  text-decoration: none;
  color: #333;
  transition: transform 0.3s, box-shadow 0.3s;
  background-color: #fff;
}

.social-link:hover {
  transform: translateY(-3px);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
}

.social-icon {
  font-size: 24px;
  margin-bottom: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.social-icon img {
  width: 50px;
  height: 50px;
  object-fit: contain;
}

.social-name {
  font-weight: bold;
  margin-bottom: 5px;
  text-align: center;
}

.social-description {
  font-size: 0.8rem;
  color: #666;
  text-align: center;
}

/* Dark mode styles for social links */
body.dark-mode .social-link {
  color: #f9f9f9;
  border-color: #555;
  background-color: #444;
}

body.dark-mode .social-description {
  color: #ccc;
}

/* Responsive adjustments for social links */
@media (max-width: 992px) {
  .social-links {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 576px) {
  .social-links {
    grid-template-columns: auto;
  }
  
  .social-link {
    flex-direction: column;
    text-align: left;
    justify-content: flex-start;
  }
  
  .social-icon {
    margin-right: 15px;
    margin-bottom: 0;
  }
  
  .social-icon img {
    width: 40px;
    height: 40px;
  }
  
  .social-info {
    flex: 1;
  }
  
  .social-name,
  .social-description {
    text-align: left;
  }
}

/* Dark mode styles */
body.dark-mode {
  background-color: #333;
  color: #f9f9f9;
}

body.dark-mode .desktop-navigation a:not(.active):not(.light-mode) {
  color: #f9f9f9;
}

body.dark-mode .service-description,
body.dark-mode .about-text,
body.dark-mode .connect-intro,
body.dark-mode .social-description,
body.dark-mode .role-description,
body.dark-mode .expertise-content p {
  color: #ccc;
}

body.dark-mode .social-link,
body.dark-mode .client-card {
  color: #f9f9f9;
  border-color: #555;
}

body.dark-mode .client-card {
  background-color: #444;
}

body.dark-mode .client-card h3 {
  border-bottom-color: #555;
}

body.dark-mode .main-employment {
  background-color: #e5b52d;
}

body.dark-mode .role-achievements li:before {
  color: #f9f9f9;
}

/* Dark mode styles for expertise section */
body.dark-mode .expertise-card {
  background-color: #3a3a3a;
}

body.dark-mode .icon-circle {
  background-color: #444;
}

body.dark-mode .expertise-content p {
  color: #ccc;
}

body.dark-mode .expertise-tag {
  background-color: #444;
  color: #ddd;
}

body.dark-mode .expertise-card:hover .expertise-tag {
  background-color: rgba(245, 182, 66, 0.3);
  color: #f5b642;
}

/* Light mode overrides */
body:not(.dark-mode) .expertise-card {
  background-color: #fff;
}

body:not(.dark-mode) .expertise-content {
  background-color: #fff;
}

body:not(.dark-mode) .expertise-content h3 {
  color: #333;
}

body:not(.dark-mode) .expertise-content p {
  color: #666;
}

body:not(.dark-mode) .expertise-tag {
  background-color: #f5f5f5;
  color: #555;
}

/* Mobile Navigation Styles */
.mobile-menu-toggle {
  display: none;
  font-size: 1.5rem;
  cursor: pointer;
  transition: color 0.3s;
}

.mobile-menu-toggle:hover {
  color: #f5b642;
}

.mobile-nav-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 1000;
  display: none;
  opacity: 0;
  transition: opacity 0.3s;
}

.mobile-nav-overlay.active {
  display: block;
  opacity: 1;
}

.mobile-nav-container {
  position: fixed;
  top: 0;
  right: -300px;
  width: 280px;
  height: 100%;
  background-color: #f9f9f9;
  box-shadow: -5px 0px 15px rgba(0, 0, 0, 0.1);
  transition: right 0.3s;
  overflow-y: auto;
  z-index: 1001;
  display: flex;
  flex-direction: column;
}

.mobile-nav-overlay.active .mobile-nav-container {
  right: 0;
}

.mobile-nav-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 15px;
  border-bottom: 1px solid #eee;
}

.mobile-nav-header span {
  font-weight: bold;
  font-size: 1.2rem;
}

.close-mobile-nav {
  font-size: 1.2rem;
  cursor: pointer;
  transition: color 0.3s;
}

.close-mobile-nav:hover {
  color: #f5b642;
}

.theme-toggles {
  display: flex;
  justify-content: center;
  padding: 15px;
  gap: 15px;
  border-bottom: 1px solid #eee;
}

.theme-toggle-btn {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background-color: #f1f1f1;
  color: #333;
  text-decoration: none;
  transition: background-color 0.3s, color 0.3s;
}

.theme-toggle-btn:hover,
.theme-toggle-btn.active {
  background-color: #f5b642;
  color: white;
}

.mobile-navigation {
  display: flex;
  flex-direction: column;
  padding: 15px;
}

.mobile-navigation a {
  text-decoration: none;
  color: #333;
  padding: 15px;
  margin-bottom: 10px;
  border-radius: 8px;
  background-color: #f1f1f1;
  font-weight: bold;
  transition: background-color 0.3s, color 0.3s;
  text-align: center;
}

.mobile-navigation a:hover,
.mobile-navigation a.active {
  background-color: #f5b642;
  color: white;
}

/* Dark mode styles for mobile navigation */
body.dark-mode .mobile-nav-container {
  background-color: #333;
  color: #f9f9f9;
}

body.dark-mode .mobile-nav-header {
  border-bottom-color: #444;
}

body.dark-mode .theme-toggles {
  border-bottom-color: #444;
}

body.dark-mode .theme-toggle-btn {
  background-color: #444;
  color: #f9f9f9;
}

body.dark-mode .mobile-navigation a {
  background-color: #444;
  color: #f9f9f9;
}

body.dark-mode .close-mobile-nav:hover,
body.dark-mode .mobile-menu-toggle:hover {
  color: #f5b642;
}

/* Enhanced Mobile-Friendly Expertise Cards */
.expertise-card.mobile-friendly {
  margin-bottom: 20px;
  width: 100%;
  transition: transform 0.3s, box-shadow 0.3s;
}

/* Footer styles */
.main-footer {
  text-align: center;
  padding: 20px 0;
  margin-top: 20px;
  border-top: 1px solid #eee;
}

.copyright {
  font-size: 0.9rem;
  color: #666;
}

/* Dark mode footer styles */
body.dark-mode .main-footer {
  border-top-color: #555;
}

body.dark-mode .copyright {
  color: #ccc;
}

/* Responsive styles */
@media (max-width: 992px) {
  .expertise-container {
    grid-template-columns: 1fr; /* Change to single column on tablet */
  }
  .services {
    grid-template-columns: repeat(2, 1fr);
  }
  .social-links {
    grid-template-columns: repeat(2, 1fr);
  }
  .expertise-areas {
    flex-direction: column;
  }
  
  .expertise-card {
    max-width: 100%;
  }
}

@media (max-width: 768px) {
  /* Hide desktop navigation and show mobile toggle */
  .desktop-navigation {
    display: none;
  }
  
  .mobile-menu-toggle {
    display: block;
  }
  
  .hero {
    flex-direction: column;
    text-align: center;
  }
  
  .hero-image {
    flex: 0 0 auto;
    max-width: 80rem;
  }
  
  .clients-section h1 {
    font-size: 1.8rem;
  }
  
  .main-employment h2 {
    font-size: 1.3rem;
  }
  
  .expertise-heading {
    font-size: 1.5rem;
  }

  
  /* Mobile-specific expertise cards */
  .expertise-container {
    grid-template-columns: 1fr; /* Change to single column on tablet */
    padding: 0 10px;
  }
  
  .expertise-card.mobile-friendly {
    display: flex;
    flex-direction: row;
    align-items: center;
    padding: 15px;
    border-radius: 10px;
    background-color: #f9f9f9;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .expertise-card {
    grid-template-columns: 60px 1fr; /* Smaller icon area on mobile */
    margin-bottom: 15px;
  }
  
  .expertise-content {
    padding: 15px;
  }
  
  .expertise-content h3 {
    font-size: 1.1rem;
    margin-bottom: 5px;
  }
  
  .expertise-content p {
    font-size: 0.85rem;
    margin-bottom: 10px;
  }
  
  .icon-circle {
    width: 40px;
    height: 40px;
  }
  
  body.dark-mode .expertise-card.mobile-friendly {
    background-color: #333;
  }
  
  .expertise-icon {
    padding: 0;
    margin-right: 15px;
  }
  
  .icon-circle {
    width: 50px;
    height: 50px;
  }
  
  .expertise-content {
    padding: 0;
  }
  
  .expertise-content h3 {
    font-size: 1.1rem;
    margin-bottom: 5px;
  }
  
  .expertise-content p {
    font-size: 0.85rem;
    margin-bottom: 10px;
  }
  
  .expertise-details {
    flex-wrap: wrap;
  }
  
  .expertise-tag {
    font-size: 0.7rem;
    padding: 3px 8px;
    margin-bottom: 3px;
  }
  
  /* Remove the vertical accent bar on mobile */
  .expertise-card.mobile-friendly:before {
    display: none;
  }
  
  /* Custom yellow background for header area */
  .clients-section h1,
  .current-role,
  .main-employment {
    background-color: #f5ce42;
    margin-left: -20px;
    margin-right: -20px;
    padding-left: 20px;
    padding-right: 20px;
  }
  
  .clients-section h1 {
    padding-top: 20px;
    margin-top: -20px;
    margin-bottom: 0;
    padding-bottom: 15px;
    color: #333;
  }
  
  .current-role {
    padding-bottom: 0;
    margin-bottom: 0;
  }
  
  .role-tag {
    background-color: #27ae60;
    margin-bottom: 15px;
  }
  
  .main-employment {
    border-radius: 0;
    box-shadow: none;
    padding-bottom: 30px;
    margin-bottom: 20px;
  }
  
  /* Dark mode adjustments */
  body.dark-mode .clients-section h1,
  body.dark-mode .current-role,
  body.dark-mode .main-employment {
    background-color: #444;
    color: #f9f9f9;
  }
  
  body.dark-mode .clients-section h1 {
    color: #f9f9f9;
  }
  
  body.dark-mode .expertise-heading {
    color: #f9f9f9;
  }
  
  /* Adjust the expertise heading */
  .expertise-heading {
    padding-top: 15px;
    margin-top: 0;
  }
  
  /* Specialty design for mobile menu */
  .mobile-navigation a {
    position: relative;
    overflow: hidden;
    background-color: #f1f1f1;
    border: none;
    transform: translateZ(0);
    transition: color 0.3s, background-color 0.3s;
  }
  
  .mobile-navigation a::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 5px;
    height: 100%;
    background-color: #f5b642;
    transform: translateX(-5px);
    transition: transform 0.3s;
  }
  
  .mobile-navigation a:hover::before,
  .mobile-navigation a.active::before {
    transform: translateX(0);
  }
  
  .mobile-navigation a.active {
    background-color: #f1f1f1;
    color: #333;
  }
  
  body.dark-mode .mobile-navigation a.active {
    background-color: #444;
    color: #f9f9f9;
  }
  
  body.dark-mode .mobile-navigation a::before {
    background-color: #f5b642;
  }
}

@media (max-width: 576px) {
  .services {
    grid-template-columns: 1fr;
  }
  
  .social-links {
    grid-template-columns: 1fr;
  }
  
  .navigation {
    gap: 10px;
  }
  
  .navigation a {
    font-size: 0.9rem;
    padding: 5px;
  }
  
  .main-employment {
    padding: 15px;
  }
  
  .expertise-card {
    grid-template-columns: 50px 1fr; /* Even smaller icon area on tiny screens */
  }
  
  .expertise-content {
    padding: 0 20px 25px 20px;
  }
  
  .expertise-details {
    justify-content: center;
  }
  
  .expertise-icon {
    padding-bottom: 15px;
  }
  
  .expertise-card:before {
    width: 100%;
    height: 5px;
  }
  
  /* Super small screens additional adjustments */
  .expertise-card.mobile-friendly {
    flex-direction: column;
    text-align: center;
    padding: 20px 15px;
  }
  
  .expertise-icon {
    margin-right: 0;
    margin-bottom: 15px;
  }
  
  .icon-circle {
    width: 35px;
    height: 35px;
  }
}

/* Projects Page Styles */
.projects-section {
  padding: 40px 0;
  margin-bottom: 40px;
}

.projects-section h1 {
  font-size: 2rem;
  font-weight: bold;
  margin-bottom: 15px;
  text-align: center;
}

.projects-intro {
  text-align: center;
  max-width: 800px;
  margin: 0 auto 30px;
  color: #666;
  line-height: 1.6;
}

/* Filter Buttons */
.project-filters {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: 10px;
  margin-bottom: 30px;
}

.filter-btn {
  background-color: #f1f1f1;
  border: none;
  padding: 8px 16px;
  border-radius: 30px;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.3s, color 0.3s, transform 0.3s;
}

.filter-btn:hover {
  background-color: #e5e5e5;
  transform: translateY(-2px);
}

.filter-btn.active {
  background-color: #f5b642;
  color: white;
}

/* Projects Grid */
.projects-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 25px;
  margin-bottom: 40px;
}

.project-card {
  background-color: white;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
  transition: transform 0.3s, box-shadow 0.3s;
  position: relative;
}

.project-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
}

.project-card:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 5px;
  height: 100%;
  background-color: #f5b642;
  opacity: 0;
  transition: opacity 0.3s;
}

.project-card:hover:before {
  opacity: 1;
}

.project-image {
  height: 200px;
  overflow: hidden;
}

.project-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.5s;
}

.project-card:hover .project-image img {
  transform: scale(1.05);
}

.project-content {
  padding: 20px;
}

.project-content h3 {
  font-weight: bold;
  margin-bottom: 10px;
  transition: color 0.3s;
}

.project-card:hover .project-content h3 {
  color: #f5b642;
}

.project-content p {
  font-size: 0.9rem;
  color: #666;
  margin-bottom: 15px;
  line-height: 1.5;
}

.project-tags {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  margin-bottom: 15px;
}

.project-tag {
  background-color: #f5f5f5;
  color: #555;
  font-size: 0.8rem;
  padding: 5px 10px;
  border-radius: 20px;
  transition: background-color 0.3s, color 0.3s;
}

.project-card:hover .project-tag {
  background-color: rgba(245, 182, 66, 0.2);
  color: #f5b642;
}

.project-link {
  display: inline-block;
  background-color: #f5b642;
  color: white;
  font-weight: bold;
  padding: 8px 16px;
  border-radius: 30px;
  text-decoration: none;
  transition: transform 0.3s, background-color 0.3s;
}

.project-link:hover {
  transform: translateY(-2px);
  background-color: #e5a632;
}

/* No Results Message */
.no-results {
  text-align: center;
  padding: 30px;
  background-color: #f9f9f9;
  border-radius: 10px;
  margin-top: 20px;
}

.reset-filter-btn {
  background-color: #f5b642;
  color: white;
  border: none;
  padding: 8px 16px;
  border-radius: 30px;
  font-weight: bold;
  cursor: pointer;
  margin-top: 15px;
  transition: background-color 0.3s;
}

.reset-filter-btn:hover {
  background-color: #e5a632;
}

/* Dark Mode Styles */
body.dark-mode .projects-intro {
  color: #ccc;
}

body.dark-mode .filter-btn {
  background-color: #444;
  color: #f9f9f9;
}

body.dark-mode .filter-btn:hover {
  background-color: #555;
}

body.dark-mode .filter-btn.active {
  background-color: #f5b642;
  color: white;
}

body.dark-mode .project-card {
  background-color: #3a3a3a;
}

body.dark-mode .project-content p {
  color: #ccc;
}

body.dark-mode .project-tag {
  background-color: #444;
  color: #ddd;
}

body.dark-mode .project-card:hover .project-tag {
  background-color: rgba(245, 182, 66, 0.3);
  color: #f5b642;
}

body.dark-mode .no-results {
  background-color: #3a3a3a;
  color: #f9f9f9;
}

/* Responsive Design for Projects Page */
@media (max-width: 992px) {
  .projects-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 768px) {
  .project-filters {
    flex-direction: row;
    overflow-x: auto;
    padding-bottom: 10px;
    justify-content: flex-start;
  }
  
  .filter-btn {
    flex-shrink: 0;
    font-size: 0.9rem;
  }
  
  .projects-grid {
    grid-template-columns: 1fr;
    gap: 20px;
  }
  
  .project-card {
    max-width: 100%;
  }
  
  .project-image {
    height: 180px;
  }
}

@media (max-width: 576px) {
  .projects-section h1 {
    font-size: 1.8rem;
  }
  
  .project-filters {
    margin-bottom: 20px;
  }
  
  .filter-btn {
    padding: 6px 12px;
    font-size: 0.8rem;
  }
  
  .project-content {
    padding: 15px;
  }
  
  .project-content h3 {
    font-size: 1.2rem;
  }
}

/* Project Detail Page Styles */
.project-detail {
  padding: 40px 0;
  margin-bottom: 40px;
}

/* Project Header */
.project-breadcrumb {
  margin-bottom: 15px;
  font-size: 0.9rem;
}

.project-breadcrumb a {
  color: #666;
  transition: color 0.3s;
}

.project-breadcrumb a:hover {
  color: #f5b642;
}

.project-breadcrumb span {
  color: #f5b642;
  font-weight: bold;
}

.project-title {
  font-size: 2.5rem;
  font-weight: bold;
  margin-bottom: 20px;
  line-height: 1.2;
}

.project-metadata {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 20px;
  margin-bottom: 30px;
}

.project-date {
  font-size: 0.9rem;
  color: #666;
}

/* Project Gallery */
.project-gallery {
  margin-bottom: 40px;
}

.project-main-image {
  width: 100%;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
  margin-bottom: 20px;
}

.project-main-image img {
  width: 100%;
  height: auto;
  display: block;
}

.project-thumbnails {
  display: flex;
  gap: 15px;
  overflow-x: auto;
  padding-bottom: 10px;
}

.thumbnail {
  width: 100px;
  height: 100px;
  border-radius: 8px;
  overflow: hidden;
  cursor: pointer;
  flex-shrink: 0;
  border: 3px solid transparent;
  transition: border-color 0.3s, transform 0.3s;
}

.thumbnail:hover {
  transform: scale(1.05);
}

.thumbnail.active {
  border-color: #f5b642;
}

.thumbnail img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* Project Description */
.project-description {
  margin-bottom: 40px;
}

.project-description h2 {
  font-size: 1.5rem;
  font-weight: bold;
  margin-bottom: 15px;
  position: relative;
  padding-bottom: 10px;
}

.project-description h2:after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 50px;
  height: 3px;
  background-color: #f5b642;
}

.description-content,
.challenges-content {
  margin-bottom: 30px;
  line-height: 1.8;
}

.description-content p,
.challenges-content p {
  margin-bottom: 15px;
}

.tech-list {
  margin-bottom: 30px;
}

.tech-list ul {
  list-style-type: none;
  padding-left: 0;
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
}

.tech-list li {
  background-color: #f5f5f5;
  padding: 8px 15px;
  border-radius: 20px;
  font-size: 0.9rem;
  font-weight: bold;
  transition: background-color 0.3s, transform 0.3s;
}

.tech-list li:hover {
  background-color: rgba(245, 182, 66, 0.2);
  transform: translateY(-2px);
}

.project-links {
  display: flex;
  gap: 20px;
  margin-top: 30px;
}

.github-link {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  background-color: #333;
  color: white;
  font-weight: bold;
  padding: 10px 20px;
  border-radius: 30px;
  text-decoration: none;
  transition: transform 0.3s, background-color 0.3s;
}

.github-link:hover {
  transform: translateY(-3px);
  background-color: #222;
}

/* Next/Previous Projects */
.project-navigation {
  display: flex;
  justify-content: space-between;
  margin-bottom: 50px;
  border-top: 1px solid #eee;
  border-bottom: 1px solid #eee;
  padding: 20px 0;
}

.prev-project,
.next-project {
  display: flex;
  flex-direction: column;
  max-width: 45%;
  text-decoration: none;
  transition: transform 0.3s;
}

.prev-project:hover,
.next-project:hover {
  transform: translateY(-3px);
}

.next-project {
  text-align: right;
}

.nav-label {
  font-size: 0.8rem;
  color: #666;
  margin-bottom: 5px;
}

.nav-title {
  font-weight: bold;
  color: #333;
  transition: color 0.3s;
}

.prev-project:hover .nav-title,
.next-project:hover .nav-title {
  color: #f5b642;
}

.empty {
  width: 45%;
}

/* Related Projects */
.related-projects {
  margin-bottom: 40px;
}

.related-projects h2 {
  font-size: 1.5rem;
  font-weight: bold;
  margin-bottom: 20px;
  text-align: center;
}

.related-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 20px;
}

.related-project {
  text-decoration: none;
  transition: transform 0.3s;
}

.related-project:hover {
  transform: translateY(-5px);
}

.related-image {
  border-radius: 8px;
  overflow: hidden;
  margin-bottom: 10px;
}

.related-image img {
  width: 100%;
  height: 150px;
  object-fit: cover;
  transition: transform 0.5s;
}

.related-project:hover .related-image img {
  transform: scale(1.05);
}

.related-title {
  font-weight: bold;
  color: #333;
  text-align: center;
  transition: color 0.3s;
}

.related-project:hover .related-title {
  color: #f5b642;
}

/* Blog Styles */

/* Blog Header */
.blog-header, .resources-header {
  text-align: center;
  margin-bottom: 40px;
  padding: 40px 0;
}

.page-title {
  font-size: 2.5rem;
  font-weight: bold;
  margin-bottom: 15px;
}

.page-subtitle {
  font-size: 1.1rem;
  color: #666;
  max-width: 700px;
  margin: 0 auto;
}

/* Featured Posts */
.featured-posts {
  margin-bottom: 40px;
}

.featured-posts-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  gap: 30px;
}

.featured-post-card {
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
  transition: transform 0.3s, box-shadow 0.3s;
  background-color: #fff;
}

.featured-post-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
}

.post-image {
  width: 100%;
  height: 200px;
  overflow: hidden;
  position: relative;
}

.post-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.5s;
}

.featured-post-card:hover .post-image img, 
.post-card:hover .post-image img {
  transform: scale(1.05);
}

.post-content {
  padding: 20px;
}

.post-category {
  display: inline-block;
  background-color: #f5b642;
  color: #fff;
  font-size: 0.8rem;
  padding: 5px 12px;
  border-radius: 20px;
  margin-bottom: 15px;
  position: absolute;
  top: 15px;
  left: 15px;
}

.post-title {
  font-size: 1.3rem;
  font-weight: bold;
  margin-bottom: 15px;
  line-height: 1.3;
}

.post-title a {
  color: #333;
  text-decoration: none;
  transition: color 0.3s;
}

.post-title a:hover {
  color: #f5b642;
}

.post-excerpt {
  font-size: 0.95rem;
  color: #666;
  margin-bottom: 15px;
  line-height: 1.5;
}

.post-meta {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 0.85rem;
  color: #888;
}

.read-more {
  color: #f5b642;
  font-weight: bold;
  text-decoration: none;
  transition: color 0.3s;
}

.read-more:hover {
  color: #e5a632;
}

/* Blog Content Layout */
.blog-content {
  display: grid;
  grid-template-columns: 2fr 1fr;
  gap: 40px;
  margin-bottom: 60px;
}

/* Posts Grid */
.posts-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
  gap: 30px;
}

.post-card {
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
  transition: transform 0.3s, box-shadow 0.3s;
  background-color: #fff;
  display: flex;
  flex-direction: column;
}

.post-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
}

.post-card .post-image {
  height: 180px;
}

.post-card .post-content {
  flex: 1;
  display: flex;
  flex-direction: column;
}

.post-card .post-excerpt {
  flex: 1;
}

/* Blog Sidebar */
.blog-sidebar {
  display: flex;
  flex-direction: column;
  gap: 30px;
}

.sidebar-widget {
  background-color: #fff;
  border-radius: 12px;
  padding: 25px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
}

.widget-title {
  font-size: 1.2rem;
  font-weight: bold;
  margin-bottom: 15px;
  padding-bottom: 10px;
  border-bottom: 2px solid #f5b642;
}

/* Categories Widget */
.category-list {
  list-style-type: none;
  padding: 0;
}

.category-list li {
  margin-bottom: 10px;
}

.category-list li a {
  display: block;
  color: #555;
  text-decoration: none;
  padding: 8px 10px;
  border-radius: 5px;
  transition: background-color 0.3s, color 0.3s;
}

.category-list li a:hover {
  background-color: rgba(245, 182, 66, 0.1);
  color: #f5b642;
}

/* Newsletter Widget */
.newsletter-form {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.newsletter-form input {
  padding: 12px 15px;
  border: 1px solid #ddd;
  border-radius: 5px;
  font-size: 0.9rem;
}

.subscribe-btn {
  background-color: #f5b642;
  color: #fff;
  border: none;
  padding: 12px 15px;
  border-radius: 5px;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.3s;
}

.subscribe-btn:hover {
  background-color: #e5a632;
}

/* Resources Widget */
.resource-links {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.resource-link {
  display: flex;
  align-items: center;
  gap: 10px;
  padding: 12px;
  background-color: #f9f9f9;
  border-radius: 8px;
  text-decoration: none;
  color: #333;
  transition: background-color 0.3s, transform 0.3s;
}

.resource-link:hover {
  background-color: rgba(245, 182, 66, 0.1);
  transform: translateX(5px);
}

.resource-icon {
  font-size: 1.5rem;
}

/* Single Article Page */
.blog-article {
  max-width: 800px;
  margin: 0 auto;
  background-color: #fff;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
  margin-bottom: 40px;
}

.article-header {
  padding: 30px 30px 0;
}

.article-category {
  display: inline-block;
  margin-bottom: 15px;
}

.article-category a {
  background-color: #f5b642;
  color: #fff;
  font-size: 0.8rem;
  padding: 5px 12px;
  border-radius: 20px;
  text-decoration: none;
}

.article-title {
  font-size: 2rem;
  font-weight: bold;
  margin-bottom: 15px;
  line-height: 1.3;
}

.article-meta {
  display: flex;
  flex-wrap: wrap;
  gap: 15px;
  font-size: 0.9rem;
  color: #777;
  margin-bottom: 25px;
}

.article-featured-image {
  margin: 0 -30px 30px;
}

.article-featured-image img {
  width: 100%;
  max-height: 500px;
  object-fit: cover;
}

.article-content {
  padding: 0 30px 30px;
  line-height: 1.7;
  font-size: 1.05rem;
  color: #444;
}

.article-content p {
  margin-bottom: 1.5rem;
}

.article-content h2 {
  font-size: 1.6rem;
  margin: 2rem 0 1rem;
}

.article-content h3 {
  font-size: 1.3rem;
  margin: 1.8rem 0 1rem;
}

.article-content ul, .article-content ol {
  margin-bottom: 1.5rem;
  padding-left: 1.5rem;
}

.article-content li {
  margin-bottom: 0.5rem;
}

.article-content a {
  color: #f5b642;
  text-decoration: underline;
}

.article-content a:hover {
  color: #e5a632;
}

.article-content blockquote {
  border-left: 4px solid #f5b642;
  padding-left: 1.5rem;
  font-style: italic;
  color: #666;
  margin: 1.5rem 0;
}

.article-content img {
  max-width: 100%;
  height: auto;
  margin: 1.5rem 0;
  border-radius: 8px;
}

.article-content code {
  background-color: #f1f1f1;
  padding: 0.2rem 0.4rem;
  border-radius: 3px;
  font-family: 'Courier New', monospace;
  font-size: 0.9rem;
}

.article-content pre {
  background-color: #f1f1f1;
  padding: 1rem;
  border-radius: 5px;
  overflow-x: auto;
  margin: 1.5rem 0;
}

.article-content pre code {
  background-color: transparent;
  padding: 0;
}

.article-tags {
  padding: 0 30px 20px;
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
}

.tag {
  background-color: #f1f1f1;
  color: #555;
  padding: 5px 12px;
  border-radius: 20px;
  font-size: 0.8rem;
  text-decoration: none;
  transition: background-color 0.3s, color 0.3s;
}

.tag:hover {
  background-color: #f5b642;
  color: #fff;
}

.article-share {
  padding: 20px 30px;
  border-top: 1px solid #eee;
  display: flex;
  align-items: center;
  gap: 15px;
}

.share-label {
  font-size: 0.9rem;
  color: #777;
}

.share-buttons {
  display: flex;
  gap: 10px;
}

.share-button {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 35px;
  height: 35px;
  border-radius: 50%;
  color: #fff;
  text-decoration: none;
  transition: transform 0.3s;
}

.share-button:hover {
  transform: translateY(-3px);
}

.twitter-share {
  background-color: #1DA1F2;
}

.facebook-share {
  background-color: #4267B2;
}

.linkedin-share {
  background-color: #0077B5;
}

.article-author-bio {
  padding: 30px;
  border-top: 1px solid #eee;
  display: flex;
  align-items: center;
  gap: 20px;
}

.author-avatar {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  overflow: hidden;
}

.author-avatar img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.author-info {
  flex: 1;
}

.author-name {
  font-size: 1.2rem;
  font-weight: bold;
  margin-bottom: 10px;
}

.author-description {
  font-size: 0.95rem;
  color: #666;
  margin-bottom: 15px;
  line-height: 1.5;
}

.author-social {
  display: flex;
  gap: 10px;
}

.social-link {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  background-color: #f1f1f1;
  color: #555;
  text-decoration: none;
  transition: background-color 0.3s, color 0.3s;
}

.social-link:hover {
  background-color: #f5b642;
  color: #fff;
}

/* Related Posts */
.related-posts {
  margin-bottom: 60px;
}

.related-posts-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 20px;
}

.related-post-card {
  border-radius: 10px;
  overflow: hidden;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);
  transition: transform 0.3s;
  background-color: #fff;
}

.related-post-card:hover {
  transform: translateY(-5px);
}

.related-post-card .post-image {
  height: 150px;
}

.related-post-card .post-content {
  padding: 15px;
}

.related-post-card .post-title {
  font-size: 1rem;
  margin-bottom: 10px;
}

/* Resources Page */
.resources-content {
  margin-bottom: 60px;
}

.resources-filter {
  display: flex;
  align-items: center;
  margin-bottom: 30px;
  gap: 15px;
}

.filter-title {
  font-size: 1rem;
  font-weight: bold;
  margin: 0;
}

.filter-buttons {
  display: flex;
  gap: 10px;
}

.filter-btn {
  background-color: #f1f1f1;
  border: none;
  padding: 8px 15px;
  border-radius: 20px;
  font-size: 0.9rem;
  cursor: pointer;
  transition: background-color 0.3s, color 0.3s;
}

.filter-btn:hover, .filter-btn.active {
  background-color: #f5b642;
  color: #fff;
}

.resources-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
  gap: 25px;
}

.resource-card {
  background-color: #fff;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
  display: flex;
  flex-direction: column;
  transition: transform 0.3s, box-shadow 0.3s;
  position: relative;
  padding: 25px;
}

.resource-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
}

.resource-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 5px;
  height: 100%;
  background-color: #f5b642;
  opacity: 0;
  transition: opacity 0.3s;
}

.resource-card:hover::before {
  opacity: 1;
}

.resource-icon {
  font-size: 2.5rem;
  margin-bottom: 15px;
  color: #f5b642;
}

.resource-title {
  font-size: 1.2rem;
  font-weight: bold;
  margin-bottom: 10px;
}

.resource-description {
  font-size: 0.95rem;
  color: #666;
  margin-bottom: 15px;
  line-height: 1.5;
  flex: 1;
}

.resource-meta {
  display: flex;
  gap: 15px;
  font-size: 0.85rem;
  color: #888;
  margin-bottom: 15px;
}

.resource-btn {
  display: inline-block;
  background-color: #f5b642;
  color: #fff;
  font-weight: bold;
  padding: 10px 20px;
  border-radius: 5px;
  text-decoration: none;
  transition: background-color 0.3s;
  text-align: center;
}

.resource-btn:hover {
  background-color: #e5a632;
}

.login-required {
  background-color: #f1f1f1;
  color: #555;
}

.login-required:hover {
  background-color: #ddd;
}

.resources-cta {
  background-color: #f5f5f5;
  border-radius: 12px;
  padding: 40px;
  text-align: center;
  margin-bottom: 60px;
}

.resources-cta h2 {
  font-size: 1.8rem;
  font-weight: bold;
  margin-bottom: 15px;
}

.resources-cta p {
  font-size: 1.1rem;
  color: #666;
  margin-bottom: 20px;
  max-width: 700px;
  margin-left: auto;
  margin-right: auto;
}

/* Contact Page Styles */
.contact-section {
  padding: 40px 0;
  margin-bottom: 40px;
}

.contact-header {
  text-align: center;
  margin-bottom: 50px;
}

.contact-header .page-title {
  font-size: 2.5rem;
  font-weight: bold;
  margin-bottom: 15px;
}

.contact-header .page-subtitle {
  font-size: 1.1rem;
  color: #666;
  max-width: 700px;
  margin: 0 auto;
  line-height: 1.6;
}

/* Success/Error Messages */
.success-message, .error-messages {
  display: flex;
  align-items: flex-start;
  gap: 15px;
  padding: 20px;
  border-radius: 8px;
  margin-bottom: 30px;
}

.success-message {
  background-color: rgba(39, 174, 96, 0.1);
  border: 1px solid #27ae60;
}

.error-messages {
  background-color: rgba(231, 76, 60, 0.1);
  border: 1px solid #e74c3c;
}

.message-icon, .error-icon {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  font-size: 1.2rem;
  flex-shrink: 0;
}

.message-icon {
  background-color: #27ae60;
  color: white;
}

.error-icon {
  background-color: #e74c3c;
  color: white;
}

.message-content h3, .error-content h4 {
  margin-bottom: 5px;
  font-size: 1.1rem;
}

.message-content p {
  color: #666;
  margin: 0;
}

.error-content ul {
  margin: 0;
  padding-left: 20px;
}

.error-content li {
  color: #e74c3c;
  margin-bottom: 5px;
}

/* Contact Content Layout */
.contact-content {
  display: grid;
  grid-template-columns: 2fr 1fr;
  gap: 50px;
  margin-bottom: 60px;
}

/* Contact Form */
.contact-form-container {
  background-color: #fff;
  border-radius: 12px;
  padding: 30px;
  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
}

.form-header {
  margin-bottom: 30px;
}

.form-header h2 {
  font-size: 1.5rem;
  font-weight: bold;
  margin-bottom: 10px;
}

.form-header p {
  color: #666;
  font-size: 0.95rem;
}

.contact-form {
  display: flex;
  flex-direction: column;
  gap: 20px;
}

.form-group {
  display: flex;
  flex-direction: column;
}

.form-label {
  font-weight: bold;
  margin-bottom: 8px;
  color: #333;
  font-size: 0.9rem;
}

.form-input, .form-textarea {
  padding: 12px 15px;
  border: 2px solid #ddd;
  border-radius: 8px;
  font-family: 'Courier New', monospace;
  font-size: 0.95rem;
  transition: border-color 0.3s, box-shadow 0.3s;
  background-color: #f9f9f9;
}

.form-input:focus, .form-textarea:focus {
  outline: none;
  border-color: #f5b642;
  box-shadow: 0 0 0 3px rgba(245, 182, 66, 0.1);
  background-color: #fff;
}

.form-textarea {
  resize: vertical;
  min-height: 120px;
}

.character-count {
  margin-top: 5px;
  font-size: 0.8rem;
  color: #888;
  text-align: right;
}

/* Submit Button */
.submit-btn {
  background-color: #f5b642;
  color: white;
  border: none;
  padding: 15px 30px;
  border-radius: 30px;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.3s, transform 0.3s;
  position: relative;
  overflow: hidden;
  font-size: 1rem;
  margin-top: 10px;
}

.submit-btn:hover {
  background-color: #e5a632;
  transform: translateY(-2px);
}

.submit-btn:disabled {
  background-color: #ccc;
  cursor: not-allowed;
  transform: none;
}

.btn-loading {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
}

.loading-spinner {
  width: 16px;
  height: 16px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top-color: white;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Contact Information */
.contact-info {
  display: flex;
  flex-direction: column;
  gap: 25px;
}

.info-card {
  display: flex;
  align-items: flex-start;
  gap: 15px;
  padding: 20px;
  background-color: #fff;
  border-radius: 10px;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);
  transition: transform 0.3s, box-shadow 0.3s;
}

.info-card:hover {
  transform: translateY(-3px);
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
}

.info-icon {
  width: 50px;
  height: 50px;
  background-color: rgba(245, 182, 66, 0.1);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #f5b642;
  font-size: 1.3rem;
  flex-shrink: 0;
}

.info-content h3 {
  font-size: 1.1rem;
  font-weight: bold;
  margin-bottom: 5px;
}

.info-content p {
  font-size: 0.9rem;
  color: #666;
  margin-bottom: 8px;
}

.info-link {
  color: #f5b642;
  text-decoration: none;
  font-weight: bold;
  transition: color 0.3s;
}

.info-link:hover {
  color: #e5a632;
}

.info-text {
  color: #333;
  font-weight: bold;
}

/* Contact Alternatives */
.contact-alternatives {
  margin-bottom: 40px;
}

.alternatives-title {
  font-size: 1.5rem;
  font-weight: bold;
  text-align: center;
  margin-bottom: 30px;
  position: relative;
}

.alternatives-title:after {
  content: "";
  position: absolute;
  bottom: -10px;
  left: 50%;
  transform: translateX(-50%);
  width: 60px;
  height: 3px;
  background-color: #f5b642;
}

.social-contact-links {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 25px;
}

.social-contact-link {
  display: flex;
  align-items: center;
  gap: 15px;
  padding: 20px;
  background-color: #fff;
  border-radius: 10px;
  text-decoration: none;
  color: #333;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);
  transition: transform 0.3s, box-shadow 0.3s;
}

.social-contact-link:hover {
  transform: translateY(-3px);
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
}

.social-contact-link .social-icon {
  width: 50px;
  height: 50px;
  background-color: #f5f5f5;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.5rem;
  transition: background-color 0.3s;
}

.social-contact-link.whatsapp:hover .social-icon {
  background-color: rgba(37, 211, 102, 0.1);
  color: #25d366;
}

.social-contact-link.linkedin:hover .social-icon {
  background-color: rgba(0, 119, 181, 0.1);
  color: #0077b5;
}

.social-contact-link.instagram:hover .social-icon {
  background-color: rgba(225, 48, 108, 0.1);
  color: #e1306c;
}

.social-info h4 {
  font-size: 1rem;
  font-weight: bold;
  margin-bottom: 5px;
}

.social-info p {
  font-size: 0.85rem;
  color: #666;
  margin: 0;
}

/* Dark Mode Styles */
body.dark-mode .contact-header .page-subtitle {
  color: #ccc;
}

body.dark-mode .contact-form-container,
body.dark-mode .info-card,
body.dark-mode .social-contact-link {
  background-color: #3a3a3a;
  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);
}

body.dark-mode .form-header p,
body.dark-mode .info-content p,
body.dark-mode .social-info p {
  color: #ccc;
}

body.dark-mode .form-label,
body.dark-mode .info-content h3,
body.dark-mode .social-info h4,
body.dark-mode .info-text {
  color: #f9f9f9;
}

body.dark-mode .form-input,
body.dark-mode .form-textarea {
  background-color: #444;
  border-color: #555;
  color: #f9f9f9;
}

body.dark-mode .form-input:focus,
body.dark-mode .form-textarea:focus {
  background-color: #4a4a4a;
  border-color: #f5b642;
}

body.dark-mode .character-count {
  color: #aaa;
}

body.dark-mode .social-contact-link {
  color: #f9f9f9;
}

body.dark-mode .social-contact-link .social-icon {
  background-color: #444;
  color: #f9f9f9;
}

body.dark-mode .success-message {
  background-color: rgba(39, 174, 96, 0.2);
}

body.dark-mode .error-messages {
  background-color: rgba(231, 76, 60, 0.2);
}

/* Responsive Design */
@media (max-width: 992px) {
  .contact-content {
    grid-template-columns: 1fr;
    gap: 40px;
  }
  
  .social-contact-links {
    grid-template-columns: 1fr;
  }
}

@media (max-width: 768px) {
  .contact-header .page-title {
    font-size: 2rem;
  }
  
  .contact-form-container {
    padding: 25px 20px;
  }
  
  .contact-content {
    gap: 30px;
  }
  
  .success-message, .error-messages {
    flex-direction: column;
    text-align: center;
  }
  
  .info-card,
  .social-contact-link {
    flex-direction: column;
    text-align: center;
    padding: 20px 15px;
  }
  
  .info-icon,
  .social-contact-link .social-icon {
    margin-bottom: 10px;
  }
}

@media (max-width: 576px) {
  .contact-section {
    padding: 30px 0;
  }
  
  .contact-header .page-title {
    font-size: 1.8rem;
  }
  
  .contact-header .page-subtitle {
    font-size: 1rem;
  }
  
  .contact-form-container {
    padding: 20px 15px;
  }
  
  .form-input, .form-textarea {
    padding: 10px 12px;
  }
  
  .submit-btn {
    padding: 12px 25px;
    font-size: 0.9rem;
  }
}

/* No posts/resources message */
.no-posts-message, .no-resources-message {
  text-align: center;
  padding: 40px 0;
  background-color: #f9f9f9;
  border-radius: 10px;
  margin-bottom: 30px;
}

/* Dark mode styles */
body.dark-mode .blog-header .page-subtitle,
body.dark-mode .resources-header .page-subtitle,
body.dark-mode .post-excerpt,
body.dark-mode .author-description,
body.dark-mode .resource-description {
  color: #ccc;
}

body.dark-mode .featured-post-card,
body.dark-mode .post-card,
body.dark-mode .sidebar-widget,
body.dark-mode .blog-article,
body.dark-mode .related-post-card,
body.dark-mode .resource-card {
  background-color: #3a3a3a;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

body.dark-mode .post-title a {
  color: #f9f9f9;
}

body.dark-mode .post-title a:hover {
  color: #f5b642;
}

body.dark-mode .article-content {
  color: #ccc;
}

body.dark-mode .article-share, 
body.dark-mode .article-author-bio {
  border-top-color: #555;
}

body.dark-mode .tag,
body.dark-mode .filter-btn,
body.dark-mode .social-link,
body.dark-mode .newsletter-form input {
  background-color: #444;
  color: #ddd;
  border-color: #555;
}

body.dark-mode .tag:hover,
body.dark-mode .filter-btn:hover,
body.dark-mode .filter-btn.active,
body.dark-mode .social-link:hover {
  background-color: #f5b642;
  color: #fff;
}

body.dark-mode .category-list li a:hover {
  background-color: rgba(245, 182, 66, 0.2);
}

body.dark-mode .resource-link {
  background-color: #444;
  color: #f9f9f9;
}

body.dark-mode .resource-link:hover {
  background-color: rgba(245, 182, 66, 0.2);
}

body.dark-mode .login-required {
  background-color: #444;
  color: #ddd;
}

body.dark-mode .login-required:hover {
  background-color: #555;
}

body.dark-mode .widget-title {
  border-bottom-color: #f5b642;
}

body.dark-mode .resources-cta {
  background-color: #3a3a3a;
}

body.dark-mode .resources-cta p {
  color: #ccc;
}

body.dark-mode .no-posts-message,
body.dark-mode .no-resources-message {
  background-color: #3a3a3a;
  color: #f9f9f9;
}

/* Responsive styles for Blog */
@media (max-width: 992px) {
  .blog-content {
    grid-template-columns: 1fr;
  }
  
  .related-posts-grid {
    grid-template-columns: repeat(2, 1fr);
  }
  
  .article-title {
    font-size: 1.8rem;
  }
}

@media (max-width: 768px) {
  .featured-posts-grid,
  .posts-grid,
  .resources-grid {
    grid-template-columns: 1fr;
  }
  
  .article-header, 
  .article-content, 
  .article-tags,
  .article-share,
  .article-author-bio {
    padding-left: 20px;
    padding-right: 20px;
  }
  
  .article-author-bio {
    flex-direction: column;
    text-align: center;
  }
  
  .author-social {
    justify-content: center;
  }
  
  .article-meta {
    flex-direction: column;
    gap: 5px;
    align-items: flex-start;
  }
  
  .article-title {
    font-size: 1.5rem;
  }
  
  .resources-filter {
    flex-direction: column;
    align-items: flex-start;
  }
  
  .resources-cta {
    padding: 30px 20px;
  }
  
  .resources-cta h2 {
    font-size: 1.5rem;
  }
  
  .resources-cta p {
    font-size: 1rem;
  }
}

@media (max-width: 576px) {
  .related-posts-grid {
    grid-template-columns: 1fr;
  }
  
  .filter-buttons {
    flex-wrap: wrap;
  }
  
  .page-title {
    font-size: 2rem;
  }
  
  .blog-header, .resources-header {
    padding: 30px 0;
  }
}

/* Dark Mode Styles */
body.dark-mode .project-breadcrumb a {
  color: #ccc;
}

body.dark-mode .project-date {
  color: #ccc;
}

body.dark-mode .project-description {
  color: #f9f9f9;
}

body.dark-mode .nav-label {
  color: #ccc;
}

body.dark-mode .nav-title {
  color: #f9f9f9;
}

body.dark-mode .tech-list li {
  background-color: #444;
  color: #f9f9f9;
}

body.dark-mode .tech-list li:hover {
  background-color: rgba(245, 182, 66, 0.3);
}

body.dark-mode .project-navigation {
  border-top-color: #444;
  border-bottom-color: #444;
}

body.dark-mode .related-title {
  color: #f9f9f9;
}

/* Responsive Design for Project Detail */
@media (max-width: 992px) {
  .related-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 768px) {
  .project-title {
    font-size: 2rem;
  }
  
  .project-links {
    flex-direction: column;
    gap: 15px;
  }
  
  .github-link, .cta-button {
    width: 100%;
    text-align: center;
    justify-content: center;
  }
  
  .related-grid {
    grid-template-columns: 1fr;
    gap: 15px;
  }
  
  .related-image img {
    height: 180px;
  }
}

@media (max-width: 576px) {
  .project-title {
    font-size: 1.8rem;
  }
  
  .project-metadata {
    flex-direction: column;
    align-items: flex-start;
    gap: 10px;
  }
  
  .thumbnail {
    width: 80px;
    height: 80px;
  }
  
  .project-navigation {
    flex-direction: column;
    gap: 20px;
  }
  
  .prev-project, .next-project, .empty {
    max-width: 100%;
    width: 100%;
  }
  
  .next-project {
    text-align: left;
  }
  
  .nav-label {
    font-size: 0.75rem;
  }
}


================================================
FILE: portfolio-website/public/css/responsive.css
================================================
/* Mobile Navigation Styles */
.mobile-menu-toggle {
    display: none;
    font-size: 1.5rem;
    cursor: pointer;
    transition: color 0.3s;
  }
  
  .mobile-menu-toggle:hover {
    color: #f5b642;
  }
  
  .mobile-nav-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1000;
    display: none;
    opacity: 0;
    transition: opacity 0.3s;
  }
  
  .mobile-nav-overlay.active {
    display: block;
    opacity: 1;
  }
  
  .mobile-nav-container {
    position: fixed;
    top: 0;
    right: -300px;
    width: 280px;
    height: 100%;
    background-color: #f9f9f9;
    box-shadow: -5px 0px 15px rgba(0, 0, 0, 0.1);
    transition: right 0.3s;
    overflow-y: auto;
    z-index: 1001;
    display: flex;
    flex-direction: column;
  }
  
  .mobile-nav-overlay.active .mobile-nav-container {
    right: 0;
  }
  
  .mobile-nav-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px;
    border-bottom: 1px solid #eee;
  }
  
  .mobile-nav-header span {
    font-weight: bold;
    font-size: 1.2rem;
  }
  
  .close-mobile-nav {
    font-size: 1.2rem;
    cursor: pointer;
    transition: color 0.3s;
  }
  
  .close-mobile-nav:hover {
    color: #f5b642;
  }
  
  .theme-toggles {
    display: flex;
    justify-content: center;
    padding: 15px;
    gap: 15px;
    border-bottom: 1px solid #eee;
  }
  
  .theme-toggle-btn {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: #f1f1f1;
    color: #333;
    text-decoration: none;
    transition: background-color 0.3s, color 0.3s;
  }
  
  .theme-toggle-btn:hover {
    background-color: #f5b642;
    color: white;
  }
  
  .mobile-navigation {
    display: flex;
    flex-direction: column;
    padding: 15px;
  }
  
  .mobile-navigation a {
    text-decoration: none;
    color: #333;
    padding: 15px;
    margin-bottom: 10px;
    border-radius: 8px;
    background-color: #f1f1f1;
    font-weight: bold;
    transition: background-color 0.3s, color 0.3s;
    text-align: center;
  }
  
  .mobile-navigation a:hover,
  .mobile-navigation a.active {
    background-color: #f5b642;
    color: white;
  }
  
  /* Dark mode styles for mobile navigation */
  body.dark-mode .mobile-nav-container {
    background-color: #333;
    color: #f9f9f9;
  }
  
  body.dark-mode .mobile-nav-header {
    border-bottom-color: #444;
  }
  
  body.dark-mode .theme-toggles {
    border-bottom-color: #444;
  }
  
  body.dark-mode .theme-toggle-btn {
    background-color: #444;
    color: #f9f9f9;
  }
  
  body.dark-mode .mobile-navigation a {
    background-color: #444;
    color: #f9f9f9;
  }
  
  body.dark-mode .close-mobile-nav:hover,
  body.dark-mode .mobile-menu-toggle:hover {
    color: #f5b642;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .desktop-navigation {
      display: none;
    }
    
    .mobile-menu-toggle {
      display: block;
    }
  }

  /* Enhanced Mobile-Friendly Expertise Cards */
.expertise-card.mobile-friendly {
  margin-bottom: 20px;
  width: 100%;
  transition: transform 0.3s, box-shadow 0.3s;
}

/* Mobile-specific styles */
@media (max-width: 768px) {
  .expertise-container {
    padding: 0 10px;
  }
  
  .expertise-card.mobile-friendly {
    display: flex;
    flex-direction: row;
    align-items: center;
    padding: 15px;
    border-radius: 10px;
    background-color: #f9f9f9;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }
  
  body.dark-mode .expertise-card.mobile-friendly {
    background-color: #333;
  }
  
  .expertise-icon {
    padding: 0;
    margin-right: 15px;
  }
  
  .icon-circle {
    width: 50px;
    height: 50px;
  }
  
  .expertise-content {
    padding: 0;
  }
  
  .expertise-content h3 {
    font-size: 1.1rem;
    margin-bottom: 5px;
  }
  
  .expertise-content p {
    font-size: 0.85rem;
    margin-bottom: 10px;
  }
  
  .expertise-details {
    flex-wrap: wrap;
  }
  
  .expertise-tag {
    font-size: 0.7rem;
    padding: 3px 8px;
    margin-bottom: 3px;
  }
  
  /* Remove the vertical accent bar on mobile */
  .expertise-card.mobile-friendly:before {
    display: none;
  }
  
  /* Custom yellow background for header area */
  .clients-section h1,
  .current-role,
  .main-employment {
    background-color: #f5ce42;
    margin-left: -20px;
    margin-right: -20px;
    padding-left: 20px;
    padding-right: 20px;
  }
  
  .clients-section h1 {
    padding-top: 20px;
    margin-top: -20px;
    margin-bottom: 0;
    padding-bottom: 15px;
    color: #333;
  }
  
  .current-role {
    padding-bottom: 0;
    margin-bottom: 0;
  }
  
  .role-tag {
    background-color: #27ae60;
    margin-bottom: 15px;
  }
  
  .main-employment {
    border-radius: 0;
    box-shadow: none;
    padding-bottom: 30px;
    margin-bottom: 20px;
  }
  
  /* Dark mode adjustments */
  body.dark-mode .clients-section h1,
  body.dark-mode .current-role,
  body.dark-mode .main-employment {
    background-color: #444;
    color: #f9f9f9;
  }
  
  body.dark-mode .clients-section h1 {
    color: #f9f9f9;
  }
  
  body.dark-mode .expertise-heading {
    color: #f9f9f9;
  }
  
  /* Adjust the expertise heading */
  .expertise-heading {
    padding-top: 15px;
    margin-top: 0;
  }
  
  /* Specialty design for mobile menu */
  .mobile-navigation a {
    position: relative;
    overflow: hidden;
    background-color: #f1f1f1;
    border: none;
    transform: translateZ(0);
    transition: color 0.3s, background-color 0.3s;
  }
  
  .mobile-navigation a::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 5px;
    height: 100%;
    background-color: #f5b642;
    transform: translateX(-5px);
    transition: transform 0.3s;
  }
  
  .mobile-navigation a:hover::before,
  .mobile-navigation a.active::before {
    transform: translateX(0);
  }
  
  .mobile-navigation a.active {
    background-color: #f1f1f1;
    color: #333;
  }
  
  body.dark-mode .mobile-navigation a.active {
    background-color: #444;
    color: #f9f9f9;
  }
  
  body.dark-mode .mobile-navigation a::before {
    background-color: #f5b642;
  }
}

/* Super small screens */
@media (max-width: 576px) {
  .expertise-card.mobile-friendly {
    flex-direction: column;
    text-align: center;
    padding: 20px 15px;
  }
  
  .expertise-icon {
    margin-right: 0;
    margin-bottom: 15px;
  }
  
  .expertise-details {
    justify-content: center;
  }
}

/* Enhanced Mobile-Friendly Expertise Cards */
.expertise-card.mobile-friendly {
  margin-bottom: 20px;
  width: 100%;
  transition: transform 0.3s, box-shadow 0.3s;
}

/* Mobile-specific styles */
@media (max-width: 768px) {
  .expertise-container {
    padding: 0 10px;
  }
  
  .expertise-card.mobile-friendly {
    display: flex;
    flex-direction: row;
    align-items: center;
    padding: 15px;
    border-radius: 10px;
    background-color: #f9f9f9;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }
  
  body.dark-mode .expertise-card.mobile-friendly {
    background-color: #333;
  }
  
  .expertise-icon {
    padding: 0;
    margin-right: 15px;
  }
  
  .icon-circle {
    width: 50px;
    height: 50px;
  }
  
  .expertise-content {
    padding: 0;
  }
  
  .expertise-content h3 {
    font-size: 1.1rem;
    margin-bottom: 5px;
  }
  
  .expertise-content p {
    font-size: 0.85rem;
    margin-bottom: 10px;
  }
  
  .expertise-details {
    flex-wrap: wrap;
  }
  
  .expertise-tag {
    font-size: 0.7rem;
    padding: 3px 8px;
    margin-bottom: 3px;
  }
  
  /* Remove the vertical accent bar on mobile */
  .expertise-card.mobile-friendly:before {
    display: none;
  }
  
  /* Custom yellow background for header area */
  .clients-section h1,
  .current-role,
  .main-employment {
    background-color: #f5ce42;
    margin-left: -20px;
    margin-right: -20px;
    padding-left: 20px;
    padding-right: 20px;
  }
  
  .clients-section h1 {
    padding-top: 20px;
    margin-top: -20px;
    margin-bottom: 0;
    padding-bottom: 15px;
    color: #333;
  }
  
  .current-role {
    padding-bottom: 0;
    margin-bottom: 0;
  }
  
  .role-tag {
    background-color: #27ae60;
    margin-bottom: 15px;
  }
  
  .main-employment {
    border-radius: 0;
    box-shadow: none;
    padding-bottom: 30px;
    margin-bottom: 20px;
  }
  
  /* Dark mode adjustments */
  body.dark-mode .clients-section h1,
  body.dark-mode .current-role,
  body.dark-mode .main-employment {
    background-color: #444;
    color: #f9f9f9;
  }
  
  body.dark-mode .clients-section h1 {
    color: #f9f9f9;
  }
  
  body.dark-mode .expertise-heading {
    color: #f9f9f9;
  }
  
  /* Adjust the expertise heading */
  .expertise-heading {
    padding-top: 15px;
    margin-top: 0;
  }
  
  /* Specialty design for mobile menu */
  .mobile-navigation a {
    position: relative;
    overflow: hidden;
    background-color: #f1f1f1;
    border: none;
    transform: translateZ(0);
    transition: color 0.3s, background-color 0.3s;
  }
  
  .mobile-navigation a::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 5px;
    height: 100%;
    background-color: #f5b642;
    transform: translateX(-5px);
    transition: transform 0.3s;
  }
  
  .mobile-navigation a:hover::before,
  .mobile-navigation a.active::before {
    transform: translateX(0);
  }
  
  .mobile-navigation a.active {
    background-color: #f1f1f1;
    color: #333;
  }
  
  body.dark-mode .mobile-navigation a.active {
    background-color: #444;
    color: #f9f9f9;
  }
  
  body.dark-mode .mobile-navigation a::before {
    background-color: #f5b642;
  }
}

/* Super small screens */
@media (max-width: 576px) {
  .expertise-card.mobile-friendly {
    flex-direction: column;
    text-align: center;
    padding: 20px 15px;
  }
  
  .expertise-icon {
    margin-right: 0;
    margin-bottom: 15px;
  }
  
  .expertise-details {
    justify-content: center;
  }
}

/* Enhanced Mobile-Friendly Expertise Cards */
.expertise-card.mobile-friendly {
    margin-bottom: 20px;
    width: 100%;
    transition: transform 0.3s, box-shadow 0.3s;
  }
  
  /* Mobile-specific styles */
  @media (max-width: 768px) {
    .expertise-container {
      padding: 0 10px;
    }
    
    .expertise-card.mobile-friendly {
      display: flex;
      flex-direction: row;
      align-items: center;
      padding: 15px;
      border-radius: 10px;
      background-color: #f9f9f9;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }
    
    body.dark-mode .expertise-card.mobile-friendly {
      background-color: #333;
    }
    
    .expertise-icon {
      padding: 0;
      margin-right: 15px;
    }
    
    .icon-circle {
      width: 50px;
      height: 50px;
    }
    
    .expertise-content {
      padding: 0;
    }
    
    .expertise-content h3 {
      font-size: 1.1rem;
      margin-bottom: 5px;
    }
    
    .expertise-content p {
      font-size: 0.85rem;
      margin-bottom: 10px;
    }
    
    .expertise-details {
      flex-wrap: wrap;
    }
    
    .expertise-tag {
      font-size: 0.7rem;
      padding: 3px 8px;
      margin-bottom: 3px;
    }
    
    /* Remove the vertical accent bar on mobile */
    .expertise-card.mobile-friendly:before {
      display: none;
    }
    
    /* Custom yellow background for header area */
    .clients-section h1,
    .current-role,
    .main-employment {
      background-color: #f5ce42;
      margin-left: -20px;
      margin-right: -20px;
      padding-left: 20px;
      padding-right: 20px;
    }
    
    .clients-section h1 {
      padding-top: 20px;
      margin-top: -20px;
      margin-bottom: 0;
      padding-bottom: 15px;
      color: #333;
    }
    
    .current-role {
      padding-bottom: 0;
      margin-bottom: 0;
    }
    
    .role-tag {
      background-color: #27ae60;
      margin-bottom: 15px;
    }
    
    .main-employment {
      border-radius: 0;
      box-shadow: none;
      padding-bottom: 30px;
      margin-bottom: 20px;
    }
    
    /* Dark mode adjustments */
    body.dark-mode .clients-section h1,
    body.dark-mode .current-role,
    body.dark-mode .main-employment {
      background-color: #444;
      color: #f9f9f9;
    }
    
    body.dark-mode .clients-section h1 {
      color: #f9f9f9;
    }
    
    body.dark-mode .expertise-heading {
      color: #f9f9f9;
    }
    
    /* Adjust the expertise heading */
    .expertise-heading {
      padding-top: 15px;
      margin-top: 0;
    }
    
    /* Specialty design for mobile menu */
    .mobile-navigation a {
      position: relative;
      overflow: hidden;
      background-color: #f1f1f1;
      border: none;
      transform: translateZ(0);
      transition: color 0.3s, background-color 0.3s;
    }
    
    .mobile-navigation a::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 5px;
      height: 100%;
      background-color: #f5b642;
      transform: translateX(-5px);
      transition: transform 0.3s;
    }
    
    .mobile-navigation a:hover::before,
    .mobile-navigation a.active::before {
      transform: translateX(0);
    }
    
    .mobile-navigation a.active {
      background-color: #f1f1f1;
      color: #333;
    }
    
    body.dark-mode .mobile-navigation a.active {
      background-color: #444;
      color: #f9f9f9;
    }
    
    body.dark-mode .mobile-navigation a::before {
      background-color: #f5b642;
    }
  }
  
  /* Super small screens */
  @media (max-width: 576px) {
    .expertise-card.mobile-friendly {
      flex-direction: column;
      text-align: center;
      padding: 20px 15px;
    }
    
    .expertise-icon {
      margin-right: 0;
      margin-bottom: 15px;
    }
    
    .expertise-details {
      justify-content: center;
    }
  }


================================================
FILE: portfolio-website/public/css/themes/dark.css
================================================



================================================
FILE: portfolio-website/public/css/themes/light.css
================================================



================================================
FILE: portfolio-website/public/images/favicon/about.txt
================================================
This favicon was generated using the following font:

- Font Title: Ojuju
- Font Author: undefined
- Font Source: https://fonts.gstatic.com/s/ojuju/v4/7r3bqXF7v9ApbrMih3jYQBVm9-n_rZ4552FRLYeruQ.ttf
- Font License: undefined)



================================================
FILE: portfolio-website/public/images/favicon/site.webmanifest
================================================
{"name":"","short_name":"","icons":[{"src":"/android-chrome-192x192.png","sizes":"192x192","type":"image/png"},{"src":"/android-chrome-512x512.png","sizes":"512x512","type":"image/png"}],"theme_color":"#ffffff","background_color":"#ffffff","display":"standalone"}


================================================
FILE: portfolio-website/public/js/app.js
================================================
document.addEventListener("DOMContentLoaded", () => {
  // Animation for the hero section
  gsap.from(".hero-content", {
    duration: 1,
    opacity: 0,
    y: 30,
    stagger: 0.2,
    ease: "power3.out"
  });
  
  gsap.from(".hero-image", {
    duration: 1,
    opacity: 0,
    x: -30,
    ease: "power3.out"
  });
  
  // Animation for the services section
  gsap.from(".service-card", {
    duration: 0.8,
    opacity: 0,
    y: 50,
    stagger: 0.15,
    ease: "power3.out",
    scrollTrigger: {
      trigger: ".services",
      start: "top 80%"
    }
  });
  
  // Note: Theme toggle functionality has been moved to theme.js
  
  // Interactive service cards
  const serviceCards = document.querySelectorAll('.service-card');
  
  serviceCards.forEach(card => {
    card.addEventListener('mouseenter', () => {
      gsap.to(card, {
        duration: 0.3,
        y: -5,
        boxShadow: "0 10px 20px rgba(0, 0, 0, 0.1)"
      });
    });
    
    card.addEventListener('mouseleave', () => {
      gsap.to(card, {
        duration: 0.3,
        y: 0,
        boxShadow: "none"
      });
    });
  });
  
  // Animation for expertise cards if they exist
  if (document.querySelector('.expertise-card')) {
    gsap.from(".expertise-card", {
      duration: 0.8,
      opacity: 0,
      y: 30,
      stagger: 0.15,
      ease: "power3.out",
      scrollTrigger: {
        trigger: ".freelance-expertise",
        start: "top 80%"
      }
    });
  }
});


================================================
FILE: portfolio-website/public/js/blog.js
================================================
document.addEventListener("DOMContentLoaded", () => {
    // Animation for blog elements
    gsap.from(".featured-post-card", {
      duration: 0.8,
      opacity: 0,
      y: 30,
      stagger: 0.15,
      ease: "power3.out",
      scrollTrigger: {
        trigger: ".featured-posts",
        start: "top 80%"
      }
    });
    
    gsap.from(".post-card", {
      duration: 0.8,
      opacity: 0,
      y: 30,
      stagger: 0.1,
      ease: "power3.out",
      scrollTrigger: {
        trigger: ".posts-grid",
        start: "top 80%"
      }
    });
    
    gsap.from(".sidebar-widget", {
      duration: 0.8,
      opacity: 0,
      x: 30,
      stagger: 0.15,
      ease: "power3.out",
      scrollTrigger: {
        trigger: ".blog-sidebar",
        start: "top 80%"
      }
    });
    
    // Handle newsletter form submission
    const newsletterForm = document.querySelector('.newsletter-form');
    if (newsletterForm) {
      newsletterForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const emailInput = newsletterForm.querySelector('input[type="email"]');
        const email = emailInput.value.trim();
        
        if (email) {
          // Show success message
          newsletterForm.innerHTML = '<p class="success-message">Thank you for subscribing!</p>';
          
          // In a real app, you would send this to the server via AJAX
          console.log('Newsletter subscription for:', email);
        }
      });
    }
    
    // Handle resource filtering
    const filterButtons = document.querySelectorAll('.filter-btn');
    const resourceCards = document.querySelectorAll('.resource-card');
    
    if (filterButtons.length > 0 && resourceCards.length > 0) {
      filterButtons.forEach(button => {
        button.addEventListener('click', () => {
          // Remove active class from all buttons
          filterButtons.forEach(btn => btn.classList.remove('active'));
          
          // Add active class to clicked button
          button.classList.add('active');
          
          // Get filter value
          const filterValue = button.getAttribute('data-filter');
          
          // Filter resources
          resourceCards.forEach(card => {
            if (filterValue === 'all' || card.getAttribute('data-category') === filterValue) {
              card.style.display = 'flex';
              gsap.to(card, { 
                opacity: 1, 
                y: 0, 
                duration: 0.4, 
                ease: "power2.out" 
              });
            } else {
              gsap.to(card, { 
                opacity: 0, 
                y: 20, 
                duration: 0.4, 
                ease: "power2.in",
                onComplete: () => {
                  card.style.display = 'none';
                }
              });
            }
          });
        });
      });
    }
    
    // Animate article content elements on article page
    const articleContent = document.querySelector('.article-content');
    if (articleContent) {
      gsap.from('.article-header', {
        duration: 0.8,
        opacity: 0,
        y: 20,
        ease: "power3.out"
      });
      
      gsap.from('.article-content > *', {
        duration: 0.5,
        opacity: 0,
        y: 20,
        stagger: 0.05,
        ease: "power3.out",
        delay: 0.3
      });
      
      gsap.from('.article-tags, .article-share, .article-author-bio', {
        duration: 0.6,
        opacity: 0,
        y: 20,
        stagger: 0.15,
        ease: "power3.out",
        scrollTrigger: {
          trigger: '.article-content',
          start: "bottom 80%"
        }
      });
      
      gsap.from('.related-post-card', {
        duration: 0.6,
        opacity: 0,
        y: 30,
        stagger: 0.1,
        ease: "power3.out",
        scrollTrigger: {
          trigger: '.related-posts',
          start: "top 80%"
        }
      });
    }
    
    // Add smooth scroll behavior for article links
    const articleLinks = document.querySelectorAll('.article-content a[href^="#"]');
    articleLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        
        const targetId = link.getAttribute('href');
        const targetElement = document.querySelector(targetId);
        
        if (targetElement) {
          window.scrollTo({
            top: targetElement.offsetTop - 100,
            behavior: 'smooth'
          });
        }
      });
    });
    
    // Adjust image lightbox effect
    const articleImages = document.querySelectorAll('.article-content img:not([class])');
    articleImages.forEach(img => {
      img.style.cursor = 'pointer';
      img.addEventListener('click', () => {
        // Create lightbox modal
        const lightbox = document.createElement('div');
        lightbox.className = 'lightbox-modal';
        
        // Create close button
        const closeBtn = document.createElement('button');
        closeBtn.className = 'lightbox-close';
        closeBtn.innerHTML = '&times;';
        
        // Create image container
        const imgContainer = document.createElement('div');
        imgContainer.className = 'lightbox-image-container';
        
        // Create image element
        const imgEl = document.createElement('img');
        imgEl.src = img.src;
        imgEl.alt = img.alt;
        
        // Append elements to lightbox
        imgContainer.appendChild(imgEl);
        lightbox.appendChild(closeBtn);
        lightbox.appendChild(imgContainer);
        
        // Append lightbox to body
        document.body.appendChild(lightbox);
        
        // Prevent body scrolling
        document.body.style.overflow = 'hidden';
        
        // Show lightbox with animation
        setTimeout(() => {
          lightbox.classList.add('active');
        }, 10);
        
        // Handle close button click
        closeBtn.addEventListener('click', closeLightbox);
        
        // Handle background click
        lightbox.addEventListener('click', (e) => {
          if (e.target === lightbox) {
            closeLightbox();
          }
        });
        
        // Handle escape key press
        document.addEventListener('keydown', (e) => {
          if (e.key === 'Escape') {
            closeLightbox();
          }
        });
        
        function closeLightbox() {
          lightbox.classList.remove('active');
          setTimeout(() => {
            document.body.removeChild(lightbox);
            document.body.style.overflow = '';
          }, 300);
        }
      });
    });
    
    // Add CSS for lightbox
    if (articleImages.length > 0) {
      const style = document.createElement('style');
      style.textContent = `
        .lightbox-modal {
          position: fixed;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background-color: rgba(0, 0, 0, 0.9);
          display: flex;
          align-items: center;
          justify-content: center;
          z-index: 1000;
          opacity: 0;
          transition: opacity 0.3s;
        }
        
        .lightbox-modal.active {
          opacity: 1;
        }
        
        .lightbox-image-container {
          max-width: 90%;
          max-height: 90%;
        }
        
        .lightbox-image-container img {
          max-width: 100%;
          max-height: 90vh;
          object-fit: contain;
        }
        
        .lightbox-close {
          position: absolute;
          top: 20px;
          right: 20px;
          background: none;
          border: none;
          color: white;
          font-size: 2rem;
          cursor: pointer;
        }
      `;
      document.head.appendChild(style);
    }
  });


================================================
FILE: portfolio-website/public/js/contact.js
================================================
document.addEventListener("DOMContentLoaded", () => {
    // Contact form elements
    const contactForm = document.getElementById('contactForm');
    const submitBtn = document.getElementById('submitBtn');
    const btnText = submitBtn.querySelector('.btn-text');
    const btnLoading = submitBtn.querySelector('.btn-loading');
    const messageTextarea = document.getElementById('message');
    const charCount = document.getElementById('charCount');
    
    // Character counter for message textarea
    if (messageTextarea && charCount) {
        // Update character count on page load
        updateCharacterCount();
        
        messageTextarea.addEventListener('input', updateCharacterCount);
        
        function updateCharacterCount() {
            const currentLength = messageTextarea.value.length;
            charCount.textContent = currentLength;
            
            // Change color if approaching limit
            if (currentLength > 900) {
                charCount.style.color = '#e74c3c';
            } else if (currentLength > 800) {
                charCount.style.color = '#f39c12';
            } else {
                charCount.style.color = '#888';
            }
        }
    }
    
    // Form submission handling
    if (contactForm) {
        contactForm.addEventListener('submit', handleFormSubmission);
        
        async function handleFormSubmission(e) {
            e.preventDefault();
            
            // Disable submit button and show loading state
            setLoadingState(true);
            
            // Get form data
            const formData = new FormData(contactForm);
            formData.append('ajax', '1'); // Flag for AJAX request
            
            try {
                const response = await fetch(contactForm.action, {
                    method: 'POST',
                    body: formData
                });
                
                const result = await response.json();
                
                if (result.success) {
                    showSuccessMessage(result.message);
                    contactForm.reset();
                    updateCharacterCount(); // Reset character count
                } else {
                    showErrorMessage(result.errors);
                }
            } catch (error) {
                console.error('Form submission error:', error);
                showErrorMessage(['An error occurred while sending your message. Please try again.']);
            } finally {
                setLoadingState(false);
            }
        }
        
        function setLoadingState(loading) {
            submitBtn.disabled = loading;
            
            if (loading) {
                btnText.style.display = 'none';
                btnLoading.style.display = 'flex';
            } else {
                btnText.style.display = 'inline';
                btnLoading.style.display = 'none';
            }
        }
        
        function showSuccessMessage(message) {
            // Remove any existing messages
            removeExistingMessages();
            
            const successDiv = document.createElement('div');
            successDiv.className = 'success-message';
            successDiv.innerHTML = `
                <div class="message-icon">✓</div>
                <div class="message-content">
                    <h3>Message Sent Successfully!</h3>
                    <p>${message}</p>
                </div>
            `;
            
            // Insert before the form container
            const formContainer = document.querySelector('.contact-form-container');
            formContainer.parentNode.insertBefore(successDiv, formContainer);
            
            // Scroll to message
            successDiv.scrollIntoView({ behavior: 'smooth', block: 'center' });
            
            // Animate in
            if (typeof gsap !== 'undefined') {
                gsap.from(successDiv, {
                    duration: 0.5,
                    opacity: 0,
                    y: -20,
                    ease: "power2.out"
                });
            }
        }
        
        function showErrorMessage(errors) {
            // Remove any existing messages
            removeExistingMessages();
            
            const errorDiv = document.createElement('div');
            errorDiv.className = 'error-messages';
            
            const errorList = errors.map(error => `<li>${error}</li>`).join('');
            
            errorDiv.innerHTML = `
                <div class="error-icon">⚠</div>
                <div class="error-content">
                    <h4>Please correct the following errors:</h4>
                    <ul>${errorList}</ul>
                </div>
            `;
            
            // Insert before the form container
            const formContainer = document.querySelector('.contact-form-container');
            formContainer.parentNode.insertBefore(errorDiv, formContainer);
            
            // Scroll to message
            errorDiv.scrollIntoView({ behavior: 'smooth', block: 'center' });
            
            // Animate in
            if (typeof gsap !== 'undefined') {
                gsap.from(errorDiv, {
                    duration: 0.5,
                    opacity: 0,
                    y: -20,
                    ease: "power2.out"
                });
            }
        }
        
        function removeExistingMessages() {
            const existingMessages = document.querySelectorAll('.success-message, .error-messages');
            existingMessages.forEach(msg => msg.remove());
        }
    }
    
    // Form validation enhancements
    const formInputs = document.querySelectorAll('.form-input, .form-textarea');
    
    formInputs.forEach(input => {
        // Real-time validation feedback
        input.addEventListener('blur', validateField);
        input.addEventListener('input', clearFieldError);
        
        function validateField() {
            const value = input.value.trim();
            let isValid = true;
            let errorMessage = '';
            
            // Remove existing error styling
            input.classList.remove('error');
            removeFieldError(input);
            
            // Validation logic
            switch (input.type) {
                case 'email':
                    if (value && !isValidEmail(value)) {
                        isValid = false;
                        errorMessage = 'Please enter a valid email address';
                    }
                    break;
                case 'text':
                    if (input.hasAttribute('required') && !value) {
                        isValid = false;
                        errorMessage = 'This field is required';
                    }
                    break;
                default:
                    if (input.hasAttribute('required') && !value) {
                        isValid = false;
                        errorMessage = 'This field is required';
                    }
                    break;
            }
            
            // Special validation for message length
            if (input.id === 'message' && value.length > 1000) {
                isValid = false;
                errorMessage = 'Message must be less than 1000 characters';
            }
            
            if (!isValid) {
                showFieldError(input, errorMessage);
            }
            
            return isValid;
        }
        
        function clearFieldError() {
            input.classList.remove('error');
            removeFieldError(input);
        }
        
        function showFieldError(field, message) {
            field.classList.add('error');
            
            // Create error element if it doesn't exist
            let errorEl = field.parentNode.querySelector('.field-error');
            if (!errorEl) {
                errorEl = document.createElement('div');
                errorEl.className = 'field-error';
                field.parentNode.appendChild(errorEl);
            }
            
            errorEl.textContent = message;
        }
        
        function removeFieldError(field) {
            const errorEl = field.parentNode.querySelector('.field-error');
            if (errorEl) {
                errorEl.remove();
            }
        }
        
        function isValidEmail(email) {
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return emailRegex.test(email);
        }
    });
    
    // Add error styling for form validation
    const style = document.createElement('style');
    style.textContent = `
        .form-input.error,
        .form-textarea.error {
            border-color: #e74c3c !important;
            box-shadow: 0 0 0 3px rgba(231, 76, 60, 0.1) !important;
        }
        
        .field-error {
            color: #e74c3c;
            font-size: 0.8rem;
            margin-top: 5px;
            animation: fadeIn 0.3s ease-out;
        }
        
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(-5px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    `;
    document.head.appendChild(style);
    
    // GSAP animations for page elements
    if (typeof gsap !== 'undefined') {
        // Animate contact header
        gsap.from(".contact-header", {
            duration: 1,
            opacity: 0,
            y: 30,
            ease: "power3.out"
        });
        
        // Animate contact content sections
        gsap.from(".contact-form-container", {
            duration: 0.8,
            opacity: 0,
            x: -30,
            ease: "power3.out",
            delay: 0.2
        });
        
        gsap.from(".info-card", {
            duration: 0.6,
            opacity: 0,
            y: 20,
            stagger: 0.1,
            ease: "power3.out",
            delay: 0.4
        });
        
        gsap.from(".social-contact-link", {
            duration: 0.6,
            opacity: 0,
            y: 20,
            stagger: 0.1,
            ease: "power3.out",
            delay: 0.6
        });
        
        // Add hover animations for info cards
        const infoCards = document.querySelectorAll('.info-card, .social-contact-link');
        infoCards.forEach(card => {
            card.addEventListener('mouseenter', () => {
                gsap.to(card.querySelector('.info-icon, .social-icon'), {
                    duration: 0.3,
                    scale: 1.1,
                    ease: "power2.out"
                });
            });
            
            card.addEventListener('mouseleave', () => {
                gsap.to(card.querySelector('.info-icon, .social-icon'), {
                    duration: 0.3,
                    scale: 1,
                    ease: "power2.out"
                });
            });
        });
    }
    
    // Auto-hide success/error messages after 5 seconds
    setTimeout(() => {
        const messages = document.querySelectorAll('.success-message, .error-messages');
        messages.forEach(msg => {
            if (typeof gsap !== 'undefined') {
                gsap.to(msg, {
                    duration: 0.5,
                    opacity: 0,
                    y: -20,
                    ease: "power2.in",
                    onComplete: () => msg.remove()
                });
            } else {
                msg.style.transition = 'opacity 0.5s ease-out';
                msg.style.opacity = '0';
                setTimeout(() => msg.remove(), 500);
            }
        });
    }, 5000);
});


================================================
FILE: portfolio-website/public/js/mobile-nav.js
================================================
document.addEventListener("DOMContentLoaded", () => {
    // Mobile navigation toggling
    const mobileMenuToggle = document.querySelector('.mobile-menu-toggle');
    const mobileNavOverlay = document.querySelector('.mobile-nav-overlay');
    const closeMobileNav = document.querySelector('.close-mobile-nav');
    const darkModeBtn = document.querySelector('.dark-mode-btn');
    const lightModeBtn = document.querySelector('.light-mode-btn');
    
    if (mobileMenuToggle && mobileNavOverlay && closeMobileNav) {
        // Open mobile nav
        mobileMenuToggle.addEventListener('click', () => {
            mobileNavOverlay.classList.add('active');
            document.body.style.overflow = 'hidden'; // Prevent scrolling
        });
        
        // Close mobile nav
        closeMobileNav.addEventListener('click', () => {
            mobileNavOverlay.classList.remove('active');
            document.body.style.overflow = ''; // Re-enable scrolling
        });
        
        // Close nav when clicking on overlay (outside the nav)
        mobileNavOverlay.addEventListener('click', (e) => {
            if (e.target === mobileNavOverlay) {
                mobileNavOverlay.classList.remove('active');
                document.body.style.overflow = '';
            }
        });
    }
    
    // Dark/Light mode toggles in mobile nav
    if (darkModeBtn && lightModeBtn) {
        const isDarkMode = document.body.classList.contains('dark-mode');
        
        // Set initial active state
        if (isDarkMode) {
            darkModeBtn.classList.add('active');
        } else {
            lightModeBtn.classList.add('active');
        }
        
        // Dark mode button
        darkModeBtn.addEventListener('click', (e) => {
            e.preventDefault();
            enableDarkMode();
            darkModeBtn.classList.add('active');
            lightModeBtn.classList.remove('active');
        });
        
        // Light mode button
        lightModeBtn.addEventListener('click', (e) => {
            e.preventDefault();
            enableLightMode();
            lightModeBtn.classList.add('active');
            darkModeBtn.classList.remove('active');
        });
        
        function enableDarkMode() {
            document.body.classList.add('dark-mode');
            // Update theme toggle in header
            const themeToggle = document.querySelector('#theme-toggle');
            if (themeToggle) {
                themeToggle.textContent = "🌙";
            }
            
            // Save preference
            setCookie('theme', 'dark', 365);
            
            // Update colors
            updateElementColors(true);
        }
        
        function enableLightMode() {
            document.body.classList.remove('dark-mode');
            // Update theme toggle in header
            const themeToggle = document.querySelector('#theme-toggle');
            if (themeToggle) {
                themeToggle.textContent = "🌞";
            }
            
            // Save preference
            setCookie('theme', 'light', 365);
            
            // Update colors
            updateElementColors(false);
        }
        
        function updateElementColors(isDark) {
            // Similar to the function in theme.js
            // Update navigation links
            const navLinks = document.querySelectorAll('.navigation a:not(.active):not(#theme-toggle)');
            navLinks.forEach(link => {
                link.style.color = isDark ? "#f9f9f9" : "#000000";
            });
            
            // Update other elements as needed
            const textElements = document.querySelectorAll('.service-description, .about-text, .connect-intro, .social-description, .role-description, .expertise-content p');
            textElements.forEach(el => {
                el.style.color = isDark ? "#ccc" : "#666";
            });
        }
        
        // Helper function to set a cookie
        function setCookie(name, value, days) {
            let expires = "";
            if (days) {
                const date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                expires = "; expires=" + date.toUTCString();
            }
            document.cookie = name + "=" + (value || "") + expires + "; path=/";
        }
    }
});


================================================
FILE: portfolio-website/public/js/project-detail.js
================================================
document.addEventListener("DOMContentLoaded", function() {
  console.log("Project Detail JS loaded successfully!");
  
  // First, check if GSAP is defined before trying to use it
  const isGsapLoaded = typeof gsap !== 'undefined';
  
  console.log("GSAP loaded:", isGsapLoaded);
  
  // Gallery functionality
  const mainImage = document.querySelector('.project-main-image img');
  const thumbnails = document.querySelectorAll('.thumbnail');
  const baseUrl = document.body.getAttribute('data-base-url') || '';
  
  // Apply CSS-based fallback animations
  function applyFallbackAnimations() {
    const elements = [
      { selector: '.project-title', delay: 0 },
      { selector: '.project-metadata', delay: 0.2 },
      { selector: '.project-main-image', delay: 0.4 }
    ];
    
    elements.forEach(item => {
      const elements = document.querySelectorAll(item.selector);
      elements.forEach(el => {
        el.style.opacity = "0";
        el.classList.add('fade-in-animation');
        el.style.animationDelay = `${item.delay}s`;
        setTimeout(() => {
          el.style.opacity = "1";
        }, 100);
      });
    });
    
    // Handle thumbnails separately for staggered effect
    document.querySelectorAll('.thumbnail').forEach((thumb, index) => {
      thumb.style.opacity = "0";
      thumb.classList.add('fade-in-animation');
      thumb.style.animationDelay = `${0.6 + (index * 0.1)}s`;
      setTimeout(() => {
        thumb.style.opacity = "1";
      }, 100);
    });
  }
  
  // Add click event to thumbnails
  if (thumbnails.length > 0 && mainImage) {
    thumbnails.forEach(thumbnail => {
      thumbnail.addEventListener('click', () => {
        // Remove active class from all thumbnails
        thumbnails.forEach(t => t.classList.remove('active'));
        
        // Add active class to clicked thumbnail
        thumbnail.classList.add('active');
        
        // Get the image filename from data attribute
        const imageFilename = thumbnail.getAttribute('data-image');
        
        // Check if GSAP is available
        if (isGsapLoaded) {
          try {
            // Animate the main image change
            gsap.to(mainImage, {
              duration: 0.3,
              opacity: 0,
              scale: 0.95,
              onComplete: () => {
                // Change the main image source
                mainImage.src = `${baseUrl}/images/projects/${imageFilename}`;
                
                // Animate the new image in
                gsap.to(mainImage, {
                  duration: 0.3,
                  opacity: 1,
                  scale: 1
                });
              }
            });
          } catch (error) {
            console.error("Error using GSAP:", error);
            // Fallback without GSAP
            mainImage.style.opacity = 0;
            setTimeout(() => {
              mainImage.src = `${baseUrl}/images/projects/${imageFilename}`;
              mainImage.style.opacity = 1;
            }, 300);
          }
        } else {
          // Fallback without GSAP
          mainImage.style.opacity = 0;
          setTimeout(() => {
            mainImage.src = `${baseUrl}/images/projects/${imageFilename}`;
            mainImage.style.opacity = 1;
          }, 300);
        }
      });
    });
  }
  
  // Handle animations
  if (isGsapLoaded) {
    try {
      // Initial animation for project detail page
      gsap.from(".project-title", {
        duration: 0.8,
        opacity: 0,
        y: 20,
        ease: "power3.out"
      });
      
      gsap.from(".project-metadata", {
        duration: 0.8,
        opacity: 0,
        y: 20,
        delay: 0.2,
        ease: "power3.out"
      });
      
      gsap.from(".project-main-image", {
        duration: 1,
        opacity: 0,
        y: 30,
        delay: 0.4,
        ease: "power3.out"
      });
      
      if (thumbnails.length > 0) {
        gsap.from(".thumbnail", {
          duration: 0.6,
          opacity: 0,
          y: 20,
          stagger: 0.1,
          delay: 0.6,
          ease: "power3.out"
        });
      }
      
      // Check if ScrollTrigger is available
      if (gsap.ScrollTrigger) {
        if (document.querySelector(".project-description h2")) {
          gsap.from(".project-description h2", {
            duration: 0.8,
            opacity: 0,
            x: -20,
            stagger: 0.2,
            scrollTrigger: {
              trigger: ".project-description",
              start: "top 80%"
            },
            ease: "power3.out"
          });
        }
        
        if (document.querySelector(".description-content, .challenges-content, .tech-list")) {
          gsap.from(".description-content, .challenges-content, .tech-list", {
            duration: 0.8,
            opacity: 0,
            y: 20,
            stagger: 0.2,
            scrollTrigger: {
              trigger: ".project-description",
              start: "top 70%"
            },
            ease: "power3.out"
          });
        }
        
        // Animate related projects on scroll
        if (document.querySelector(".related-project")) {
          gsap.from(".related-project", {
            duration: 0.8,
            opacity: 0,
            y: 30,
            stagger: 0.15,
            scrollTrigger: {
              trigger: ".related-projects",
              start: "top 80%"
            },
            ease: "power3.out"
          });
        }
      }
    } catch (error) {
      console.error("Error using GSAP animations:", error);
      // Apply CSS-based fallback animations
      applyFallbackAnimations();
    }
  } else {
    console.warn("GSAP not loaded. Using CSS animations instead.");
    // Apply CSS-based fallback animations
    applyFallbackAnimations();
  }
});


================================================
FILE: portfolio-website/public/js/projects.js
================================================
document.addEventListener("DOMContentLoaded", function() {
  console.log("Projects JS loaded successfully!");
  
  // Project filtering functionality
  const filterButtons = document.querySelectorAll('.filter-btn');
  const projectCards = document.querySelectorAll('.project-card');
  const noResults = document.querySelector('.no-results');
  const resetFilterBtn = document.querySelector('.reset-filter-btn');
  
  // First, check if GSAP is defined before trying to use it
  const isGsapLoaded = typeof gsap !== 'undefined';
  
  console.log("GSAP loaded:", isGsapLoaded);
  
  // If GSAP is available, use it for animations
  if (isGsapLoaded) {
    try {
      // Animation for project cards
      gsap.from(".project-card", {
        duration: 0.8,
        opacity: 0,
        y: 50,
        stagger: 0.1,
        ease: "power3.out"
      });
      
      // Check if ScrollTrigger is available
      if (gsap.ScrollTrigger) {
        gsap.from(".project-card", {
          scrollTrigger: {
            trigger: ".projects-grid",
            start: "top 80%"
          }
        });
      }
    } catch (error) {
      console.error("Error using GSAP:", error);
      // Apply CSS animations as fallback
      applyFallbackAnimations();
    }
  } else {
    console.warn("GSAP not loaded. Using CSS animations instead.");
    // Apply CSS animations as fallback
    applyFallbackAnimations();
  }
  
  // Apply CSS-based fallback animations
  function applyFallbackAnimations() {
    document.querySelectorAll('.project-card').forEach((card, index) => {
      card.style.opacity = "0";
      card.classList.add('fade-in-animation');
      card.style.animationDelay = `${index * 0.1}s`;
      setTimeout(() => {
        card.style.opacity = "1";
      }, 100);
    });
  }
  
  // Initialize the filter system
  function filterProjects(category) {
    let visibleCount = 0;
    
    projectCards.forEach(card => {
      const cardCategory = card.getAttribute('data-category');
      
      if (category === 'all' || cardCategory === category) {
        // Show the card
        if (isGsapLoaded) {
          try {
            gsap.to(card, {
              duration: 0.4,
              opacity: 1,
              scale: 1,
              display: 'block',
              ease: "power3.out"
            });
          } catch (error) {
            card.style.display = 'block';
            card.style.opacity = 1;
          }
        } else {
          card.style.display = 'block';
          card.style.opacity = 1;
        }
        visibleCount++;
      } else {
        // Hide the card
        if (isGsapLoaded) {
          try {
            gsap.to(card, {
              duration: 0.4,
              opacity: 0,
              scale: 0.95,
              display: 'none',
              ease: "power3.out"
            });
          } catch (error) {
            card.style.opacity = 0;
            setTimeout(() => {
              card.style.display = 'none';
            }, 400);
          }
        } else {
          card.style.opacity = 0;
          setTimeout(() => {
            card.style.display = 'none';
          }, 400);
        }
      }
    });
    
    // Toggle no results message
    if (visibleCount === 0 && noResults) {
      if (isGsapLoaded) {
        try {
          gsap.to(noResults, {
            duration: 0.4,
            display: 'block',
            opacity: 1,
            y: 0,
            ease: "power3.out"
          });
        } catch (error) {
          noResults.style.display = 'block';
          noResults.style.opacity = 1;
        }
      } else {
        noResults.style.display = 'block';
        noResults.style.opacity = 1;
      }
    } else if (noResults) {
      if (isGsapLoaded) {
        try {
          gsap.to(noResults, {
            duration: 0.4,
            opacity: 0,
            y: 20,
            onComplete: () => {
              noResults.style.display = 'none';
            },
            ease: "power3.out"
          });
        } catch (error) {
          noResults.style.opacity = 0;
          setTimeout(() => {
            noResults.style.display = 'none';
          }, 400);
        }
      } else {
        noResults.style.opacity = 0;
        setTimeout(() => {
          noResults.style.display = 'none';
        }, 400);
      }
    }
  }
  
  // Add click event to filter buttons
  if (filterButtons.length > 0) {
    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        // Remove active class from all buttons
        filterButtons.forEach(btn => btn.classList.remove('active'));
        
        // Add active class to clicked button
        button.classList.add('active');
        
        // Get the filter category
        const filterCategory = button.getAttribute('data-filter');
        
        // Filter the projects
        filterProjects(filterCategory);
      });
    });
  } else {
    console.warn("Filter buttons not found.");
  }
  
  // Reset filter functionality
  if (resetFilterBtn) {
    resetFilterBtn.addEventListener('click', () => {
      // Activate "All" button
      filterButtons.forEach(btn => {
        if (btn.getAttribute('data-filter') === 'all') {
          btn.classList.add('active');
        } else {
          btn.classList.remove('active');
        }
      });
      
      // Show all projects
      filterProjects('all');
    });
  }
  
  // Project card hover effects
  if (projectCards.length > 0) {
    projectCards.forEach(card => {
      const projectLink = card.querySelector('.project-link');
      if (projectLink) {
        card.addEventListener('mouseenter', () => {
          projectLink.style.transform = 'translateY(-3px)';
        });
        
        card.addEventListener('mouseleave', () => {
          projectLink.style.transform = 'translateY(0)';
        });
      }
    });
  }
});


================================================
FILE: portfolio-website/public/js/theme.js
================================================
document.addEventListener("DOMContentLoaded", () => {
    // Light/Dark mode toggle - select by class since that's what's in the header.php
    const themeToggle = document.querySelector('.light-mode');
    
    if (!themeToggle) {
        console.error("Theme toggle element not found");
        return;
    }
    
    // Check if dark mode is active by seeing if body has the dark-mode class
    let isDarkMode = document.body.classList.contains('dark-mode');
    
    themeToggle.addEventListener('click', (e) => {
        e.preventDefault();
        
        if (isDarkMode) {
            enableLightMode();
        } else {
            enableDarkMode();
        }
        
        isDarkMode = !isDarkMode;
        
        // Save theme preference in cookie
        setCookie('theme', isDarkMode ? 'dark' : 'light', 365);
    });
    
    function enableDarkMode() {
        // Add dark-mode class to body
        document.body.classList.add('dark-mode');
        
        // Update the toggle icon
        themeToggle.textContent = "🌙";
        
        // Update navigation links color
        updateElementColors();
    }
    
    function enableLightMode() {
        // Remove dark-mode class from body
        document.body.classList.remove('dark-mode');
        
        // Update the toggle icon
        themeToggle.textContent = "🌞";
        
        // Update navigation links color
        updateElementColors();
    }
    
    function updateElementColors() {
        // Update the colors of various elements based on theme
        const isDark = document.body.classList.contains('dark-mode');
        
        // Update desktop navigation links
        const desktopNavLinks = document.querySelectorAll('.desktop-navigation a:not(.active)');
        desktopNavLinks.forEach(link => {
            if (!link.classList.contains('light-mode')) {
                link.style.color = isDark ? "#f9f9f9" : "#000000";
            }
        });
        
        // Update text elements
        const textElements = document.querySelectorAll('.service-description, .about-text, .connect-intro, .social-description, .role-description, .expertise-content p');
        textElements.forEach(el => {
            el.style.color = isDark ? "#ccc" : "#666";
        });
        
        // Update card elements
        const cardElements = document.querySelectorAll('.social-link, .client-card, .expertise-card');
        cardElements.forEach(card => {
            if (isDark) {
                card.style.backgroundColor = card.classList.contains('expertise-card') ? "#3a3a3a" : "#444";
                card.style.borderColor = "#555";
                card.style.color = "#f9f9f9";
            } else {
                card.style.backgroundColor = card.classList.contains('expertise-card') ? "#fff" : "";
                card.style.borderColor = "#ddd";
                card.style.color = "#333";
            }
        });
        
        // Update tag elements
        const tagElements = document.querySelectorAll('.expertise-tag');
        tagElements.forEach(tag => {
            tag.style.backgroundColor = isDark ? "#444" : "#f5f5f5";
            tag.style.color = isDark ? "#ddd" : "#555";
        });
    }
    
    // Helper function to set a cookie
    function setCookie(name, value, days) {
        let expires = "";
        if (days) {
            const date = new Date();
            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
            expires = "; expires=" + date.toUTCString();
        }
        document.cookie = name + "=" + (value || "") + expires + "; path=/";
    }
    
    // Initialize element colors based on current theme
    if (isDarkMode) {
        updateElementColors();
    }
});


================================================
FILE: portfolio-website/public/js/components/animations.js
================================================



================================================
FILE: portfolio-website/public/js/components/navigation.js
================================================



================================================
FILE: portfolio-website/vendor/autoload.php
================================================
<?php

// autoload.php @generated by Composer

if (PHP_VERSION_ID < 50600) {
    if (!headers_sent()) {
        header('HTTP/1.1 500 Internal Server Error');
    }
    $err = 'Composer 2.3.0 dropped support for autoloading on PHP <5.6 and you are running '.PHP_VERSION.', please upgrade PHP or use Composer 2.2 LTS via "composer self-update --2.2". Aborting.'.PHP_EOL;
    if (!ini_get('display_errors')) {
        if (PHP_SAPI === 'cli' || PHP_SAPI === 'phpdbg') {
            fwrite(STDERR, $err);
        } elseif (!headers_sent()) {
            echo $err;
        }
    }
    trigger_error(
        $err,
        E_USER_ERROR
    );
}

require_once __DIR__ . '/composer/autoload_real.php';

return ComposerAutoloaderInit33b5bd27f951bb7f3f56a1ef87550492::getLoader();



================================================
FILE: portfolio-website/vendor/composer/autoload_classmap.php
================================================
<?php

// autoload_classmap.php @generated by Composer

$vendorDir = dirname(__DIR__);
$baseDir = dirname($vendorDir);

return array(
    'App\\controllers\\HomeController' => $baseDir . '/app/controllers/HomeController.php',
    'App\\core\\App' => $baseDir . '/app/core/App.php',
    'App\\core\\Database' => $baseDir . '/app/core/Database.php',
    'App\\core\\Router' => $baseDir . '/app/core/Router.php',
    'Composer\\InstalledVersions' => $vendorDir . '/composer/InstalledVersions.php',
);



================================================
FILE: portfolio-website/vendor/composer/autoload_namespaces.php
================================================
<?php

// autoload_namespaces.php @generated by Composer

$vendorDir = dirname(__DIR__);
$baseDir = dirname($vendorDir);

return array(
);



================================================
FILE: portfolio-website/vendor/composer/autoload_psr4.php
================================================
<?php

// autoload_psr4.php @generated by Composer

$vendorDir = dirname(__DIR__);
$baseDir = dirname($vendorDir);

return array(
    'App\\' => array($baseDir . '/app'),
);



================================================
FILE: portfolio-website/vendor/composer/autoload_real.php
================================================
<?php

// autoload_real.php @generated by Composer

class ComposerAutoloaderInit33b5bd27f951bb7f3f56a1ef87550492
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    /**
     * @return \Composer\Autoload\ClassLoader
     */
    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

        spl_autoload_register(array('ComposerAutoloaderInit33b5bd27f951bb7f3f56a1ef87550492', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader(\dirname(__DIR__));
        spl_autoload_unregister(array('ComposerAutoloaderInit33b5bd27f951bb7f3f56a1ef87550492', 'loadClassLoader'));

        require __DIR__ . '/autoload_static.php';
        call_user_func(\Composer\Autoload\ComposerStaticInit33b5bd27f951bb7f3f56a1ef87550492::getInitializer($loader));

        $loader->register(true);

        return $loader;
    }
}



================================================
FILE: portfolio-website/vendor/composer/autoload_static.php
================================================
<?php

// autoload_static.php @generated by Composer

namespace Composer\Autoload;

class ComposerStaticInit33b5bd27f951bb7f3f56a1ef87550492
{
    public static $prefixLengthsPsr4 = array (
        'A' => 
        array (
            'App\\' => 4,
        ),
    );

    public static $prefixDirsPsr4 = array (
        'App\\' => 
        array (
            0 => __DIR__ . '/../..' . '/app',
        ),
    );

    public static $classMap = array (
        'App\\controllers\\HomeController' => __DIR__ . '/../..' . '/app/controllers/HomeController.php',
        'App\\core\\App' => __DIR__ . '/../..' . '/app/core/App.php',
        'App\\core\\Database' => __DIR__ . '/../..' . '/app/core/Database.php',
        'App\\core\\Router' => __DIR__ . '/../..' . '/app/core/Router.php',
        'Composer\\InstalledVersions' => __DIR__ . '/..' . '/composer/InstalledVersions.php',
    );

    public static function getInitializer(ClassLoader $loader)
    {
        return \Closure::bind(function () use ($loader) {
            $loader->prefixLengthsPsr4 = ComposerStaticInit33b5bd27f951bb7f3f56a1ef87550492::$prefixLengthsPsr4;
            $loader->prefixDirsPsr4 = ComposerStaticInit33b5bd27f951bb7f3f56a1ef87550492::$prefixDirsPsr4;
            $loader->classMap = ComposerStaticInit33b5bd27f951bb7f3f56a1ef87550492::$classMap;

        }, null, ClassLoader::class);
    }
}



================================================
FILE: portfolio-website/vendor/composer/ClassLoader.php
================================================
<?php

/*
 * This file is part of Composer.
 *
 * (c) Nils Adermann <naderman@naderman.de>
 *     Jordi Boggiano <j.boggiano@seld.be>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Composer\Autoload;

/**
 * ClassLoader implements a PSR-0, PSR-4 and classmap class loader.
 *
 *     $loader = new \Composer\Autoload\ClassLoader();
 *
 *     // register classes with namespaces
 *     $loader->add('Symfony\Component', __DIR__.'/component');
 *     $loader->add('Symfony',           __DIR__.'/framework');
 *
 *     // activate the autoloader
 *     $loader->register();
 *
 *     // to enable searching the include path (eg. for PEAR packages)
 *     $loader->setUseIncludePath(true);
 *
 * In this example, if you try to use a class in the Symfony\Component
 * namespace or one of its children (Symfony\Component\Console for instance),
 * the autoloader will first look for the class under the component/
 * directory, and it will then fallback to the framework/ directory if not
 * found before giving up.
 *
 * This class is loosely based on the Symfony UniversalClassLoader.
 *
 * @author Fabien Potencier <fabien@symfony.com>
 * @author Jordi Boggiano <j.boggiano@seld.be>
 * @see    https://www.php-fig.org/psr/psr-0/
 * @see    https://www.php-fig.org/psr/psr-4/
 */
class ClassLoader
{
    /** @var \Closure(string):void */
    private static $includeFile;

    /** @var string|null */
    private $vendorDir;

    // PSR-4
    /**
     * @var array<string, array<string, int>>
     */
    private $prefixLengthsPsr4 = array();
    /**
     * @var array<string, list<string>>
     */
    private $prefixDirsPsr4 = array();
    /**
     * @var list<string>
     */
    private $fallbackDirsPsr4 = array();

    // PSR-0
    /**
     * List of PSR-0 prefixes
     *
     * Structured as array('F (first letter)' => array('Foo\Bar (full prefix)' => array('path', 'path2')))
     *
     * @var array<string, array<string, list<string>>>
     */
    private $prefixesPsr0 = array();
    /**
     * @var list<string>
     */
    private $fallbackDirsPsr0 = array();

    /** @var bool */
    private $useIncludePath = false;

    /**
     * @var array<string, string>
     */
    private $classMap = array();

    /** @var bool */
    private $classMapAuthoritative = false;

    /**
     * @var array<string, bool>
     */
    private $missingClasses = array();

    /** @var string|null */
    private $apcuPrefix;

    /**
     * @var array<string, self>
     */
    private static $registeredLoaders = array();

    /**
     * @param string|null $vendorDir
     */
    public function __construct($vendorDir = null)
    {
        $this->vendorDir = $vendorDir;
        self::initializeIncludeClosure();
    }

    /**
     * @return array<string, list<string>>
     */
    public function getPrefixes()
    {
        if (!empty($this->prefixesPsr0)) {
            return call_user_func_array('array_merge', array_values($this->prefixesPsr0));
        }

        return array();
    }

    /**
     * @return array<string, list<string>>
     */
    public function getPrefixesPsr4()
    {
        return $this->prefixDirsPsr4;
    }

    /**
     * @return list<string>
     */
    public function getFallbackDirs()
    {
        return $this->fallbackDirsPsr0;
    }

    /**
     * @return list<string>
     */
    public function getFallbackDirsPsr4()
    {
        return $this->fallbackDirsPsr4;
    }

    /**
     * @return array<string, string> Array of classname => path
     */
    public function getClassMap()
    {
        return $this->classMap;
    }

    /**
     * @param array<string, string> $classMap Class to filename map
     *
     * @return void
     */
    public function addClassMap(array $classMap)
    {
        if ($this->classMap) {
            $this->classMap = array_merge($this->classMap, $classMap);
        } else {
            $this->classMap = $classMap;
        }
    }

    /**
     * Registers a set of PSR-0 directories for a given prefix, either
     * appending or prepending to the ones previously set for this prefix.
     *
     * @param string              $prefix  The prefix
     * @param list<string>|string $paths   The PSR-0 root directories
     * @param bool                $prepend Whether to prepend the directories
     *
     * @return void
     */
    public function add($prefix, $paths, $prepend = false)
    {
        $paths = (array) $paths;
        if (!$prefix) {
            if ($prepend) {
                $this->fallbackDirsPsr0 = array_merge(
                    $paths,
                    $this->fallbackDirsPsr0
                );
            } else {
                $this->fallbackDirsPsr0 = array_merge(
                    $this->fallbackDirsPsr0,
                    $paths
                );
            }

            return;
        }

        $first = $prefix[0];
        if (!isset($this->prefixesPsr0[$first][$prefix])) {
            $this->prefixesPsr0[$first][$prefix] = $paths;

            return;
        }
        if ($prepend) {
            $this->prefixesPsr0[$first][$prefix] = array_merge(
                $paths,
                $this->prefixesPsr0[$first][$prefix]
            );
        } else {
            $this->prefixesPsr0[$first][$prefix] = array_merge(
                $this->prefixesPsr0[$first][$prefix],
                $paths
            );
        }
    }

    /**
     * Registers a set of PSR-4 directories for a given namespace, either
     * appending or prepending to the ones previously set for this namespace.
     *
     * @param string              $prefix  The prefix/namespace, with trailing '\\'
     * @param list<string>|string $paths   The PSR-4 base directories
     * @param bool                $prepend Whether to prepend the directories
     *
     * @throws \InvalidArgumentException
     *
     * @return void
     */
    public function addPsr4($prefix, $paths, $prepend = false)
    {
        $paths = (array) $paths;
        if (!$prefix) {
            // Register directories for the root namespace.
            if ($prepend) {
                $this->fallbackDirsPsr4 = array_merge(
                    $paths,
                    $this->fallbackDirsPsr4
                );
            } else {
                $this->fallbackDirsPsr4 = array_merge(
                    $this->fallbackDirsPsr4,
                    $paths
                );
            }
        } elseif (!isset($this->prefixDirsPsr4[$prefix])) {
            // Register directories for a new namespace.
            $length = strlen($prefix);
            if ('\\' !== $prefix[$length - 1]) {
                throw new \InvalidArgumentException("A non-empty PSR-4 prefix must end with a namespace separator.");
            }
            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;
            $this->prefixDirsPsr4[$prefix] = $paths;
        } elseif ($prepend) {
            // Prepend directories for an already registered namespace.
            $this->prefixDirsPsr4[$prefix] = array_merge(
                $paths,
                $this->prefixDirsPsr4[$prefix]
            );
        } else {
            // Append directories for an already registered namespace.
            $this->prefixDirsPsr4[$prefix] = array_merge(
                $this->prefixDirsPsr4[$prefix],
                $paths
            );
        }
    }

    /**
     * Registers a set of PSR-0 directories for a given prefix,
     * replacing any others previously set for this prefix.
     *
     * @param string              $prefix The prefix
     * @param list<string>|string $paths  The PSR-0 base directories
     *
     * @return void
     */
    public function set($prefix, $paths)
    {
        if (!$prefix) {
            $this->fallbackDirsPsr0 = (array) $paths;
        } else {
            $this->prefixesPsr0[$prefix[0]][$prefix] = (array) $paths;
        }
    }

    /**
     * Registers a set of PSR-4 directories for a given namespace,
     * replacing any others previously set for this namespace.
     *
     * @param string              $prefix The prefix/namespace, with trailing '\\'
     * @param list<string>|string $paths  The PSR-4 base directories
     *
     * @throws \InvalidArgumentException
     *
     * @return void
     */
    public function setPsr4($prefix, $paths)
    {
        if (!$prefix) {
            $this->fallbackDirsPsr4 = (array) $paths;
        } else {
            $length = strlen($prefix);
            if ('\\' !== $prefix[$length - 1]) {
                throw new \InvalidArgumentException("A non-empty PSR-4 prefix must end with a namespace separator.");
            }
            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;
            $this->prefixDirsPsr4[$prefix] = (array) $paths;
        }
    }

    /**
     * Turns on searching the include path for class files.
     *
     * @param bool $useIncludePath
     *
     * @return void
     */
    public function setUseIncludePath($useIncludePath)
    {
        $this->useIncludePath = $useIncludePath;
    }

    /**
     * Can be used to check if the autoloader uses the include path to check
     * for classes.
     *
     * @return bool
     */
    public function getUseIncludePath()
    {
        return $this->useIncludePath;
    }

    /**
     * Turns off searching the prefix and fallback directories for classes
     * that have not been registered with the class map.
     *
     * @param bool $classMapAuthoritative
     *
     * @return void
     */
    public function setClassMapAuthoritative($classMapAuthoritative)
    {
        $this->classMapAuthoritative = $classMapAuthoritative;
    }

    /**
     * Should class lookup fail if not found in the current class map?
     *
     * @return bool
     */
    public function isClassMapAuthoritative()
    {
        return $this->classMapAuthoritative;
    }

    /**
     * APCu prefix to use to cache found/not-found classes, if the extension is enabled.
     *
     * @param string|null $apcuPrefix
     *
     * @return void
     */
    public function setApcuPrefix($apcuPrefix)
    {
        $this->apcuPrefix = function_exists('apcu_fetch') && filter_var(ini_get('apc.enabled'), FILTER_VALIDATE_BOOLEAN) ? $apcuPrefix : null;
    }

    /**
     * The APCu prefix in use, or null if APCu caching is not enabled.
     *
     * @return string|null
     */
    public function getApcuPrefix()
    {
        return $this->apcuPrefix;
    }

    /**
     * Registers this instance as an autoloader.
     *
     * @param bool $prepend Whether to prepend the autoloader or not
     *
     * @return void
     */
    public function register($prepend = false)
    {
        spl_autoload_register(array($this, 'loadClass'), true, $prepend);

        if (null === $this->vendorDir) {
            return;
        }

        if ($prepend) {
            self::$registeredLoaders = array($this->vendorDir => $this) + self::$registeredLoaders;
        } else {
            unset(self::$registeredLoaders[$this->vendorDir]);
            self::$registeredLoaders[$this->vendorDir] = $this;
        }
    }

    /**
     * Unregisters this instance as an autoloader.
     *
     * @return void
     */
    public function unregister()
    {
        spl_autoload_unregister(array($this, 'loadClass'));

        if (null !== $this->vendorDir) {
            unset(self::$registeredLoaders[$this->vendorDir]);
        }
    }

    /**
     * Loads the given class or interface.
     *
     * @param  string    $class The name of the class
     * @return true|null True if loaded, null otherwise
     */
    public function loadClass($class)
    {
        if ($file = $this->findFile($class)) {
            $includeFile = self::$includeFile;
            $includeFile($file);

            return true;
        }

        return null;
    }

    /**
     * Finds the path to the file where the class is defined.
     *
     * @param string $class The name of the class
     *
     * @return string|false The path if found, false otherwise
     */
    public function findFile($class)
    {
        // class map lookup
        if (isset($this->classMap[$class])) {
            return $this->classMap[$class];
        }
        if ($this->classMapAuthoritative || isset($this->missingClasses[$class])) {
            return false;
        }
        if (null !== $this->apcuPrefix) {
            $file = apcu_fetch($this->apcuPrefix.$class, $hit);
            if ($hit) {
                return $file;
            }
        }

        $file = $this->findFileWithExtension($class, '.php');

        // Search for Hack files if we are running on HHVM
        if (false === $file && defined('HHVM_VERSION')) {
            $file = $this->findFileWithExtension($class, '.hh');
        }

        if (null !== $this->apcuPrefix) {
            apcu_add($this->apcuPrefix.$class, $file);
        }

        if (false === $file) {
            // Remember that this class does not exist.
            $this->missingClasses[$class] = true;
        }

        return $file;
    }

    /**
     * Returns the currently registered loaders keyed by their corresponding vendor directories.
     *
     * @return array<string, self>
     */
    public static function getRegisteredLoaders()
    {
        return self::$registeredLoaders;
    }

    /**
     * @param  string       $class
     * @param  string       $ext
     * @return string|false
     */
    private function findFileWithExtension($class, $ext)
    {
        // PSR-4 lookup
        $logicalPathPsr4 = strtr($class, '\\', DIRECTORY_SEPARATOR) . $ext;

        $first = $class[0];
        if (isset($this->prefixLengthsPsr4[$first])) {
            $subPath = $class;
            while (false !== $lastPos = strrpos($subPath, '\\')) {
                $subPath = substr($subPath, 0, $lastPos);
                $search = $subPath . '\\';
                if (isset($this->prefixDirsPsr4[$search])) {
                    $pathEnd = DIRECTORY_SEPARATOR . substr($logicalPathPsr4, $lastPos + 1);
                    foreach ($this->prefixDirsPsr4[$search] as $dir) {
                        if (file_exists($file = $dir . $pathEnd)) {
                            return $file;
                        }
                    }
                }
            }
        }

        // PSR-4 fallback dirs
        foreach ($this->fallbackDirsPsr4 as $dir) {
            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr4)) {
                return $file;
            }
        }

        // PSR-0 lookup
        if (false !== $pos = strrpos($class, '\\')) {
            // namespaced class name
            $logicalPathPsr0 = substr($logicalPathPsr4, 0, $pos + 1)
                . strtr(substr($logicalPathPsr4, $pos + 1), '_', DIRECTORY_SEPARATOR);
        } else {
            // PEAR-like class name
            $logicalPathPsr0 = strtr($class, '_', DIRECTORY_SEPARATOR) . $ext;
        }

        if (isset($this->prefixesPsr0[$first])) {
            foreach ($this->prefixesPsr0[$first] as $prefix => $dirs) {
                if (0 === strpos($class, $prefix)) {
                    foreach ($dirs as $dir) {
                        if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {
                            return $file;
                        }
                    }
                }
            }
        }

        // PSR-0 fallback dirs
        foreach ($this->fallbackDirsPsr0 as $dir) {
            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {
                return $file;
            }
        }

        // PSR-0 include paths.
        if ($this->useIncludePath && $file = stream_resolve_include_path($logicalPathPsr0)) {
            return $file;
        }

        return false;
    }

    /**
     * @return void
     */
    private static function initializeIncludeClosure()
    {
        if (self::$includeFile !== null) {
            return;
        }

        /**
         * Scope isolated include.
         *
         * Prevents access to $this/self from included files.
         *
         * @param  string $file
         * @return void
         */
        self::$includeFile = \Closure::bind(static function($file) {
            include $file;
        }, null, null);
    }
}



================================================
FILE: portfolio-website/vendor/composer/LICENSE
================================================

Copyright (c) Nils Adermann, Jordi Boggiano

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is furnished
to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.



